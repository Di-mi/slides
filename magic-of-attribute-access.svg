<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xmlns:ns1="http://sozi.baierouge.fr"
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="2945.46"
   height="1863.2386"
   id="svg2"
   version="1.1"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="magic-of-attribute-access.svg">
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="1.8101934"
     inkscape:cx="7363.1082"
     inkscape:cy="14069.696"
     inkscape:document-units="px"
     inkscape:current-layer="layer1"
     showgrid="false"
     inkscape:window-width="1887"
     inkscape:window-height="1025"
     inkscape:window-x="30"
     inkscape:window-y="-3"
     inkscape:window-maximized="1"
     fit-margin-top="0"
     fit-margin-left="0"
     fit-margin-right="0"
     fit-margin-bottom="0" />
  <defs
     id="defs4">
    <style
       type="text/css"
       id="style9456">.xx-important-term {
    text-shadow: 0px 0px 5px red;
}
tspan:hover {
	background-color: red;
    text-shadow: 0px 0px 5px red;
}
text, tspan {
	cursor: default;
}
tspan.the-dot {
	cursor: default;
    text-shadow: 0px 0px 5px blue;
    text-shadow: 0px 0px 5px blue;
    text-shadow: 0px 0px 5px blue;
}</style>
  </defs>
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     transform="translate(3468.2387,-24373.293)"
     id="layer1"
     inkscape:groupmode="layer"
     inkscape:label="Layer 1">
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#ffffff;stroke-width:0.99999988;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide1"
       width="148643.02"
       height="84015.195"
       x="-62845.051"
       y="-62434.113" />
    <g
       transform="matrix(0.36998624,-0.04848633,0.04848633,0.36998624,-32021.261,-38237.649)"
       id="g9486">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9480"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9482"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9484"
           x="-32582.543"
           y="-17825.713">&lt;</tspan></text>
    </g>
    <g
       id="g9491"
       transform="matrix(0.36968016,0.05076736,-0.05076736,0.36968016,-6114.472,-39613.22)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9493"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9495"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9497"
           sodipodi:role="line">&gt;</tspan></text>
    </g>
    <g
       transform="matrix(0.37314976,0,0,0.37314976,28775.625,-40959.569)"
       id="g9499">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9501"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9503"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9505"
           x="-32582.543"
           y="-17825.713">==</tspan></text>
    </g>
    <g
       id="g9507"
       transform="matrix(0.37314976,0,0,0.37314976,63575.625,-41259.569)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9509"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9511"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9513"
           sodipodi:role="line">!=</tspan></text>
    </g>
    <g
       transform="matrix(0.36628066,-0.07126865,0.07126865,0.36628066,990.422,-22887.809)"
       id="g9515">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9517"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9519"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9521"
           x="-32582.543"
           y="-17825.713">|</tspan></text>
    </g>
    <g
       id="g9523"
       transform="matrix(0.36575532,0.07391745,-0.07391745,0.36575532,79738.508,-20880.853)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9525"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9527"
         y="-16083.811"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-16083.811"
           x="-32582.543"
           id="tspan9529"
           sodipodi:role="line">&amp;</tspan></text>
    </g>
    <g
       transform="matrix(0.37314976,0,0,0.37314976,41075.625,-21259.569)"
       id="g9531">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9533"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9535"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9537"
           x="-32582.543"
           y="-17825.713">^</tspan></text>
    </g>
    <g
       id="g9539"
       transform="matrix(0.37314976,0,0,0.37314976,69675.625,-3559.569)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9541"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9543"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9545"
           sodipodi:role="line">/</tspan></text>
    </g>
    <g
       transform="matrix(0.36650138,0.07012478,-0.07012478,0.36650138,-31619.367,-3481.2523)"
       id="g9547">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9549"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9551"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9553"
           x="-32582.543"
           y="-17825.713">+</tspan></text>
    </g>
    <g
       id="g9555"
       transform="matrix(0.36756196,0.06433466,-0.06433466,0.36756196,35095.055,763.03718)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9557"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9559"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9561"
           sodipodi:role="line">*</tspan></text>
    </g>
    <g
       id="g9563"
       transform="matrix(0.37314976,0,0,0.37314976,6575.625,-659.569)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9565"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9567"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9569"
           sodipodi:role="line">-</tspan></text>
    </g>
    <g
       transform="matrix(0.36218232,0.08980372,-0.08980372,0.36218232,78228.596,20725.77)"
       id="g9571">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9573"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9575"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9577"
           x="-32582.543"
           y="-17825.713">~</tspan></text>
    </g>
    <g
       id="g9579"
       transform="matrix(0.36917034,-0.05435075,0.05435075,0.36917034,50934.329,18245.928)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9581"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9583"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9585"
           sodipodi:role="line">()</tspan></text>
    </g>
    <g
       transform="matrix(0.36489016,-0.07807634,0.07807634,0.36489016,-21568.113,17339.927)"
       id="g9587">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9589"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9591"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9593"
           x="-32582.543"
           y="-17825.713">[]</tspan></text>
    </g>
    <g
       id="g9595"
       transform="matrix(0.37314976,0,0,0.37314976,15875.625,19940.431)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9597"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <g
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         id="text9599">
        <path
           d="m -34672.387,-22786.65 4121.094,0 0,4960.937 -4121.094,0 0,-4960.937"
           style=""
           id="path17830" />
      </g>
    </g>
    <rect
       y="11013.721"
       x="1403.0137"
       height="2667.3608"
       width="4719.9453"
       id="slide2"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#ffffff;stroke-width:0.99999988;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <text
       sodipodi:linespacing="125%"
       id="text9470"
       y="13506.816"
       x="3755.4041"
       style="font-size:185.67677307px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         y="13506.816"
         x="3755.4041"
         id="tspan9472"
         sodipodi:role="line">Petr Viktorin</tspan></text>
    <text
       xml:space="preserve"
       style="font-size:236.18432617px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       x="3765.874"
       y="11281.814"
       id="text9474"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan9476"
         x="3765.874"
         y="11281.814">The Magic of Attribute Access</tspan></text>
    <g
       transform="matrix(0.49568094,0,0,0.49568094,4700.1502,-221.53065)"
       id="g22822">
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide20"
         width="473.01288"
         height="266.93079"
         x="-2998.0349"
         y="25806.631" />
      <rect
         y="25177.715"
         x="-3048.231"
         height="597.82642"
         width="1058.4622"
         id="slide23"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <rect
         style="fill:#00ffff;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742649;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide27"
         width="443.44904"
         height="250.1696"
         x="-2090.4275"
         y="24941.189" />
      <rect
         y="25074.189"
         x="-2232.2515"
         height="69.953041"
         width="124.56405"
         id="slide28"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide22"
         width="513.64062"
         height="289.88382"
         x="-3058.4834"
         y="25412.355" />
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide25"
         width="447.36334"
         height="252.42276"
         x="-2718.9971"
         y="24632.695" />
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide7"
         width="603.40656"
         height="340.62115"
         x="-1630.2417"
         y="24853.598" />
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide26"
         width="472.28516"
         height="266.509"
         x="-2740.2581"
         y="24677.365" />
      <rect
         y="24911.604"
         x="-1638.2139"
         height="92.391304"
         width="164.23074"
         id="rect9371"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <rect
         y="24823.791"
         x="-1631.6703"
         height="248.57144"
         width="440.54944"
         id="slide6"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <rect
         y="24890.975"
         x="-1630.2417"
         height="340.62115"
         width="603.40656"
         id="slide8"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide4"
         width="336.92307"
         height="190.00002"
         x="-1706.9899"
         y="24633.131" />
      <rect
         y="24632.855"
         x="-1865.2601"
         height="190.00002"
         width="336.92307"
         id="slide3"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <rect
         y="24633.131"
         x="-1528.4183"
         height="190.00002"
         width="336.92307"
         id="slide5"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <g
         id="g3163"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="translate(-1535.891,24660.77)">
        <text
           id="text3165"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan3167"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan3169"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">Object</tspan>:</text>
        <text
           id="text3171"
           xml:space="preserve"
           y="33"
           x="0">        <tspan
   id="tspan3173"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">pass</tspan></text>
        <text
           id="text3175"
           xml:space="preserve"
           y="52"
           x="0" />
        <text
           id="text3177"
           xml:space="preserve"
           y="71"
           x="0">    obj <tspan
   id="tspan3179"
   style="fill:#666666">=</tspan> Object()</text>
        <text
           id="text3181"
           xml:space="preserve"
           y="90"
           x="0" />
      </g>
      <g
         id="g3317"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="translate(-1535.8738,24755.761)">
        <text
           id="text3319"
           xml:space="preserve"
           y="14"
           x="0">    obj<tspan
   id="tspan3321"
   style="fill:#666666"
   class="the-dot">.</tspan>x <tspan
   id="tspan3323"
   style="fill:#666666"
   class="">=</tspan> <tspan
   id="tspan3325"
   style="fill:#666666">5</tspan>       <tspan
   id="tspan3327"
   style="fill:#008000">setattr</tspan>(obj, <tspan
   id="tspan3329"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan3331"
   style="fill:#ba2121">x</tspan><tspan
   id="tspan3333"
   style="fill:#ba2121">'</tspan>, <tspan
   id="tspan3335"
   style="fill:#666666">5</tspan>)  STORE_ATTR (<tspan
   id="tspan3337"
   style="fill:#666666">95</tspan>)</text>
        <text
           id="text3339"
           xml:space="preserve"
           y="33"
           x="0">    <tspan
   id="tspan3341"
   style="fill:#008000">print</tspan>(obj<tspan
   id="tspan3343"
   style="fill:#666666"
   class="the-dot">.</tspan>x)    <tspan
   id="tspan3345"
   style="fill:#008000">getattr</tspan>(obj, <tspan
   id="tspan3347"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan3349"
   style="fill:#ba2121">x</tspan><tspan
   id="tspan3351"
   style="fill:#ba2121">'</tspan>)     LOAD_ATTR (<tspan
   id="tspan3353"
   style="fill:#666666">106</tspan>)</text>
        <text
           id="text3355"
           xml:space="preserve"
           y="52"
           x="0">    <tspan
   id="tspan3357"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">del</tspan> obj<tspan
   id="tspan3359"
   style="fill:#666666"
   class="the-dot">.</tspan>x       <tspan
   id="tspan3361"
   style="fill:#008000">delattr</tspan>(obj, <tspan
   id="tspan3363"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan3365"
   style="fill:#ba2121">x</tspan><tspan
   id="tspan3367"
   style="fill:#ba2121">'</tspan>)     DELETE_ATTR (<tspan
   id="tspan3369"
   style="fill:#666666">96</tspan>)</text>
        <text
           id="text3371"
           xml:space="preserve"
           y="71"
           x="0" />
      </g>
      <g
         id="g3950"
         transform="translate(-1982.3464,24487.777)">
        <g
           transform="translate(394.23118,433.14462)"
           style="font-size:14px;font-family:monospace"
           font-size="14px"
           id="g3900">
          <text
             x="0"
             y="22"
             xml:space="preserve"
             id="text3902">__type__</text>
          <text
             x="0"
             y="51"
             xml:space="preserve"
             id="text3904">__dict__</text>
          <text
             x="0"
             y="71"
             xml:space="preserve"
             id="text3914" />
        </g>
        <rect
           y="427.83536"
           x="358.60416"
           height="84.600281"
           width="139.65359"
           id="rect3948"
           style="fill:none;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      </g>
      <g
         id="g4035"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="translate(-1444.0319,24912.2)">
        <text
           id="text4037"
           xml:space="preserve"
           y="14"
           x="0"><tspan
   id="tspan4039"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan4041"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">Square</tspan>:</text>
        <text
           id="text4043"
           xml:space="preserve"
           y="33"
           x="0">    <tspan
   id="tspan4045"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan4047"
   style="fill:#0000ff">get_area</tspan>(<tspan
   id="tspan4049"
   style="fill:#008000">self</tspan>):</text>
        <text
           id="text4051"
           xml:space="preserve"
           y="52"
           x="0">        <tspan
   id="tspan4053"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan4055"
   style="fill:#008000">self</tspan><tspan
   id="tspan4057"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan4059"
   style="fill:#666666">*</tspan><tspan
   id="tspan4061"
   style="fill:#666666">*</tspan> <tspan
   id="tspan4063"
   style="fill:#666666">2</tspan></text>
        <text
           id="text4065"
           xml:space="preserve"
           y="71"
           x="0" />
        <text
           id="text4067"
           xml:space="preserve"
           y="90"
           x="0">square <tspan
   id="tspan4069"
   style="fill:#666666">=</tspan> Square()</text>
        <text
           id="text4071"
           xml:space="preserve"
           y="109"
           x="0">square<tspan
   id="tspan4073"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan4075"
   style="fill:#666666">=</tspan> <tspan
   id="tspan4077"
   style="fill:#666666">5</tspan></text>
        <text
           id="text4079"
           xml:space="preserve"
           y="128"
           x="0" />
      </g>
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide10"
         width="603.40656"
         height="340.62115"
         x="-1551.6703"
         y="25261.934" />
      <rect
         y="25074.076"
         x="-1630.2417"
         height="340.62115"
         width="603.40656"
         id="slide9"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <g
         id="g4274"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="translate(-1546.3788,25038.309)">
        <text
           id="text4276"
           xml:space="preserve"
           y="14"
           x="0">            square<tspan
   id="tspan4278"
   style="fill:#666666">.</tspan>get_area()</text>
        <text
           id="text4280"
           xml:space="preserve"
           y="33"
           x="0" />
      </g>
      <g
         id="g4513"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="translate(-1469.8152,25271.673)">
        <text
           id="text4515"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan4517"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan4519"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">Proxy</tspan>:</text>
        <text
           id="text4521"
           xml:space="preserve"
           y="33"
           x="0">        <tspan
   id="tspan4523"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan4525"
   style="fill:#0000ff">__init__</tspan>(<tspan
   id="tspan4527"
   style="fill:#008000">self</tspan>, obj):</text>
        <text
           id="text4529"
           xml:space="preserve"
           y="52"
           x="0">            <tspan
   id="tspan4531"
   style="fill:#008000">self</tspan><tspan
   id="tspan4533"
   style="fill:#666666">.</tspan>_obj <tspan
   id="tspan4535"
   style="fill:#666666">=</tspan> obj</text>
        <text
           id="text4537"
           xml:space="preserve"
           y="71"
           x="0" />
        <text
           id="text4539"
           xml:space="preserve"
           y="90"
           x="0">        <tspan
   id="tspan4541"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan4543"
   class="important-term"
   style="fill:#0000ff">__getattr__</tspan>(<tspan
   id="tspan4545"
   style="fill:#008000">self</tspan>, attr_name):</text>
        <text
           id="text4547"
           xml:space="preserve"
           y="109"
           x="0">            <tspan
   id="tspan4549"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan4551"
   style="fill:#008000">getattr</tspan>(<tspan
   id="tspan4553"
   style="fill:#008000">self</tspan><tspan
   id="tspan4555"
   style="fill:#666666">.</tspan>_obj, attr_name)</text>
        <text
           id="text4557"
           xml:space="preserve"
           y="128"
           x="0" />
      </g>
      <g
         id="g4685"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="translate(-1472.0876,25423.887)">
        <text
           id="text4687"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan4689"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan4691"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">Proxy</tspan>:</text>
        <text
           id="text4693"
           xml:space="preserve"
           y="33"
           x="0">        <tspan
   id="tspan4695"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan4697"
   style="fill:#0000ff">__init__</tspan>(<tspan
   id="tspan4699"
   style="fill:#008000">self</tspan>, obj):</text>
        <text
           id="text4701"
           xml:space="preserve"
           y="52"
           x="0">            <tspan
   id="tspan4703"
   style="fill:#008000">self</tspan><tspan
   id="tspan4705"
   style="fill:#666666">.</tspan>_obj <tspan
   id="tspan4707"
   style="fill:#666666">=</tspan> obj</text>
        <text
           id="text4709"
           xml:space="preserve"
           y="71"
           x="0" />
        <text
           id="text4711"
           xml:space="preserve"
           y="90"
           x="0">        <tspan
   id="tspan4713"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan4715"
   style="fill:#0000ff"
   class="important-term">__getattribute__</tspan>(<tspan
   id="tspan4717"
   style="fill:#008000">self</tspan>, attr_name):</text>
        <text
           id="text4719"
           xml:space="preserve"
           y="109"
           x="0">            <tspan
   id="tspan4721"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">if</tspan> attr_name <tspan
   id="tspan4723"
   style="fill:#666666">==</tspan> <tspan
   id="tspan4725"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan4727"
   style="fill:#ba2121">_obj</tspan><tspan
   id="tspan4729"
   style="fill:#ba2121">'</tspan>:</text>
        <text
           id="text4731"
           xml:space="preserve"
           y="128"
           x="0">                <tspan
   id="tspan4733"
   style="fill:#008000">super</tspan>()<tspan
   id="tspan4735"
   style="fill:#666666">.</tspan>__getattribute__(attr_name)</text>
        <text
           id="text4737"
           xml:space="preserve"
           y="147"
           x="0">            <tspan
   id="tspan4739"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">else</tspan>:</text>
        <text
           id="text4741"
           xml:space="preserve"
           y="166"
           x="0">                <tspan
   id="tspan4743"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan4745"
   style="fill:#008000">getattr</tspan>(<tspan
   id="tspan4747"
   style="fill:#008000">self</tspan><tspan
   id="tspan4749"
   style="fill:#666666">.</tspan>_obj, attr_name)</text>
        <text
           id="text4751"
           xml:space="preserve"
           y="185"
           x="0" />
      </g>
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide15"
         width="802.15656"
         height="452.95813"
         x="-2554.3198"
         y="25234.445" />
      <g
         id="g4940"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="translate(-1752.6344,25630.896)">
        <text
           id="text4942"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan4944"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan4946"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">DictProxy</tspan>:</text>
        <text
           id="text4948"
           xml:space="preserve"
           y="33"
           x="0">        <tspan
   id="tspan4950"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan4952"
   style="fill:#0000ff">__init__</tspan>(<tspan
   id="tspan4954"
   style="fill:#008000">self</tspan>):</text>
        <text
           id="text4956"
           xml:space="preserve"
           y="52"
           x="0">            <tspan
   id="tspan4958"
   style="fill:#008000">self</tspan><tspan
   id="tspan4960"
   style="fill:#666666">.</tspan>_dict <tspan
   id="tspan4962"
   style="fill:#666666">=</tspan> {}</text>
        <text
           id="text4964"
           xml:space="preserve"
           y="71"
           x="0" />
        <text
           id="text4966"
           xml:space="preserve"
           y="90"
           x="0">        <tspan
   id="tspan4968"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan4970"
   style="fill:#0000ff">__getattr__</tspan>(<tspan
   id="tspan4972"
   style="fill:#008000">self</tspan>, attr_name):</text>
        <text
           id="text4974"
           xml:space="preserve"
           y="109"
           x="0">            <tspan
   id="tspan4976"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">try</tspan>:</text>
        <text
           id="text4978"
           xml:space="preserve"
           y="128"
           x="0">                <tspan
   id="tspan4980"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan4982"
   style="fill:#008000">self</tspan><tspan
   id="tspan4984"
   style="fill:#666666">.</tspan>_dict[attr_name]</text>
        <text
           id="text4986"
           xml:space="preserve"
           y="147"
           x="0">            <tspan
   id="tspan4988"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">except</tspan> <tspan
   id="tspan4990"
   font-weight="bold"
   style="font-weight:bold;fill:#d2413a">KeyError</tspan>:</text>
        <text
           id="text4992"
           xml:space="preserve"
           y="166"
           x="0">                <tspan
   id="tspan4994"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">raise</tspan> <tspan
   id="tspan4996"
   font-weight="bold"
   style="font-weight:bold;fill:#d2413a">AttributeError</tspan>(attr_name)</text>
        <text
           id="text4998"
           xml:space="preserve"
           y="185"
           x="0" />
        <text
           id="text5000"
           xml:space="preserve"
           y="204"
           x="0">        <tspan
   id="tspan5002"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan5004"
   style="fill:#0000ff">__setattr__</tspan>(<tspan
   id="tspan5006"
   style="fill:#008000">self</tspan>, attr_name, value):</text>
        <text
           id="text5008"
           xml:space="preserve"
           y="223"
           x="0">            <tspan
   id="tspan5010"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">if</tspan> attr_name <tspan
   id="tspan5012"
   style="fill:#666666">!=</tspan> <tspan
   id="tspan5014"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan5016"
   style="fill:#ba2121">_dict</tspan><tspan
   id="tspan5018"
   style="fill:#ba2121">'</tspan>:</text>
        <text
           id="text5020"
           xml:space="preserve"
           y="242"
           x="0">                <tspan
   id="tspan5022"
   style="fill:#008000">self</tspan><tspan
   id="tspan5024"
   style="fill:#666666">.</tspan>_dict[attr_name] <tspan
   id="tspan5026"
   style="fill:#666666">=</tspan> value</text>
        <text
           id="text5028"
           xml:space="preserve"
           y="261"
           x="0">            <tspan
   id="tspan5030"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">else</tspan>:</text>
        <text
           id="text5032"
           xml:space="preserve"
           y="280"
           x="0">                <tspan
   id="tspan5034"
   style="fill:#008000">super</tspan>()<tspan
   id="tspan5036"
   style="fill:#666666">.</tspan>__setattr__(attr_name, value)</text>
        <text
           id="text5038"
           xml:space="preserve"
           y="299"
           x="0" />
        <text
           id="text5040"
           xml:space="preserve"
           y="318"
           x="0">        <tspan
   id="tspan5042"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan5044"
   style="fill:#0000ff">__delattr__</tspan>(<tspan
   id="tspan5046"
   style="fill:#008000">self</tspan>, attr_name):</text>
        <text
           id="text5048"
           xml:space="preserve"
           y="337"
           x="0">            <tspan
   id="tspan5050"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">del</tspan> <tspan
   id="tspan5052"
   style="fill:#008000">self</tspan><tspan
   id="tspan5054"
   style="fill:#666666">.</tspan>_dict[attr_name]</text>
        <text
           id="text5056"
           xml:space="preserve"
           y="356"
           x="0" />
      </g>
      <rect
         y="25779.494"
         x="-2414.9905"
         height="246.33627"
         width="436.59491"
         id="slide16"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <g
         id="g5584"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="matrix(0.54342961,0,0,0.54299204,-2307.4275,25789.508)">
        <text
           id="text5586"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan5588"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">import</tspan> <tspan
   id="tspan5590"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">math</tspan></text>
        <text
           id="text5592"
           xml:space="preserve"
           y="33"
           x="0" />
        <text
           id="text5594"
           xml:space="preserve"
           y="52"
           x="0">    <tspan
   id="tspan5596"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan5598"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">AreaDescriptor</tspan>:</text>
        <text
           id="text5600"
           xml:space="preserve"
           y="71"
           x="0">        <tspan
   id="tspan5602"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan5604"
   style="fill:#0000ff">__get__</tspan>(<tspan
   id="tspan5606"
   style="fill:#008000">self</tspan>, instance, owner_class<tspan
   id="tspan5608"
   style="fill:#666666">=</tspan><tspan
   id="tspan5610"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">None</tspan>):</text>
        <text
           id="text5612"
           xml:space="preserve"
           y="90"
           x="0">            <tspan
   id="tspan5614"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">if</tspan> instance:</text>
        <text
           id="text5616"
           xml:space="preserve"
           y="109"
           x="0">                <tspan
   id="tspan5618"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> instance<tspan
   id="tspan5620"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan5622"
   style="fill:#666666">*</tspan><tspan
   id="tspan5624"
   style="fill:#666666">*</tspan> <tspan
   id="tspan5626"
   style="fill:#666666">2</tspan></text>
        <text
           id="text5628"
           xml:space="preserve"
           y="128"
           x="0">            <tspan
   id="tspan5630"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">else</tspan>:</text>
        <text
           id="text5632"
           xml:space="preserve"
           y="147"
           x="0">                <tspan
   id="tspan5634"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan5636"
   style="fill:#008000">self</tspan></text>
        <text
           id="text5638"
           xml:space="preserve"
           y="166"
           x="0" />
        <text
           id="text5640"
           xml:space="preserve"
           y="185"
           x="0">        <tspan
   id="tspan5642"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan5644"
   style="fill:#0000ff">__set__</tspan>(<tspan
   id="tspan5646"
   style="fill:#008000">self</tspan>, instance, value):</text>
        <text
           id="text5648"
           xml:space="preserve"
           y="204"
           x="0">            instance<tspan
   id="tspan5650"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan5652"
   style="fill:#666666">=</tspan> math<tspan
   id="tspan5654"
   style="fill:#666666">.</tspan>sqrt(value)</text>
        <text
           id="text5656"
           xml:space="preserve"
           y="223"
           x="0" />
        <text
           id="text5658"
           xml:space="preserve"
           y="242"
           x="0">    <tspan
   id="tspan5660"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan5662"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">Square</tspan>:</text>
        <text
           id="text5664"
           xml:space="preserve"
           y="261"
           x="0">        area <tspan
   id="tspan5666"
   style="fill:#666666">=</tspan> AreaDescriptor()</text>
        <text
           id="text5668"
           xml:space="preserve"
           y="280"
           x="0" />
        <text
           id="text5670"
           xml:space="preserve"
           y="299"
           x="0">    square <tspan
   id="tspan5672"
   style="fill:#666666">=</tspan> Square()</text>
        <text
           id="text5674"
           xml:space="preserve"
           y="318"
           x="0" />
        <text
           id="text5676"
           xml:space="preserve"
           y="337"
           x="0">    square<tspan
   id="tspan5678"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan5680"
   style="fill:#666666">=</tspan> <tspan
   id="tspan5682"
   style="fill:#666666">5</tspan></text>
        <text
           id="text5684"
           xml:space="preserve"
           y="356"
           x="0">    <tspan
   id="tspan5686"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">assert</tspan> square<tspan
   id="tspan5688"
   style="fill:#666666">.</tspan>area <tspan
   id="tspan5690"
   style="fill:#666666">==</tspan> <tspan
   id="tspan5692"
   style="fill:#666666">25</tspan></text>
        <text
           id="text5694"
           xml:space="preserve"
           y="375"
           x="0" />
        <text
           id="text5696"
           xml:space="preserve"
           y="394"
           x="0">    square<tspan
   id="tspan5698"
   style="fill:#666666">.</tspan>area <tspan
   id="tspan5700"
   style="fill:#666666">=</tspan> <tspan
   id="tspan5702"
   style="fill:#666666">16</tspan></text>
        <text
           id="text5704"
           xml:space="preserve"
           y="413"
           x="0">    <tspan
   id="tspan5706"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">assert</tspan> square<tspan
   id="tspan5708"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan5710"
   style="fill:#666666">==</tspan> <tspan
   id="tspan5712"
   style="fill:#666666">4</tspan></text>
        <text
           id="text5714"
           xml:space="preserve"
           y="432"
           x="0" />
      </g>
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide18"
         width="389.00122"
         height="219.43549"
         x="-2661.8606"
         y="26016.588" />
      <g
         id="g6272"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="matrix(0.55262401,0,0,0.5520598,-2535.0034,26051.822)">
        <text
           id="text6274"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan6276"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">import</tspan> <tspan
   id="tspan6278"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">math</tspan></text>
        <text
           id="text6280"
           xml:space="preserve"
           y="33"
           x="0" />
        <text
           id="text6282"
           xml:space="preserve"
           y="52"
           x="0">    <tspan
   id="tspan6284"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan6286"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">AreaDescriptor</tspan>:</text>
        <text
           id="text6288"
           xml:space="preserve"
           y="71"
           x="0">        <tspan
   id="tspan6290"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan6292"
   style="fill:#0000ff">__get__</tspan>(<tspan
   id="tspan6294"
   style="fill:#008000">self</tspan>, instance, owner_class<tspan
   id="tspan6296"
   style="fill:#666666">=</tspan><tspan
   id="tspan6298"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">None</tspan>):</text>
        <text
           id="text6300"
           xml:space="preserve"
           y="90"
           x="0">            <tspan
   id="tspan6302"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">if</tspan> instance:</text>
        <text
           id="text6304"
           xml:space="preserve"
           y="109"
           x="0">                <tspan
   id="tspan6306"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> instance<tspan
   id="tspan6308"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan6310"
   style="fill:#666666">*</tspan><tspan
   id="tspan6312"
   style="fill:#666666">*</tspan> <tspan
   id="tspan6314"
   style="fill:#666666">2</tspan></text>
        <text
           id="text6316"
           xml:space="preserve"
           y="128"
           x="0">            <tspan
   id="tspan6318"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">else</tspan>:</text>
        <text
           id="text6320"
           xml:space="preserve"
           y="147"
           x="0">                <tspan
   id="tspan6322"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan6324"
   style="fill:#008000">self</tspan></text>
        <text
           id="text6326"
           xml:space="preserve"
           y="166"
           x="0" />
        <text
           id="text6328"
           xml:space="preserve"
           y="185"
           x="0">        <tspan
   id="tspan6330"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan6332"
   style="fill:#0000ff">__set__</tspan>(<tspan
   id="tspan6334"
   style="fill:#008000">self</tspan>, instance, value):</text>
        <text
           id="text6336"
           xml:space="preserve"
           y="204"
           x="0">            instance<tspan
   id="tspan6338"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan6340"
   style="fill:#666666">=</tspan> math<tspan
   id="tspan6342"
   style="fill:#666666">.</tspan>sqrt(value)</text>
        <text
           id="text6344"
           xml:space="preserve"
           y="223"
           x="0" />
        <text
           id="text6346"
           xml:space="preserve"
           y="242"
           x="0">        <tspan
   id="tspan6348"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan6350"
   style="fill:#0000ff">__del__</tspan>(<tspan
   id="tspan6352"
   style="fill:#008000">self</tspan>, instance):</text>
        <text
           id="text6354"
           xml:space="preserve"
           y="261"
           x="0">            <tspan
   id="tspan6356"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">del</tspan> instance<tspan
   id="tspan6358"
   style="fill:#666666">.</tspan>side</text>
        <text
           id="text6360"
           xml:space="preserve"
           y="280"
           x="0" />
      </g>
      <g
         id="g6558"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="matrix(0.44691477,0,0,0.44651623,-2971.1657,25809.863)">
        <text
           id="text6560"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan6562"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan6564"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">Property</tspan>(<tspan
   id="tspan6566"
   style="fill:#008000">object</tspan>):</text>
        <text
           id="text6568"
           xml:space="preserve"
           y="33"
           x="0">        <tspan
   id="tspan6570"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan6572"
   style="fill:#0000ff">__init__</tspan>(<tspan
   id="tspan6574"
   style="fill:#008000">self</tspan>, fget, fset, fdel):</text>
        <text
           id="text6576"
           xml:space="preserve"
           y="52"
           x="0">            <tspan
   id="tspan6578"
   style="fill:#008000">self</tspan><tspan
   id="tspan6580"
   style="fill:#666666">.</tspan>fget <tspan
   id="tspan6582"
   style="fill:#666666">=</tspan> fget</text>
        <text
           id="text6584"
           xml:space="preserve"
           y="71"
           x="0">            <tspan
   id="tspan6586"
   style="fill:#008000">self</tspan><tspan
   id="tspan6588"
   style="fill:#666666">.</tspan>fset <tspan
   id="tspan6590"
   style="fill:#666666">=</tspan> fset</text>
        <text
           id="text6592"
           xml:space="preserve"
           y="90"
           x="0">            <tspan
   id="tspan6594"
   style="fill:#008000">self</tspan><tspan
   id="tspan6596"
   style="fill:#666666">.</tspan>fdel <tspan
   id="tspan6598"
   style="fill:#666666">=</tspan> fdel</text>
        <text
           id="text6600"
           xml:space="preserve"
           y="109"
           x="0" />
        <text
           id="text6602"
           xml:space="preserve"
           y="128"
           x="0">        <tspan
   id="tspan6604"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan6606"
   style="fill:#0000ff">__get__</tspan>(<tspan
   id="tspan6608"
   style="fill:#008000">self</tspan>, obj, objtype<tspan
   id="tspan6610"
   style="fill:#666666">=</tspan><tspan
   id="tspan6612"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">None</tspan>):</text>
        <text
           id="text6614"
           xml:space="preserve"
           y="147"
           x="0">            <tspan
   id="tspan6616"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">if</tspan> obj <tspan
   id="tspan6618"
   font-weight="bold"
   style="font-weight:bold;fill:#aa22ff">is</tspan> <tspan
   id="tspan6620"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">None</tspan>:</text>
        <text
           id="text6622"
           xml:space="preserve"
           y="166"
           x="0">                <tspan
   id="tspan6624"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan6626"
   style="fill:#008000">self</tspan></text>
        <text
           id="text6628"
           xml:space="preserve"
           y="185"
           x="0">            <tspan
   id="tspan6630"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">else</tspan>:</text>
        <text
           id="text6632"
           xml:space="preserve"
           y="204"
           x="0">                <tspan
   id="tspan6634"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan6636"
   style="fill:#008000">self</tspan><tspan
   id="tspan6638"
   style="fill:#666666">.</tspan>fget(obj)</text>
        <text
           id="text6640"
           xml:space="preserve"
           y="223"
           x="0" />
        <text
           id="text6642"
           xml:space="preserve"
           y="242"
           x="0">        <tspan
   id="tspan6644"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan6646"
   style="fill:#0000ff">__set__</tspan>(<tspan
   id="tspan6648"
   style="fill:#008000">self</tspan>, obj, value):</text>
        <text
           id="text6650"
           xml:space="preserve"
           y="261"
           x="0">            <tspan
   id="tspan6652"
   style="fill:#008000">self</tspan><tspan
   id="tspan6654"
   style="fill:#666666">.</tspan>fset(obj, value)</text>
        <text
           id="text6656"
           xml:space="preserve"
           y="280"
           x="0" />
        <text
           id="text6658"
           xml:space="preserve"
           y="299"
           x="0">        <tspan
   id="tspan6660"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan6662"
   style="fill:#0000ff">__delete__</tspan>(<tspan
   id="tspan6664"
   style="fill:#008000">self</tspan>, obj):</text>
        <text
           id="text6666"
           xml:space="preserve"
           y="318"
           x="0">            <tspan
   id="tspan6668"
   style="fill:#008000">self</tspan><tspan
   id="tspan6670"
   style="fill:#666666">.</tspan>fdel(obj)</text>
        <text
           id="text6672"
           xml:space="preserve"
           y="337"
           x="0" />
      </g>
      <g
         id="g6946"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="matrix(0.44691477,0,0,0.44651623,-2887.6977,25971.13)">
        <text
           id="text6948"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan6950"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan6952"
   style="fill:#0000ff">_set_area</tspan>(<tspan
   id="tspan6954"
   style="fill:#008000">self</tspan>, value):</text>
        <text
           id="text6956"
           xml:space="preserve"
           y="33"
           x="0">        <tspan
   id="tspan6958"
   style="fill:#008000">self</tspan><tspan
   id="tspan6960"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan6962"
   style="fill:#666666">=</tspan> math<tspan
   id="tspan6964"
   style="fill:#666666">.</tspan>sqrt(value)</text>
        <text
           id="text6966"
           xml:space="preserve"
           y="52"
           x="0" />
        <text
           id="text6968"
           xml:space="preserve"
           y="71"
           x="0">    <tspan
   id="tspan6970"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan6972"
   style="fill:#0000ff">_get_area</tspan>(<tspan
   id="tspan6974"
   style="fill:#008000">self</tspan>):</text>
        <text
           id="text6976"
           xml:space="preserve"
           y="90"
           x="0">        <tspan
   id="tspan6978"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan6980"
   style="fill:#008000">self</tspan><tspan
   id="tspan6982"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan6984"
   style="fill:#666666">*</tspan><tspan
   id="tspan6986"
   style="fill:#666666">*</tspan> <tspan
   id="tspan6988"
   style="fill:#666666">2</tspan></text>
        <text
           id="text6990"
           xml:space="preserve"
           y="109"
           x="0" />
        <text
           id="text6992"
           xml:space="preserve"
           y="128"
           x="0">    <tspan
   id="tspan6994"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan6996"
   style="fill:#0000ff">_del_area</tspan>(<tspan
   id="tspan6998"
   style="fill:#008000">self</tspan>):</text>
        <text
           id="text7000"
           xml:space="preserve"
           y="147"
           x="0">        <tspan
   id="tspan7002"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">del</tspan> <tspan
   id="tspan7004"
   style="fill:#008000">self</tspan><tspan
   id="tspan7006"
   style="fill:#666666">.</tspan>side</text>
        <text
           id="text7008"
           xml:space="preserve"
           y="166"
           x="0" />
        <text
           id="text7010"
           xml:space="preserve"
           y="185"
           x="0">    <tspan
   id="tspan7012"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan7014"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">Square</tspan>:</text>
        <text
           id="text7016"
           xml:space="preserve"
           y="204"
           x="0">        area <tspan
   id="tspan7018"
   style="fill:#666666">=</tspan> Property(_get_area, _set_area, _del_area)</text>
        <text
           id="text7020"
           xml:space="preserve"
           y="223"
           x="0" />
      </g>
      <g
         id="g7155"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="translate(-3221.6739,25727.58)">
        <text
           id="text7157"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan7159"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan7161"
   style="fill:#666666">&gt;</tspan> <tspan
   id="tspan7163"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan7165"
   style="fill:#0000ff">f</tspan>():</text>
        <text
           id="text7167"
           xml:space="preserve"
           y="33"
           x="0">    <tspan
   id="tspan7169"
   style="fill:#666666">.</tspan><tspan
   id="tspan7171"
   style="fill:#666666">.</tspan><tspan
   id="tspan7173"
   style="fill:#666666">.</tspan>     <tspan
   id="tspan7175"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">pass</tspan></text>
        <text
           id="text7177"
           xml:space="preserve"
           y="52"
           x="0">    <tspan
   id="tspan7179"
   style="fill:#666666">.</tspan><tspan
   id="tspan7181"
   style="fill:#666666">.</tspan><tspan
   id="tspan7183"
   style="fill:#666666">.</tspan> </text>
        <text
           id="text7185"
           xml:space="preserve"
           y="71"
           x="0">    <tspan
   id="tspan7187"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan7189"
   style="fill:#666666">&gt;</tspan> <tspan
   id="tspan7191"
   style="fill:#008000">dir</tspan>(f)</text>
        <text
           id="text7193"
           xml:space="preserve"
           y="90"
           x="0">    [<tspan
   id="tspan7195"
   style="fill:#666666">.</tspan><tspan
   id="tspan7197"
   style="fill:#666666">.</tspan><tspan
   id="tspan7199"
   style="fill:#666666">.</tspan>, <tspan
   id="tspan7201"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan7203"
   style="fill:#ba2121">__get__</tspan><tspan
   id="tspan7205"
   style="fill:#ba2121">'</tspan>, <tspan
   id="tspan7207"
   style="fill:#666666">.</tspan><tspan
   id="tspan7209"
   style="fill:#666666">.</tspan><tspan
   id="tspan7211"
   style="fill:#666666">.</tspan>]</text>
        <text
           id="text7213"
           xml:space="preserve"
           y="109"
           x="0" />
      </g>
      <g
         id="g8468"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="matrix(0.2591205,0,0,0.25786695,-2238.0897,25080.32)">
        <text
           id="text8470"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan8472"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan8474"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">reify</tspan>:</text>
        <text
           id="text8478"
           xml:space="preserve"
           y="33"
           x="0">        <tspan
   id="tspan8480"
   font-style="italic"
   style="font-style:italic;fill:#ba2121">&quot;&quot;&quot;(also called &quot;cached_property&quot;)&quot;&quot;&quot;</tspan></text>
        <text
           id="text8482"
           xml:space="preserve"
           y="52"
           x="0">        <tspan
   id="tspan8484"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan8486"
   style="fill:#0000ff">__init__</tspan>(<tspan
   id="tspan8488"
   style="fill:#008000">self</tspan>, func):</text>
        <text
           id="text8490"
           xml:space="preserve"
           y="71"
           x="0">            <tspan
   id="tspan8492"
   style="fill:#008000">self</tspan><tspan
   id="tspan8494"
   style="fill:#666666">.</tspan>func <tspan
   id="tspan8496"
   style="fill:#666666">=</tspan> func</text>
        <text
           id="text8498"
           xml:space="preserve"
           y="90"
           x="0" />
        <text
           id="text8500"
           xml:space="preserve"
           y="109"
           x="0">        <tspan
   id="tspan8502"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan8504"
   style="fill:#0000ff">__get__</tspan>(<tspan
   id="tspan8506"
   style="fill:#008000">self</tspan>, instance, owner_class<tspan
   id="tspan8508"
   style="fill:#666666">=</tspan><tspan
   id="tspan8510"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">None</tspan>):</text>
        <text
           id="text8512"
           xml:space="preserve"
           y="128"
           x="0">            <tspan
   id="tspan8514"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">if</tspan> instance <tspan
   id="tspan8516"
   font-weight="bold"
   style="font-weight:bold;fill:#aa22ff">is</tspan> <tspan
   id="tspan8518"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">None</tspan>:</text>
        <text
           id="text8520"
           xml:space="preserve"
           y="147"
           x="0">                <tspan
   id="tspan8522"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan8524"
   style="fill:#008000">self</tspan></text>
        <text
           id="text8526"
           xml:space="preserve"
           y="166"
           x="0">            value <tspan
   id="tspan8528"
   style="fill:#666666">=</tspan> <tspan
   id="tspan8530"
   style="fill:#008000">self</tspan><tspan
   id="tspan8532"
   style="fill:#666666">.</tspan>wrapped(instance)</text>
        <text
           id="text8534"
           xml:space="preserve"
           y="185"
           x="0">            <tspan
   id="tspan8536"
   style="fill:#008000">setattr</tspan>(instance, <tspan
   id="tspan8538"
   style="fill:#008000">self</tspan><tspan
   id="tspan8540"
   style="fill:#666666">.</tspan>wrapped<tspan
   id="tspan8542"
   style="fill:#666666">.</tspan>__name__, value)</text>
        <text
           id="text8544"
           xml:space="preserve"
           y="204"
           x="0">            <tspan
   id="tspan8546"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> value</text>
        <text
           id="text8548"
           xml:space="preserve"
           y="223"
           x="0" />
      </g>
      <rect
         y="25606.711"
         x="-1756.5894"
         height="385.83853"
         width="683.40656"
         id="slide11"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <rect
         y="25694.773"
         x="-3263.3354"
         height="168.01245"
         width="298.02203"
         id="slide21"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <path
         style="fill:none;stroke:#000000;stroke-width:2.01742697px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="m -1483.4571,24967.406 32.0285,47.456"
         id="path9403"
         inkscape:connector-curvature="0"
         sodipodi:nodetypes="cc" />
      <path
         sodipodi:type="arc"
         style="fill:#0000ff;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="path9399"
         sodipodi:cx="813.39288"
         sodipodi:cy="453.61218"
         sodipodi:rx="4.8214288"
         sodipodi:ry="4.8214288"
         d="m 818.21431,453.61218 c 0,2.6628 -2.15863,4.82143 -4.82143,4.82143 -2.6628,0 -4.82143,-2.15863 -4.82143,-4.82143 0,-2.6628 2.15863,-4.82143 4.82143,-4.82143 2.6628,0 4.82143,2.15863 4.82143,4.82143 z"
         transform="matrix(0.77777779,0,0,0.77777779,-2117.246,24615.442)" />
      <path
         transform="matrix(0.77777779,0,0,0.77777779,-2084.0317,24663.303)"
         d="m 818.21431,453.61218 c 0,2.6628 -2.15863,4.82143 -4.82143,4.82143 -2.6628,0 -4.82143,-2.15863 -4.82143,-4.82143 0,-2.6628 2.15863,-4.82143 4.82143,-4.82143 2.6628,0 4.82143,2.15863 4.82143,4.82143 z"
         sodipodi:ry="4.8214288"
         sodipodi:rx="4.8214288"
         sodipodi:cy="453.61218"
         sodipodi:cx="813.39288"
         id="path9401"
         style="fill:#0000ff;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         sodipodi:type="arc" />
      <path
         style="fill:none;stroke:#000000;stroke-width:2.01742697px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="m -1484.6121,24938.505 68.005,1"
         id="path9409"
         inkscape:connector-curvature="0"
         sodipodi:nodetypes="cc" />
      <path
         transform="matrix(0.77777779,0,0,0.77777779,-2117.246,24585.598)"
         d="m 818.21431,453.61218 c 0,2.6628 -2.15863,4.82143 -4.82143,4.82143 -2.6628,0 -4.82143,-2.15863 -4.82143,-4.82143 0,-2.6628 2.15863,-4.82143 4.82143,-4.82143 2.6628,0 4.82143,2.15863 4.82143,4.82143 z"
         sodipodi:ry="4.8214288"
         sodipodi:rx="4.8214288"
         sodipodi:cy="453.61218"
         sodipodi:cx="813.39288"
         id="path9405"
         style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         sodipodi:type="arc" />
      <path
         sodipodi:type="arc"
         style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="path9407"
         sodipodi:cx="813.39288"
         sodipodi:cy="453.61218"
         sodipodi:rx="4.8214288"
         sodipodi:ry="4.8214288"
         d="m 818.21431,453.61218 c 0,2.6628 -2.15863,4.82143 -4.82143,4.82143 -2.6628,0 -4.82143,-2.15863 -4.82143,-4.82143 0,-2.6628 2.15863,-4.82143 4.82143,-4.82143 2.6628,0 4.82143,2.15863 4.82143,4.82143 z"
         transform="matrix(0.77777779,0,0,0.77777779,-2048.496,24588.124)" />
      <path
         transform="matrix(0.77777779,0,0,0.77777779,-2085.3666,24695.705)"
         d="m 818.21431,453.61218 c 0,2.6628 -2.15863,4.82143 -4.82143,4.82143 -2.6628,0 -4.82143,-2.15863 -4.82143,-4.82143 0,-2.6628 2.15863,-4.82143 4.82143,-4.82143 2.6628,0 4.82143,2.15863 4.82143,4.82143 z"
         sodipodi:ry="4.8214288"
         sodipodi:rx="4.8214288"
         sodipodi:cy="453.61218"
         sodipodi:cx="813.39288"
         id="path9411"
         style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         sodipodi:type="arc" />
      <text
         xml:space="preserve"
         style="font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         x="-1474.1875"
         y="25093.58"
         id="text10443"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           x="-1474.1875"
           y="25093.58"
           id="tspan10445"><tspan
             x="-1474.1875"
             y="25093.58"
             id="tspan10447"
             dx="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0">Set an attribute -- directly to __dict__ </tspan></tspan><tspan
           sodipodi:role="line"
           x="-1474.1875"
           y="25111.08"
           id="tspan10455"><tspan
             x="-1474.1875"
             y="25111.18"
             id="tspan10457" /></tspan><tspan
           sodipodi:role="line"
           x="-1474.1875"
           y="25128.68"
           id="tspan10459"><tspan
             x="-1474.1875"
             y="25128.68"
             id="tspan10461">Get an attribute:</tspan><tspan
             dx="0"
             x="-1368.6406"
             y="25128.68"
             id="tspan10463" /></tspan><tspan
           sodipodi:role="line"
           x="-1474.1875"
           y="25146.18"
           id="tspan10465"><tspan
             x="-1474.1875"
             y="25146.18"
             id="tspan10467">1. try in the __dict__</tspan><tspan
             dx="0"
             x="-1339.9023"
             y="25146.18"
             id="tspan10469" /></tspan><tspan
           sodipodi:role="line"
           x="-1474.1875"
           y="25163.68"
           id="tspan10471"><tspan
             x="-1474.1875"
             y="25163.68"
             id="tspan10473">2. try in the type</tspan><tspan
             dx="0"
             x="-1370.0352"
             y="25163.68"
             id="tspan10475" /></tspan><tspan
           sodipodi:role="line"
           x="-1474.1875"
           y="25181.18"
           id="tspan10477"><tspan
             x="-1474.1875"
             y="25181.18"
             id="tspan10479">3. raise AttributeError</tspan><tspan
             dx="0"
             x="-1334.707"
             y="25181.18"
             id="tspan10481" /></tspan><tspan
           sodipodi:role="line"
           x="-1474.1875"
           y="25198.68"
           id="tspan10483"><tspan
             x="-1474.1875"
             y="25198.68"
             id="tspan10485" /></tspan><tspan
           sodipodi:role="line"
           x="-1474.1875"
           y="25216.18"
           id="tspan10487"><tspan
             x="-1474.1875"
             y="25216.18"
             id="tspan10489">How to make this work differently?</tspan></tspan></text>
      <rect
         y="24587.434"
         x="-2725.5706"
         height="157.42235"
         width="279.28571"
         id="slide24"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742649;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <g
         id="g10394"
         font-size="14px"
         transform="translate(-1737.1835,24675.116)"
         style="font-size:14px;font-family:monospace">
        <text
           id="text10396"
           xml:space="preserve"
           y="-7.8208737"
           x="-105.78979"><tspan
   id="tspan10398"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">import</tspan> <tspan
   id="tspan10400"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">xml</tspan><tspan
   id="tspan10402"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">.</tspan><tspan
   id="tspan10404"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">etree</tspan><tspan
   id="tspan10406"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">.</tspan><tspan
   id="tspan10408"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">elementtree</tspan><tspan
   id="tspan10410"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">.</tspan><tspan
   id="tspan10412"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">parse</tspan></text>
        <text
           id="text10414"
           xml:space="preserve"
           y="33"
           x="0" />
        <text
           xml:space="preserve"
           style="font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
           x="47.041969"
           y="29.099762"
           id="text10433"
           sodipodi:linespacing="125%"><tspan
             sodipodi:role="line"
             id="tspan10435"
             x="47.041969"
             y="29.099762">Namespaces are one</tspan><tspan
             sodipodi:role="line"
             x="47.041969"
             y="46.599762"
             id="tspan10437">honking great idea</tspan></text>
      </g>
      <g
         transform="translate(-2786.3541,24257.555)"
         id="g10491">
        <g
           id="g10493"
           font-size="14px"
           style="font-size:14px;font-family:monospace"
           transform="translate(394.23118,433.14462)">
          <text
             id="text10495"
             xml:space="preserve"
             y="14"
             x="0">__type__</text>
          <text
             id="text10497"
             xml:space="preserve"
             y="37"
             x="0">__dict__</text>
          <text
             id="text10499"
             xml:space="preserve"
             y="71"
             x="0" />
          <text
             x="29.296875"
             y="56.53125"
             xml:space="preserve"
             id="text10509">x</text>
          <text
             id="text10511"
             xml:space="preserve"
             y="77.625"
             x="29.6875">y</text>
        </g>
        <rect
           style="fill:none;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
           id="rect10507"
           width="139.65359"
           height="95.147156"
           x="358.60416"
           y="427.83533" />
      </g>
      <g
         id="g10517"
         transform="translate(-641.60141,-227.48761)">
        <path
           transform="translate(-3532.5938,24497.812)"
           inkscape:connector-curvature="0"
           id="path10513"
           d="m 1773.4375,461.59374 81.6406,-16.01562"
           style="fill:none;stroke:#ff0000;stroke-width:2.01742697px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
        <path
           style="fill:none;stroke:#ff0000;stroke-width:2.01742697px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
           d="m -1759.1563,24943.39 81.6406,16.016"
           id="path10515"
           inkscape:connector-curvature="0" />
      </g>
      <g
         id="g12612"
         font-size="14px"
         transform="translate(-2737.0439,24687.644)"
         style="font-size:14px;font-family:monospace">
        <text
           id="text12614"
           xml:space="preserve"
           y="14"
           x="0">    <tspan
   id="tspan12616"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan12618"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">Point</tspan>:</text>
        <text
           id="text12620"
           xml:space="preserve"
           y="33"
           x="0">        __slots__ <tspan
   id="tspan12622"
   style="fill:#666666">=</tspan> [<tspan
   id="tspan12624"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan12626"
   style="fill:#ba2121">x</tspan><tspan
   id="tspan12628"
   style="fill:#ba2121">'</tspan>, <tspan
   id="tspan12630"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan12632"
   style="fill:#ba2121">y</tspan><tspan
   id="tspan12634"
   style="fill:#ba2121">'</tspan>]</text>
        <text
           id="text12636"
           xml:space="preserve"
           y="52"
           x="0" />
        <text
           id="text12638"
           xml:space="preserve"
           y="71"
           x="0">    <tspan
   id="tspan12640"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan12642"
   style="fill:#666666">&gt;</tspan> point <tspan
   id="tspan12644"
   style="fill:#666666">=</tspan> Point()</text>
        <text
           id="text12646"
           xml:space="preserve"
           y="90"
           x="0">    <tspan
   id="tspan12648"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan12650"
   style="fill:#666666">&gt;</tspan> point<tspan
   id="tspan12652"
   style="fill:#666666">.</tspan>x <tspan
   id="tspan12654"
   style="fill:#666666">=</tspan> <tspan
   id="tspan12656"
   style="fill:#666666">3</tspan></text>
        <text
           id="text12658"
           xml:space="preserve"
           y="109"
           x="0">    <tspan
   id="tspan12660"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan12662"
   style="fill:#666666">&gt;</tspan> point<tspan
   id="tspan12664"
   style="fill:#666666">.</tspan>x</text>
        <text
           id="text12666"
           xml:space="preserve"
           y="128"
           x="0">    <tspan
   id="tspan12668"
   style="fill:#666666">3</tspan></text>
        <text
           id="text12670"
           xml:space="preserve"
           y="147"
           x="0" />
        <text
           id="text12672"
           xml:space="preserve"
           y="166"
           x="0">    <tspan
   id="tspan12674"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan12676"
   style="fill:#666666">&gt;</tspan> point<tspan
   id="tspan12678"
   style="fill:#666666">.</tspan>z <tspan
   id="tspan12680"
   style="fill:#666666">=</tspan> <tspan
   id="tspan12682"
   style="fill:#666666">3</tspan></text>
        <text
           id="text12684"
           xml:space="preserve"
           y="185"
           x="0">    <tspan
   id="tspan12686"
   font-weight="bold"
   style="font-weight:bold;fill:#d2413a">AttributeError</tspan>: <tspan
   id="tspan12688"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan12690"
   style="fill:#ba2121">Point</tspan><tspan
   id="tspan12692"
   style="fill:#ba2121">'</tspan> <tspan
   id="tspan12694"
   style="fill:#008000">object</tspan> has no attribute <tspan
   id="tspan12696"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan12698"
   style="fill:#ba2121">z</tspan><tspan
   id="tspan12700"
   style="fill:#ba2121">'</tspan></text>
        <text
           id="text12702"
           xml:space="preserve"
           y="204"
           x="0" />
        <text
           id="text12704"
           xml:space="preserve"
           y="223"
           x="0">    <tspan
   id="tspan12706"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan12708"
   style="fill:#666666">&gt;</tspan> Point<tspan
   id="tspan12710"
   style="fill:#666666">.</tspan>x</text>
        <text
           id="text12712"
           xml:space="preserve"
           y="242"
           x="0">    <tspan
   id="tspan12714"
   style="fill:#666666">&lt;</tspan>member <tspan
   id="tspan12716"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan12718"
   style="fill:#ba2121">x</tspan><tspan
   id="tspan12720"
   style="fill:#ba2121">'</tspan> of <tspan
   id="tspan12722"
   style="fill:#ba2121">'</tspan><tspan
   id="tspan12724"
   style="fill:#ba2121">Point</tspan><tspan
   id="tspan12726"
   style="fill:#ba2121">'</tspan> objects<tspan
   id="tspan12728"
   style="fill:#666666">&gt;</tspan></text>
        <text
           id="text12730"
           xml:space="preserve"
           y="261"
           x="0" />
      </g>
      <text
         xml:space="preserve"
         style="font-size:185.2610321px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         x="-2903.0095"
         y="25102.752"
         id="text13850"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan13852"
           x="-2903.0095"
           y="25102.752">Descriptors</tspan></text>
      <text
         sodipodi:linespacing="125%"
         id="text13854"
         y="24666.873"
         x="-2861.9573"
         style="font-size:96.15788269px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         xml:space="preserve"><tspan
           y="24666.873"
           x="-2861.9573"
           id="tspan13856"
           sodipodi:role="line">Slots</tspan></text>
      <text
         xml:space="preserve"
         style="font-size:91.90557861px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:end;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         x="-728.7674"
         y="24605.857"
         id="text13858"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           x="-728.7674"
           y="24605.857"
           id="tspan13862">Generic</tspan><tspan
           sodipodi:role="line"
           x="-728.7674"
           y="24720.74"
           id="tspan13868">Attribute</tspan><tspan
           sodipodi:role="line"
           x="-728.7674"
           y="24835.621"
           id="tspan13866">Access</tspan></text>
      <text
         xml:space="preserve"
         style="font-size:18.90289879px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         x="-1990.8352"
         y="25027.898"
         id="text13870"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan13872"
           x="-1990.8352"
           y="25027.898">0. __getatribute__ <tspan
   style="font-style:italic;-inkscape-font-specification:Fertigo Pro Italic"
   id="tspan16159">on class</tspan></tspan><tspan
           sodipodi:role="line"
           x="-1990.8352"
           y="25051.527"
           id="tspan13874">1. data descriptor <tspan
   style="font-style:italic;-inkscape-font-specification:Fertigo Pro Italic"
   id="tspan16153">on class</tspan></tspan><tspan
           sodipodi:role="line"
           x="-1990.8352"
           y="25075.156"
           id="tspan13876">2. __dict__</tspan><tspan
           sodipodi:role="line"
           x="-1990.8352"
           y="25098.785"
           id="tspan13878">3. non-data descriptor <tspan
   style="font-style:italic;-inkscape-font-specification:Fertigo Pro Italic"
   id="tspan16155">on class</tspan></tspan><tspan
           sodipodi:role="line"
           x="-1990.8352"
           y="25122.412"
           id="tspan13882">4. simple value from the <tspan
   style="font-style:italic;-inkscape-font-specification:Fertigo Pro Italic"
   id="tspan16157">class</tspan></tspan><tspan
           sodipodi:role="line"
           x="-1990.8352"
           y="25146.041"
           id="tspan13884">5. __getattr__ <tspan
   style="font-style:italic;-inkscape-font-specification:Fertigo Pro Italic"
   id="tspan16163">on class</tspan></tspan><tspan
           sodipodi:role="line"
           x="-1990.8352"
           y="25169.67"
           id="tspan13886">6. raise AttributeError</tspan></text>
      <text
         xml:space="preserve"
         style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         x="-1862.1382"
         y="24990.199"
         id="text13890"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan13892"
           x="-1862.1382"
           y="24990.199">The magic formula</tspan></text>
      <g
         id="g14825"
         font-size="14px"
         transform="matrix(1.3437145,0,0,1.3437145,-2496.7197,25247.53)"
         style="font-size:14px;font-family:monospace">
        <text
           id="text14827"
           xml:space="preserve"
           y="14"
           x="0"><tspan
   id="tspan14829"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan14831"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">AreaDescriptor</tspan>:</text>
        <text
           id="text14833"
           xml:space="preserve"
           y="33"
           x="0">    <tspan
   id="tspan14835"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan14837"
   style="fill:#0000ff">__get__</tspan>(<tspan
   id="tspan14839"
   style="fill:#008000">self</tspan>, instance, <tspan
   id="tspan14841"
   style="fill:#008000">type</tspan><tspan
   id="tspan14843"
   style="fill:#666666">=</tspan><tspan
   id="tspan14845"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">None</tspan>):</text>
        <text
           id="text14847"
           xml:space="preserve"
           y="52"
           x="0">        <tspan
   id="tspan14849"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">if</tspan> instance <tspan
   id="tspan14851"
   font-weight="bold"
   style="font-weight:bold;fill:#aa22ff">is</tspan> <tspan
   id="tspan14853"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">None</tspan>:</text>
        <text
           id="text14855"
           xml:space="preserve"
           y="71"
           x="0">            <tspan
   id="tspan14857"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan14859"
   style="fill:#008000">self</tspan></text>
        <text
           id="text14861"
           xml:space="preserve"
           y="90"
           x="0">        <tspan
   id="tspan14863"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">else</tspan>:</text>
        <text
           id="text14865"
           xml:space="preserve"
           y="109"
           x="0">            <tspan
   id="tspan14867"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> instance<tspan
   id="tspan14869"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan14871"
   style="fill:#666666">*</tspan><tspan
   id="tspan14873"
   style="fill:#666666">*</tspan> <tspan
   id="tspan14875"
   style="fill:#666666">2</tspan></text>
        <text
           id="text14877"
           xml:space="preserve"
           y="128"
           x="0" />
        <text
           id="text14879"
           xml:space="preserve"
           y="147"
           x="0"><tspan
   id="tspan14881"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan14883"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">Square</tspan>:</text>
        <text
           id="text14885"
           xml:space="preserve"
           y="166"
           x="0">    area <tspan
   id="tspan14887"
   style="fill:#666666">=</tspan> AreaDescriptor()</text>
        <text
           id="text14889"
           xml:space="preserve"
           y="185"
           x="0" />
        <text
           id="text14891"
           xml:space="preserve"
           y="204"
           x="0"><tspan
   id="tspan14893"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan14895"
   style="fill:#666666">&gt;</tspan> square <tspan
   id="tspan14897"
   style="fill:#666666">=</tspan> Square()</text>
        <text
           id="text14899"
           xml:space="preserve"
           y="223"
           x="0"><tspan
   id="tspan14901"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan14903"
   style="fill:#666666">&gt;</tspan> square<tspan
   id="tspan14905"
   style="fill:#666666">.</tspan>side <tspan
   id="tspan14907"
   style="fill:#666666">=</tspan> <tspan
   id="tspan14909"
   style="fill:#666666">5</tspan></text>
        <text
           id="text14911"
           xml:space="preserve"
           y="242"
           x="0"><tspan
   id="tspan14913"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan14915"
   style="fill:#666666">&gt;</tspan> square<tspan
   id="tspan14917"
   style="fill:#666666">.</tspan>area</text>
        <text
           id="text14919"
           xml:space="preserve"
           y="261"
           x="0"><tspan
             id="tspan14921"
             style="fill:#666666">25</tspan></text>
        <text
           id="text14923"
           xml:space="preserve"
           y="280"
           x="0" />
        <text
           id="text14925"
           xml:space="preserve"
           y="299"
           x="0"><tspan
   id="tspan14927"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan14929"
   style="fill:#666666">&gt;</tspan> Square<tspan
   id="tspan14931"
   style="fill:#666666">.</tspan>area</text>
        <text
           id="text14933"
           xml:space="preserve"
           y="318"
           x="0"><tspan
   id="tspan14935"
   style="fill:#666666">&lt;</tspan>__main__<tspan
   id="tspan14937"
   style="fill:#666666">.</tspan>AreaDescriptor at <tspan
   id="tspan14939"
   style="fill:#666666">0x7f9a969fab38</tspan><tspan
   id="tspan14941"
   style="fill:#666666">&gt;</tspan></text>
        <text
           id="text14943"
           xml:space="preserve"
           y="337"
           x="0" />
      </g>
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide12"
         width="683.40656"
         height="385.83853"
         x="-1955.4631"
         y="25606.711" />
      <text
         xml:space="preserve"
         style="font-size:144px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:DejaVu Sans;-inkscape-font-specification:DejaVu Sans Bold"
         x="-1858.4659"
         y="25808.564"
         id="text15013"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan15015"
           x="-1858.4659"
           y="25808.564">☠</tspan></text>
      <text
         xml:space="preserve"
         style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         x="-1858.4657"
         y="25853.654"
         id="text15017"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           x="-1858.4657"
           y="25853.654"
           id="tspan15021">__doc__</tspan><tspan
           sodipodi:role="line"
           x="-1858.4657"
           y="25903.654"
           id="tspan15025">__dict__</tspan><tspan
           sodipodi:role="line"
           x="-1858.4657"
           y="25953.654"
           id="tspan15027">methods</tspan></text>
      <text
         xml:space="preserve"
         style="font-size:14.05525303px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         x="-1871.0275"
         y="25313.318"
         id="text15029"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan15031"
           x="-1871.0275"
           y="25313.318">Usually we want</tspan><tspan
           sodipodi:role="line"
           x="-1871.0275"
           y="25330.887"
           id="tspan15033">one</tspan><tspan
           sodipodi:role="line"
           x="-1871.0275"
           y="25348.457"
           id="tspan15035">special attribute</tspan></text>
      <rect
         y="25293.352"
         x="-1962.493"
         height="106.08313"
         width="188.45473"
         id="slide13"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <text
         xml:space="preserve"
         style="font-size:31.87889862px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         x="-1869.1421"
         y="25280.26"
         id="text15043"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan15045"
           x="-1869.1421"
           y="25280.26">Descriptors</tspan></text>
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide14"
         width="188.45473"
         height="106.08313"
         x="-1962.493"
         y="25253.352" />
      <g
         id="g15957"
         font-size="14px"
         transform="matrix(1.3717137,0,0,1.3717137,-3021.0934,25420.84)"
         style="font-size:14px;font-family:monospace">
        <text
           id="text15959"
           xml:space="preserve"
           y="14"
           x="0"><tspan
   id="tspan15961"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">class</tspan> <tspan
   id="tspan15963"
   font-weight="bold"
   style="font-weight:bold;fill:#0000ff">Point</tspan>:</text>
        <text
           id="text15965"
           xml:space="preserve"
           y="33"
           x="0">    <tspan
   id="tspan15967"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">def</tspan> <tspan
   id="tspan15969"
   style="fill:#0000ff">align</tspan>(<tspan
   id="tspan15971"
   style="fill:#008000">self</tspan>):</text>
        <text
           id="text15973"
           xml:space="preserve"
           y="52"
           x="0">        <tspan
   id="tspan15975"
   font-weight="bold"
   style="font-weight:bold;fill:#008000">return</tspan> <tspan
   id="tspan15977"
   style="fill:#666666">.</tspan><tspan
   id="tspan15979"
   style="fill:#666666">.</tspan><tspan
   id="tspan15981"
   style="fill:#666666">.</tspan></text>
        <text
           id="text15983"
           xml:space="preserve"
           y="71"
           x="0" />
        <text
           id="text15985"
           xml:space="preserve"
           y="90"
           x="0"><tspan
   id="tspan15987"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan15989"
   style="fill:#666666">&gt;</tspan> point <tspan
   id="tspan15991"
   style="fill:#666666">=</tspan> Point()</text>
        <text
           id="text15993"
           xml:space="preserve"
           y="109"
           x="0"><tspan
   id="tspan15995"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan15997"
   style="fill:#666666">&gt;</tspan> point<tspan
   id="tspan15999"
   style="fill:#666666">.</tspan>align</text>
        <text
           id="text16001"
           xml:space="preserve"
           y="128"
           x="0"><tspan
   id="tspan16003"
   style="fill:#666666">&lt;</tspan>bound method Point<tspan
   id="tspan16005"
   style="fill:#666666">.</tspan>align of <tspan
   id="tspan16007"
   style="fill:#666666">.</tspan><tspan
   id="tspan16009"
   style="fill:#666666">.</tspan><tspan
   id="tspan16011"
   style="fill:#666666">.</tspan><tspan
   id="tspan16013"
   style="fill:#666666">&gt;</tspan></text>
        <text
           id="text16015"
           xml:space="preserve"
           y="147"
           x="0" />
        <text
           id="text16017"
           xml:space="preserve"
           y="166"
           x="0"><tspan
   id="tspan16019"
   style="fill:#666666">&gt;&gt;</tspan><tspan
   id="tspan16021"
   style="fill:#666666">&gt;</tspan> Point<tspan
   id="tspan16023"
   style="fill:#666666">.</tspan>align</text>
        <text
           id="text16025"
           xml:space="preserve"
           y="185"
           x="0"><tspan
   id="tspan16027"
   style="fill:#666666">&lt;</tspan>function Point<tspan
   id="tspan16029"
   style="fill:#666666">.</tspan>align at <tspan
   id="tspan16031"
   style="fill:#666666">0x7f0f6cab9840</tspan><tspan
   id="tspan16033"
   style="fill:#666666">&gt;</tspan></text>
        <text
           id="text16035"
           xml:space="preserve"
           y="204"
           x="0" />
      </g>
      <g
         transform="translate(-2495.6277,25061.996)"
         id="g16113">
        <g
           id="g16115"
           font-size="14px"
           style="font-size:14px;font-family:monospace"
           transform="translate(394.23118,433.14462)">
          <text
             id="text16117"
             xml:space="preserve"
             y="22"
             x="0">__type__</text>
          <text
             id="text16119"
             xml:space="preserve"
             y="51"
             x="0">__dict__</text>
          <text
             id="text16121"
             xml:space="preserve"
             y="71"
             x="0" />
        </g>
        <rect
           style="fill:none;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
           id="rect16123"
           width="139.65359"
           height="84.600281"
           x="358.60416"
           y="427.83536" />
      </g>
      <path
         sodipodi:nodetypes="cc"
         inkscape:connector-curvature="0"
         id="path16125"
         d="m -2177.5809,25467.631 42.2238,45.874"
         style="fill:none;stroke:#000000;stroke-width:2.01742697px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
      <path
         sodipodi:type="arc"
         style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="path16127"
         sodipodi:cx="813.39288"
         sodipodi:cy="453.61218"
         sodipodi:rx="4.8214288"
         sodipodi:ry="4.8214288"
         d="m 818.21431,453.61218 c 0,2.6628 -2.15863,4.82143 -4.82143,4.82143 -2.6628,0 -4.82143,-2.15863 -4.82143,-4.82143 0,-2.6628 2.15863,-4.82143 4.82143,-4.82143 2.6628,0 4.82143,2.15863 4.82143,4.82143 z"
         transform="matrix(0.77777779,0,0,0.77777779,-2811.7773,25112.942)" />
      <path
         transform="matrix(0.77777779,0,0,0.77777779,-2768.8086,25158.437)"
         d="m 818.21431,453.61218 c 0,2.6628 -2.15863,4.82143 -4.82143,4.82143 -2.6628,0 -4.82143,-2.15863 -4.82143,-4.82143 0,-2.6628 2.15863,-4.82143 4.82143,-4.82143 2.6628,0 4.82143,2.15863 4.82143,4.82143 z"
         sodipodi:ry="4.8214288"
         sodipodi:rx="4.8214288"
         sodipodi:cy="453.61218"
         sodipodi:cx="813.39288"
         id="path16129"
         style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         sodipodi:type="arc" />
      <path
         sodipodi:nodetypes="cc"
         inkscape:connector-curvature="0"
         id="path16137"
         d="m -2253.7686,25540.422 114.841,-2.45"
         style="fill:none;stroke:#000000;stroke-width:2.01742768px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
      <path
         transform="matrix(0.77777779,0,0,0.77777779,-2886.7773,25188.879)"
         d="m 818.21431,453.61218 c 0,2.6628 -2.15863,4.82143 -4.82143,4.82143 -2.6628,0 -4.82143,-2.15863 -4.82143,-4.82143 0,-2.6628 2.15863,-4.82143 4.82143,-4.82143 2.6628,0 4.82143,2.15863 4.82143,4.82143 z"
         sodipodi:ry="4.8214288"
         sodipodi:rx="4.8214288"
         sodipodi:cy="453.61218"
         sodipodi:cx="813.39288"
         id="path16139"
         style="fill:#0000ff;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         sodipodi:type="arc" />
      <path
         sodipodi:type="arc"
         style="fill:#0000ff;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="path16141"
         sodipodi:cx="813.39288"
         sodipodi:cy="453.61218"
         sodipodi:rx="4.8214288"
         sodipodi:ry="4.8214288"
         d="m 818.21431,453.61218 c 0,2.6628 -2.15863,4.82143 -4.82143,4.82143 -2.6628,0 -4.82143,-2.15863 -4.82143,-4.82143 0,-2.6628 2.15863,-4.82143 4.82143,-4.82143 2.6628,0 4.82143,2.15863 4.82143,4.82143 z"
         transform="matrix(0.77777779,0,0,0.77777779,-2769.188,25185.959)" />
      <text
         xml:space="preserve"
         style="font-size:18.54426193px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         x="-2594.0195"
         y="26036.922"
         id="text16143"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan16145"
           x="-2594.0195"
           y="26036.922"
           style="font-size:12px">__set__ makes this is a</tspan><tspan
           sodipodi:role="line"
           x="-2594.0195"
           y="26058.398"
           id="tspan16147">data descriptor</tspan></text>
      <path
         style="fill:none;stroke:#000000;stroke-width:2.01742697px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="m -2595.1407,26076.5 c 0,42.188 38.6718,71.875 91.4062,74.219"
         id="path16149"
         inkscape:connector-curvature="0"
         sodipodi:nodetypes="cc" />
      <rect
         y="26016.588"
         x="-2524.3606"
         height="219.43549"
         width="389.00122"
         id="slide17"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <path
         sodipodi:nodetypes="cc"
         inkscape:connector-curvature="0"
         id="path16165"
         d="m -2593.7971,26016.906 c 0,-57.037 -96.3294,-97.174 -227.6876,-100.343"
         style="fill:none;stroke:#000000;stroke-width:2.01742697px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
      <rect
         y="25806.631"
         x="-2998.0349"
         height="155.20767"
         width="275.35663"
         id="slide19"
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <text
         sodipodi:linespacing="125%"
         id="text21148"
         y="24623.182"
         x="-2585.8176"
         style="font-size:27.4103241px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         xml:space="preserve"><tspan
           y="24623.182"
           x="-2585.8176"
           id="tspan21150"
           sodipodi:role="line">A trick</tspan><tspan
           id="tspan21152"
           y="24657.445"
           x="-2585.8176"
           sodipodi:role="line">for saving memory</tspan><tspan
           id="tspan21154"
           y="24691.707"
           x="-2585.8176"
           sodipodi:role="line" /></text>
      <text
         sodipodi:linespacing="125%"
         id="text23584"
         y="24729.572"
         x="-2044.412"
         style="font-size:120.32940674px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         xml:space="preserve"><tspan
           y="24729.572"
           x="-2044.412"
           id="tspan23586"
           sodipodi:role="line">MRO</tspan><tspan
           id="tspan23588"
           y="24879.982"
           x="-2044.412"
           sodipodi:role="line">?</tspan></text>
      <rect
         style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="slide-q"
         width="217.06601"
         height="122.54691"
         x="-2159.8103"
         y="24773.279" />
    </g>
  </g>
  <script
     ns1:version="13.11-30213629"
     id="sozi-script">/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * Create or augment a namespace.
 *
 * &lt;p&gt;A typical use of this function is:&lt;/p&gt;
 *
 * &lt;pre&gt;
 * namespace(this, &quot;a.b.c&quot;, function (exports, globals) {
 *     exports.foo = function (x) {
 *         ...
 *     };
 * });
 * &lt;/pre&gt;
 *
 * &lt;p&gt;where &lt;code&gt;this&lt;/code&gt; is the global object.&lt;/p&gt;
 *
 * &lt;p&gt;In this example, function &lt;code&gt;foo&lt;/code&gt; is exported and can be
 * called as &lt;code&gt;a.b.c.foo(someValue)&lt;/code&gt;.&lt;/p&gt;
 *
 * @memberOf _global_
 * @param globals The global object
 * @param {String} path The dot-separated path to the namespace
 * @param {Function} body A function to execute in the context of the namespace
 */
function namespace(globals, path, body) {
    &quot;use strict&quot;;
    
    // Start name lookup in the global object
	var current = globals;
	
	// For each name in the given path
	path.split(&quot;.&quot;).forEach(function (name) {
	    // If the current path element does not exist
	    // in the current namespace, create a new sub-namespace
		if (typeof current[name] === &quot;undefined&quot;) {
			current[name] = {};
		}
		
		// Move to the namespace for the current path element
		current = current[name];
	});
	
	// Execute the given function in the last namespace
	if (body) {
	    body(current, globals);
	}
	
	return current;
}


/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.events
 * @namespace A simple event system for Sozi.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.events&quot;, function (exports) {
    /** @lends sozi.events */

    &quot;use strict&quot;;
    
    /**
     * A registry of callback functions for each event type.
     *
     * &lt;p&gt;Call {@link sozi.events.listen} to add a new listener.&lt;/p&gt;
     */
    var listenerRegistry = {};

    /**
     * Adds a listener for a given event type.
     *
     * @memberOf sozi.events
     * @name listen
     * @function
     * @param {String} key The identifier of the event type to listen
     * @param {Function} handler The function to call when a corresponding event is fired
     */
    exports.listen = function (key, handler) {
        if (!listenerRegistry.hasOwnProperty(key)) {
            listenerRegistry[key] = [];
        }
        listenerRegistry[key].push(handler);
    };
    
    /**
     * Fire an event of a given type.
     *
     * &lt;p&gt;All event handlers added for the given event type are
     * executed.&lt;/p&gt;
     *
     * &lt;p&gt;Additional arguments provided to this function are passed
     * to the event handlers.&lt;/p&gt;
     *
     * @memberOf sozi.events
     * @name fire
     * @function
     * @param {String} key The identifier of the event type to fire
     */
    exports.fire = function (key) {
        var args = Array.prototype.slice.call(arguments, 1);
        if (listenerRegistry.hasOwnProperty(key)) {
            listenerRegistry[key].forEach(function (listener) {
                listener.apply(null, args);
            });
        }
    };
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.proto
 * @namespace Helpers for prototype inheritance.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.proto&quot;, function (exports) {
    &quot;use strict&quot;;
    
    exports.Object = {
        installConstructors: function () {
            function InstanceConstructor() {}
            InstanceConstructor.prototype = this;
            
            this.instance = function () {
                var result = new InstanceConstructor();
                result.construct.apply(result, arguments);
                return result;
            };
            
            this.subtype = function (anObject) {
                var result = new InstanceConstructor();
                result.augment(anObject);
                result.installConstructors();
                return result;
            };
        },
        
        construct: function () {},
        
        augment: function (anObject) {
            for (var attr in anObject) {
                if (anObject.hasOwnProperty(attr)) {
                    this[attr] = anObject[attr];
                }
            }
            return this;
        },
        
        bind: function (aFunction) {
            var self = this;
            return function () {
                return aFunction.apply(self, arguments);
            }
        }
    };
    
    // Bootstrap the root object
    exports.Object.installConstructors();
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.actions
 * @namespace Callback functions for DOM event handlers
 * @depend namespace.js
 */
namespace(this, &quot;sozi.actions&quot;, function (exports, window) {
    /** @lends sozi.actions */
    
    &quot;use strict&quot;;
    
    // Module aliases
    var player = namespace(window, &quot;sozi.player&quot;);
    var display = namespace(window, &quot;sozi.display&quot;);
    
    // The global document object
    var document = window.document;
    
    // Constants: mouse button numbers
    var DRAG_BUTTON = 0;    // Left button
    var TOC_BUTTON = 1;     // Middle button
    
    // Constants: increments for zooming and rotating,
    // threshold for dragging
    var SCALE_FACTOR = 1.05;
    var ROTATE_STEP = 5;
    var DRAG_THRESHOLD_PX = 5;
    
    /**
     * The status of the current drag operation.
     *
     * @type Boolean
     */
    var mouseDragged = false;
    
    /**
     * The X coordinate of the mouse on the latest &quot;down&quot; or &quot;drag&quot; event.
     *
     * @type Number
     */
    var mouseLastX = 0;

    /**
     * The Y coordinate of the mouse on the latest &quot;down&quot; or &quot;drag&quot; event.
     *
     * @type Number
     */
    var mouseLastY = 0;
    
    /**
     * Zooms the display in the given direction.
     *
     * &lt;p&gt;Only the sign of &lt;code&gt;direction&lt;/code&gt; is used:&lt;/p&gt;
     * &lt;ul&gt;
     *  &lt;li&gt;zoom in when &lt;code&gt;direction &gt; 0&lt;/code&gt;&lt;/li&gt;
     *  &lt;li&gt;zoom out when &lt;code&gt;direction &lt;= 0&lt;/code&gt;&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * &lt;p&gt;The scaling is centered around point (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;).&lt;/p&gt;
     *
     * @param {Number} direction The direction of the scaling operation
     * @param {Number} x The X coordinate of the scaling center
     * @param {Number} y The Y coordinate of the scaling center
     */
    function zoom(direction, x, y) {
        player.stop();
        display.viewPorts[&quot;player&quot;].zoom(direction &gt; 0 ? SCALE_FACTOR : 1 / SCALE_FACTOR, x, y);
    }
    
    /**
     * Rotate the display in the given direction.
     *
     * &lt;p&gt;Only the sign of &lt;code&gt;direction&lt;/code&gt; is used:&lt;/p&gt;
     * &lt;ul&gt;
     *  &lt;li&gt;rotate anticlockwise when direction &gt; 0&lt;/li&gt;
     *  &lt;li&gt;rotate clockwise when direction &lt;= 0&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * @param {Number} direction The direction of the rotation
     */
    function rotate(direction) {
        player.stop();
        display.viewPorts[&quot;player&quot;].rotate(direction &gt; 0 ? ROTATE_STEP : -ROTATE_STEP);
    }
    
    /**
     * Show/hide the frame list.
     *
     * &lt;p&gt;The presentation stops when the frame list is showed,
     * and restarts when the frame list is hidden.&lt;/p&gt;
     */
    function toggleFrameList() {
        if (sozi.framelist.isVisible()) {
            sozi.framelist.hide();
            player.restart();
        } else {
            player.stop();
            sozi.framelist.show();
        }
    }

    function isPlayerEvent(evt) {
        return display.viewPorts[&quot;player&quot;].contains(evt.clientX, evt.clientY);
    }
    
    /**
     * Event handler: mouse down.
     *
     * &lt;p&gt;When the left button is pressed, we register the current coordinates
     * in case the mouse will be dragged. Handler {@link sozi.actions-onMouseDrag} is set until
     * the button is released ({@link sozi.actions-onMouseUp}).&lt;/p&gt;
     *
     * &lt;p&gt;When the middle button is pressed, the table of contents is shown or hidden.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onMouseDown(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        if (evt.button === DRAG_BUTTON) {
            document.documentElement.addEventListener(&quot;mousemove&quot;, onMouseDrag, false);
            mouseDragged = false;
            mouseLastX = evt.clientX;
            mouseLastY = evt.clientY;
        } else if (evt.button === TOC_BUTTON) {
            toggleFrameList();
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: mouse move.
     *
     * &lt;p&gt;If the left mouse button is down, then the mouse move is a drag action.
     * This method computes the displacement since the button was pressed or
     * since the last move, and updates the reference coordinates for the next move.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onMouseDrag(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        player.stop();
        
        // The drag action is confirmed when one of the mouse coordinates
        // has moved past the threshold
        if (!mouseDragged &amp;&amp; (Math.abs(evt.clientX - mouseLastX) &gt; DRAG_THRESHOLD_PX ||
                              Math.abs(evt.clientY - mouseLastY) &gt; DRAG_THRESHOLD_PX)) {
            mouseDragged = true;
        }
        
        if (mouseDragged) {
            sozi.events.fire(&quot;sozi.player.cleanup&quot;);
            display.viewPorts[&quot;player&quot;].drag(evt.clientX - mouseLastX, evt.clientY - mouseLastY);
            mouseLastX = evt.clientX;
            mouseLastY = evt.clientY;
        }
        
        evt.stopPropagation();
    }

    /**
     * Event handler: mouse up.
     *
     * &lt;p&gt;Releasing the left button removes the {@link sozi.actions-onMouseDrag} handler.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onMouseUp(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        if (evt.button === DRAG_BUTTON) {
            document.documentElement.removeEventListener(&quot;mousemove&quot;, onMouseDrag, false);
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: context menu (i.e right click).
     *
     * &lt;p&gt;Right click goes one frame back.&lt;/p&gt;
     *
     * &lt;p&gt;There is no &quot;click&quot; event for the right mouse button and the menu
     * can't be disabled in {@link sozi.actions-onMouseDown}.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onContextMenu(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        player.moveToPrevious();
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: mouse click.
     *
     * &lt;p&gt;Left-click moves the presentation to the next frame.&lt;/p&gt;
     *
     * &lt;p&gt;No &quot;click&quot; event is generated for the middle button in Firefox.
     * See {@link sozi.actions-onMouseDown} for middle click handling.&lt;/p&gt;
     *
     * &lt;p&gt;Dragging the mouse produces a &quot;click&quot; event when the button is released.
     * If flag {@link sozi.actions-mouseDragged} was set by {@link sozi.actions-onMouseDrag},
     * then the click event is the result of a drag action.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onClick(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        if (!mouseDragged &amp;&amp; evt.button !== TOC_BUTTON) {
            player.moveToNext();
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: mouse wheel.
     *
     * &lt;p&gt;Rolling the mouse wheel stops the presentation and zooms the current display.&lt;/p&gt;
     *
     * FIXME shift key does not work in Opera
     *
     * @param {Event} evt The DOM event object
     */
    function onWheel(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        
        if (!evt) {
            evt = window.event;
        }

        var delta = 0;
        if (evt.wheelDelta) { // IE and Opera
            delta = evt.wheelDelta;
        }
        else if (evt.detail) { // Mozilla
            delta = -evt.detail;
        }
        
        if (delta !== 0) {
            if (evt.shiftKey) {
                rotate(delta);
            }
            else {
                zoom(delta, evt.clientX, evt.clientY);
            }
        }
        
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: key press.
     *
     * &lt;p&gt;Keyboard handling is split into two methods:
     * {@link sozi.actions-onKeyPress} and {@link sozi.actions-onKeyDown}
     * in order to get the same behavior across browsers.&lt;/p&gt;
     *
     * &lt;p&gt;This method handles character keys &quot;+&quot;, &quot;-&quot;, &quot;=&quot;, &quot;F&quot; and &quot;T&quot;.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onKeyPress(evt) {
        // Keys with modifiers are ignored
        if (evt.altKey || evt.ctrlKey || evt.metaKey) {
            return;
        }

        switch (evt.charCode || evt.which) {
        case 43: // +
            zoom(1, window.innerWidth / 2, window.innerHeight / 2);
            break;
        case 45: // -
            zoom(-1, window.innerWidth / 2, window.innerHeight / 2);
            break;
        case 61: // =
            player.moveToCurrent();
            break;
        case 70: // F
        case 102: // f
            player.showAll();
            break;
        case 84: // T
        case 116: // t
            toggleFrameList();
            break;
        case 82: // R
            rotate(-1);
            break;
        case 114: // r
            rotate(1);
            break;
        default:
            return;
        }

        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: key down.
     *
     * &lt;p&gt;Keyboard handling is split into two methods:
     * {@link sozi.actions-onKeyPress} and {@link sozi.actions-onKeyDown}
     * in order to get the same behavior across browsers.&lt;/p&gt;
     *
     * &lt;p&gt;This method handles navigation keys (arrows, page up/down, home, end)
     * and the space and enter keys.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onKeyDown(evt) {
        // Keys with Alt/Ctrl/Meta modifiers are ignored
        if (evt.altKey || evt.ctrlKey || evt.metaKey) {
            return;
        }

        switch (evt.keyCode) {
            case 36: // Home
                if (evt.shiftKey) {
                    player.jumpToFirst();
                }
                else {
                    player.moveToFirst();
                }
                break;
            case 35: // End
                if (evt.shiftKey) {
                    player.jumpToLast();
                }
                else {
                    player.moveToLast();
                }
                break;
            case 38: // Arrow up
            case 33: // Page up
            case 37: // Arrow left
                if (evt.shiftKey) {
                    player.jumpToPrevious();
                }
                else {
                    player.moveToPrevious();
                }
                break;
            case 40: // Arrow down
            case 34: // Page down
            case 39: // Arrow right
            case 13: // Enter
            case 32: // Space
                if (evt.shiftKey) {
                    player.jumpToNext();
                }
                else {
                    player.moveToNext();
                }
                break;
            default:
                // Ignore other keys and propagate the event
                return;
        }
        
        // Stop event propagation for supported keys
        evt.stopPropagation();
        
        // In some versions of Chrome/Chromium, preventDefault() inhibits the &quot;keypress&quot; event
        evt.preventDefault();
    }

    /**
     * Dummy event handler: stop event propagation.
     *
     * @param {Event} evt The DOM event object
     */
    function stopEvent(evt) {
        evt.stopPropagation();
    }

    /**
     * Event handler: document load.
     *
     * &lt;p&gt;This function sets up all other event handlers for the player.&lt;/p&gt;
     */
    function onDisplayReady() {
        // Prevent event propagation when clicking on a link
        // FIXME does not work in Firefox when the &lt;a&gt; is referenced through a &lt;use&gt;
        var links = document.getElementsByTagName(&quot;a&quot;);
        for (var i = 0; i &lt; links.length; i += 1) {
            links[i].addEventListener(&quot;click&quot;, stopEvent, false);
            links[i].addEventListener(&quot;contextmenu&quot;, stopEvent, false);
        }
        
        // Mouse events are constrained to the player viewport
        // see isPlayerEvent()
        // TODO also use shift-click as an alternative for middle-click
        var svgRoot = document.documentElement;
        svgRoot.addEventListener(&quot;click&quot;, onClick, false);
        svgRoot.addEventListener(&quot;mousedown&quot;, onMouseDown, false);
        svgRoot.addEventListener(&quot;mouseup&quot;, onMouseUp, false);
        svgRoot.addEventListener(&quot;contextmenu&quot;, onContextMenu, false);
        svgRoot.addEventListener(&quot;DOMMouseScroll&quot;, onWheel, false); // Mozilla
        window.onmousewheel = onWheel;

        // Keyboard events are global to the SVG document
        svgRoot.addEventListener(&quot;keypress&quot;, onKeyPress, false);
        svgRoot.addEventListener(&quot;keydown&quot;, onKeyDown, false);
    }

    sozi.events.listen(&quot;sozi.display.ready&quot;, onDisplayReady); // @depend events.js
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.animation
 * @namespace A general-purpose animation controller.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.animation&quot;, function (exports, window) {
    /** @lends sozi.animation */
    
    &quot;use strict&quot;;
    
    /**
     * The browser-specific function to request an animation frame.
     *
     * @function
     */
    var requestAnimationFrame =
            window.mozRequestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.msRequestAnimationFrame ||
            window.oRequestAnimationFrame;

    var getCurrentTime = function () {
        return window.performance &amp;&amp; window.performance.now ?
            window.performance.now() :
            Date.now();
    };

    exports.setAnimationFrameHandlers = function (requestAnimationFrameFunction, getCurrentTimeFunction) {
        requestAnimationFrame = requestAnimationFrameFunction;
        getCurrentTime = getCurrentTimeFunction;
    };

    /**
     * The default time step.
     *
     * &lt;p&gt;For browsers that do not support animation frames.&lt;/p&gt;
     *
     * @constant
     * @type Number
     */
    var TIME_STEP_MS = 40;
    
    /**
     * The handle provided by &lt;code&gt;setInterval()&lt;/code&gt;.
     *
     * &lt;p&gt;For browsers that do not support animation frames.&lt;/p&gt;
     */
    var timer;
    
    /**
     * The list of running animators.
     *
     * @type Array
     */
    var animatorList = [];
    
    /**
     * The main animation loop.
     *
     * &lt;p&gt;This function is called periodically and triggers the
     * animation steps in all running animators.&lt;/p&gt;
     *
     * &lt;p&gt;If all animators are removed from the list of running animators,
     * then the periodic calling is disabled.&lt;/p&gt;
     *
     * &lt;p&gt;This function can be called either through {@link sozi.animation-requestAnimationFrame}
     * if the browser supports it, or through &lt;code&gt;setInterval()&lt;/code&gt;.&lt;/p&gt;
     */
    function loop() {
        if (animatorList.length &gt; 0) {
            // If there is at least one animator,
            // and if the browser provides animation frames,
            // schedule this function to be called again in the next frame.
            if (requestAnimationFrame) {
                requestAnimationFrame(loop);
            }

            // Step all animators
            animatorList.forEach(function (animator) {
                // TODO use timestamp argument:
                // browser compatibility issue with Date.now()
                // and performance.now() timestamps.
                animator.step(getCurrentTime());
            });
        }
        else {
            // If all animators have been removed,
            // and if this function is called periodically
            // through setInterval, disable the periodic calling.
            if (!requestAnimationFrame) {
                window.clearInterval(timer);
            }
        }
    }
    
    /**
     * Start the animation loop.
     *
     * &lt;p&gt;This function delegates the periodic update of all animators
     * to the {@link sozi.animation-loop} function, either through {@link sozi.animation-requestAnimationFrame}
     * if the browser supports it, or through &lt;code&gt;setInterval()&lt;/code&gt;.&lt;/p&gt;
     */
    function start() {
        if (requestAnimationFrame) {
            requestAnimationFrame(loop);
        }
        else {
            timer = window.setInterval(function () {
                loop(getCurrentTime());
            }, TIME_STEP_MS);
        }
    }
    
    /**
     * Add a new animator object to the list of running animators.
     *
     * &lt;p&gt;If the animator list was empty before calling this function,
     * then the animation loop is started.&lt;/p&gt;
     *
     * @param {sozi.animation.Animator} animator The animator object to add.
     */
    function addAnimator(animator) {
        animatorList.push(animator);
        if (animatorList.length === 1) {
            start();
        }
    }
    
    /**
     * Remove the given animator from the list of running animators.
     *
     * @param {sozi.animation.Animator} animator The animator object to add.
     */
    function removeAnimator(animator) {
        animatorList.splice(animatorList.indexOf(animator), 1);
    }
    
    /**
     * @class
     *
     * An animator provides the logic for animating other objects.
     *
     * &lt;p&gt;The main purpose of an animator is to schedule the update
     * operations in the animated objects.&lt;/p&gt;
     *
     * @memberOf sozi.animation
     * @name Animator
     * @depend proto.js
     */
    exports.Animator = sozi.proto.Object.subtype({
        /** @lends sozi.animation.Animator */
        
        /**
         * Construct a new animator.
         */
        construct: function () {
            /**
             * The animation duration, in milliseconds.
             * @type Number
             */
            this.durationMs = 0;
            
            /**
             * A &quot;payload&quot; object that can be used by {@link sozi.animation.Animator.onStep}
             * and {@link sozi.animation.Animator.onDone}.
             */
            this.data = null;
            
            /**
             * The start time of the animation.
             * @type Number
             */
            this.initialTime = 0;
            
            /**
             * The current state of this animator.
             * @type Boolean
             */
            this.started = false;
        },

        /**
         * Start the current animator.
         *
         * &lt;p&gt;The current animator is added to the list of running animators
         * and is put in the &quot;started&quot; state.
         * It will be removed from the list automatically when the given duration
         * has elapsed.&lt;/p&gt;
         *
         * &lt;p&gt;Method {@link sozi.animation.Animator.onStep} is called once before starting the animation.&lt;/p&gt;
         *
         * @param {Number} durationMs The animation duration, in milliseconds
         * @param data Some data that can be used in {@link sozi.animation.Animator.onStep}
         * and {@link sozi.animation.Animator.onDone}
         */
        start: function (durationMs, data) {
            this.durationMs = durationMs;
            this.data = data;
            this.initialTime = getCurrentTime();
            this.onStep(0);
            if (!this.started) {
                this.started = true;
                addAnimator(this);
            }
        },

        /**
         * Stop the current animator.
         *
         * &lt;p&gt;The current animator is removed from the list of running animators
         * and is put in the &quot;stopped&quot; state.&lt;/p&gt;
         */
        stop: function () {
            if (this.started) {
                removeAnimator(this);
                this.started = false;
            }
        },

        /**
         * Perform one animation step.
         *
         * &lt;p&gt;This function is called automatically by the {@link sozi.animation-loop} function.
         * It calls {@link sozi.animation.Animator.onStep}.
         * If the animation duration has elapsed, {@link sozi.animation.Animator.onDone} is called.&lt;/p&gt;
         *
         * @param {Number} currentTime The current time
         */
        step: function (currentTime) {
            var elapsedTime = currentTime - this.initialTime;
            if (elapsedTime &gt;= this.durationMs) {
                this.stop();
                this.onStep(1);
                this.onDone();
            } else {
                this.onStep(elapsedTime / this.durationMs);
            }
        },
        
        /**
         * This method is called automatically on each animation step.
         *
         * &lt;p&gt;The default implementation does nothing. Override it in a
         * subclass or instance to provide your own implementation.&lt;p&gt;
         *
         * @param {Number} progress The elapsed fraction of the total duration (comprised between 0 and 1 included).
         */
        onStep: function (progress) {
            // Do nothing
        },
        
        /**
         * This method is called automatically when the animation ends.
         *
         * &lt;p&gt;The default implementation does nothing. Override it in a
         * subclass or instance to provide your own implementation.&lt;p&gt;
         */
        onDone: function () {
            // Do nothing
        }
    });

    /*
     * The acceleration profiles.
     *
     * Each profile is a function that operates in the interval [0, 1]
     * and produces a result in the same interval.
     *
     * These functions are meant to be called in {@link sozi.animation.Animator.onStep}
     * to transform the progress indicator according to the desired
     * acceleration effect.
     */
    exports.profiles = {
        &quot;linear&quot;: function (x) {
            return x;
        },

        &quot;accelerate&quot;: function (x) {
            return Math.pow(x, 3);
        },

        &quot;strong-accelerate&quot;: function (x) {
            return Math.pow(x, 5);
        },

        &quot;decelerate&quot;: function (x) {
            return 1 - Math.pow(1 - x, 3);
        },

        &quot;strong-decelerate&quot;: function (x) {
            return 1 - Math.pow(1 - x, 5);
        },

        &quot;accelerate-decelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = Math.pow(2 * xs, 3) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;strong-accelerate-decelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = Math.pow(2 * xs, 5) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;decelerate-accelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = (1 - Math.pow(1 - 2 * xs, 2)) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;strong-decelerate-accelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = (1 - Math.pow(1 - 2 * xs, 3)) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },
        
        &quot;immediate-beginning&quot;: function (x) {
            return 1;
        },
        
        &quot;immediate-end&quot;: function (x) {
            return x === 1 ? 1 : 0;
        },
        
        &quot;immediate-middle&quot;: function (x) {
            return x &gt;= 0.5 ? 1 : 0;
        }
    };
});


/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.display
 * @namespace Display management.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.display&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // Constant: the Sozi namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

    var XLINK_NS = &quot;http://www.w3.org/1999/xlink&quot;;
    
    // The global document object
    var document = window.document;
    
    // The initial bounding box of the whole document,
    // assigned in onDocumentReady()
    var initialBBox;
    
    var lastWindowWidth;
    var lastWindowHeight;
    
    exports.viewPorts = {};
    
    var primaryViewport;

    /**
     * @depend proto.js
     */
    exports.CameraState = sozi.proto.Object.subtype({
        construct : function () {
            // Center coordinates
            this.cx = this.cy = 0;
            
            // Dimensions
            this.width = this.height = 1;
            
            // Rotation angle, in degrees
            this.angle = 0;
            
            // Clipping
            this.clipped = true;
            
            // Transition zoom
            this.transitionZoomPercent = 0;
            
            // Transition profile
            this.transitionProfile = sozi.animation.profiles.linear;
            
            // Transition path
            this.transitionPath = null;
        },

        setCenter: function (cx, cy) {
            this.cx = cx;
            this.cy = cy;
            return this;
        },
        
        setSize: function (width, height) {
            this.width = width;
            this.height = height;
            return this;
        },
        
        setClipped: function (clipped) {
            this.clipped = clipped;
            return this;
        },
        
        /*
         * Set the angle of the current camera state.
         * The angle of the current state is normalized
         * in the interval [-180 ; 180]
         */
        setAngle: function (angle) {
            this.angle = (angle + 180) % 360 - 180;
            return this;
        },
        
        setRawAngle: function (angle) {
            this.angle = angle;
            return this;
        },
        
        setTransitionZoomPercent: function (zoomPercent) {
            this.transitionZoomPercent = zoomPercent;
            return this;
        },
        
        setTransitionProfile: function (profile) {
            this.transitionProfile = profile;
            return this;
        },
        
        setTransitionPath: function (svgPath) {
            this.transitionPath = svgPath;
            return this;
        },
        
        /*
         * Set the current camera's properties to the given SVG element.
         *
         * If the element is a rectangle, the properties of the frames are based
         * on the geometrical properties of the rectangle.
         * Otherwise, the properties of the frame are based on the bounding box
         * of the given element.
         *
         * Parameters:
         *    - svgElement: an element from the SVG DOM
         */
        setAtElement: function (svgElement) {
            // Read the raw bounding box of the given SVG element
            var x, y, w, h;
            if (svgElement.nodeName === &quot;rect&quot;) {
                x = svgElement.x.baseVal.value;
                y = svgElement.y.baseVal.value;
                w = svgElement.width.baseVal.value;
                h = svgElement.height.baseVal.value;
            } else {
                var b = svgElement.getBBox();
                x = b.x;
                y = b.y;
                w = b.width;
                h = b.height;
            }

            // Compute the raw coordinates of the center
            // of the given SVG element
            var c = document.documentElement.createSVGPoint();
            c.x = x + w / 2;
            c.y = y + h / 2;
            
            // Compute the coordinates of the center of the given SVG element
            // after its current transformation
            var matrix = svgElement.getCTM();
            c = c.matrixTransform(matrix);

            // Compute the scaling factor applied to the given SVG element
            var scale = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);
            
            // Update the camera to match the bounding box information of the
            // given SVG element after its current transformation
            return this.setCenter(c.x, c.y)
                .setSize(w * scale, h * scale)
                .setAngle(Math.atan2(matrix.b, matrix.a) * 180 / Math.PI);
        },

        setAtState: function (other) {
            return this.setCenter(other.cx, other.cy)
                .setSize(other.width, other.height)
                .setAngle(other.angle)
                .setClipped(other.clipped)
                .setTransitionZoomPercent(other.transitionZoomPercent)
                .setTransitionProfile(other.transitionProfile)
                .setTransitionPath(other.transitionPath);
        },
        
        interpolatableAttributes: [&quot;width&quot;, &quot;height&quot;, &quot;angle&quot;],
        
        interpolate: function (initialState, finalState, ratio, useTransitionPath, reverseTransitionPath) {
            var remaining = 1 - ratio;
            for (var i = 0; i &lt; this.interpolatableAttributes.length; i += 1) {
                var attr = this.interpolatableAttributes[i];
                this[attr] = finalState[attr] * ratio + initialState[attr] * remaining;
            }

            var svgPath = reverseTransitionPath ? initialState.transitionPath : finalState.transitionPath;
            if (useTransitionPath &amp;&amp; svgPath) {
                var pathLength = svgPath.getTotalLength();
                
                if (reverseTransitionPath) {
                    var startPoint = svgPath.getPointAtLength(pathLength);
                    var endPoint = svgPath.getPointAtLength(0);
                    var currentPoint = svgPath.getPointAtLength(pathLength * remaining);
                }
                else {
                    var startPoint = svgPath.getPointAtLength(0);
                    var endPoint = svgPath.getPointAtLength(pathLength);
                    var currentPoint = svgPath.getPointAtLength(pathLength * ratio);
                }
 
                this.cx = currentPoint.x + (finalState.cx - endPoint.x) * ratio + (initialState.cx - startPoint.x) * remaining;
                this.cy = currentPoint.y + (finalState.cy - endPoint.y) * ratio + (initialState.cy - startPoint.y) * remaining;
            }
            else {
                this.cx = finalState.cx * ratio + initialState.cx * remaining;
                this.cy = finalState.cy * ratio + initialState.cy * remaining;
            }
        }
    });
    
    exports.Camera = exports.CameraState.subtype({
        construct: function (viewPort, idLayer) {
            exports.CameraState.construct.call(this);
            
            this.viewPort = viewPort;
            
            // Clipping rectangle
            this.svgClipRect = document.createElementNS(SVG_NS, &quot;rect&quot;);
        
            // Clipping path
            var svgClipPath = document.createElementNS(SVG_NS, &quot;clipPath&quot;);
            svgClipPath.setAttribute(&quot;id&quot;, &quot;sozi-clip-path-&quot; + viewPort.id + &quot;-&quot; + idLayer);
            svgClipPath.appendChild(this.svgClipRect);
            viewPort.svgGroup.appendChild(svgClipPath);

            // The group that will support the clipping operation
            var svgClippedGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
            svgClippedGroup.setAttribute(&quot;clip-path&quot;, &quot;url(#sozi-clip-path-&quot; + viewPort.id + &quot;-&quot; + idLayer + &quot;)&quot;);
            viewPort.svgGroup.appendChild(svgClippedGroup);
            
            if (viewPort.isPrimary) {
                // This group will support transformations
                // we keep the layer group clean since it can be referenced
                // from &lt;use&gt; elements
                this.svgLayer = document.createElementNS(SVG_NS, &quot;g&quot;);
                this.svgLayer.appendChild(document.getElementById(idLayer));
            }
            else {
                // A &lt;use&gt; element referencing the target layer
                this.svgLayer = document.createElementNS(SVG_NS, &quot;use&quot;);
                this.svgLayer.setAttributeNS(XLINK_NS, &quot;href&quot;, &quot;#&quot; + idLayer);
            }
            svgClippedGroup.appendChild(this.svgLayer);
        },
        
        setAtState: function (other) {
            return exports.CameraState.setAtState.call(this, other).update();
        },
        
        getScale: function () {
            return Math.min(this.viewPort.width / this.width, this.viewPort.height / this.height);
        },
        
        rotate: function (angle) {
            return this.setAngle(this.angle + angle).update();
        },

        zoom: function (factor, x, y) {
            return this.setSize(this.width / factor, this.height / factor)
                       .drag(
                            (1 - factor) * (x - this.viewPort.width / 2),
                            (1 - factor) * (y - this.viewPort.height / 2)
                        );
        },
        
        drag: function (deltaX, deltaY) {
            var scale = this.getScale();
            var angleRad = this.angle * Math.PI / 180;
            var si = Math.sin(angleRad);
            var co = Math.cos(angleRad);
            return this.setCenter(
                    this.cx - (deltaX * co - deltaY * si) / scale,
                    this.cy - (deltaX * si + deltaY * co) / scale
                ).setClipped(false).update();
        },

        update: function () {
            var scale = this.getScale();
                    
            // Compute the size and location of the frame on the screen
            var width = this.width  * scale;
            var height = this.height * scale;
            var x = (this.viewPort.width - width) / 2;
            var y = (this.viewPort.height - height) / 2;

            // Adjust the location and size of the clipping rectangle and the frame rectangle
            this.svgClipRect.setAttribute(&quot;x&quot;, this.clipped ? x : 0);
            this.svgClipRect.setAttribute(&quot;y&quot;, this.clipped ? y : 0);
            this.svgClipRect.setAttribute(&quot;width&quot;,  this.clipped ? width  : this.viewPort.width);
            this.svgClipRect.setAttribute(&quot;height&quot;, this.clipped ? height : this.viewPort.height);
                    
            // Compute and apply the geometrical transformation to the layer group
            var translateX = -this.cx + this.width / 2  + x / scale;
            var translateY = -this.cy + this.height / 2 + y / scale;

            this.svgLayer.setAttribute(&quot;transform&quot;,
                &quot;scale(&quot; + scale + &quot;)&quot; +
                &quot;translate(&quot; + translateX + &quot;,&quot; + translateY + &quot;)&quot; +
                &quot;rotate(&quot; + (-this.angle) + ',' + this.cx + &quot;,&quot; + this.cy + &quot;)&quot;
            );
            
            return this;
        }
    });
    
    /**
     * @depend proto.js
     */
    exports.ViewPort = sozi.proto.Object.subtype({
        construct: function (id, idLayerList, primary) {
            this.id = id;
            exports.viewPorts[id] = this;
            
            this.isPrimary = !!primary;
            
            if (this.isPrimary) {
                if (primaryViewport) {
                    throw &quot;Failed to create a primary viewport. A primary viewport already exists.&quot;;
                }
                else {
                    primaryViewport = this;
                }
            }
            
            // TODO add a clip path for the viewport
            this.svgGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
            this.svgGroup.setAttribute(&quot;class&quot;, &quot;sozi-viewport&quot;);
            this.svgGroup.setAttribute(&quot;id&quot;, &quot;sozi-viewport-&quot; + id);
            document.documentElement.appendChild(this.svgGroup);
            
            this.setLocation(0, 0).setSize(window.innerWidth, window.innerHeight);
            
            // Create a camera for each layer
            this.cameras = {};
            idLayerList.forEach(function (idLayer) {
                this.cameras[idLayer] = exports.Camera.instance(this, idLayer);
            }, this);
        },
        
        setSize: function (width, height) {
            this.width = width;
            this.height = height;
            return this;
        },
        
        setLocation: function (x, y) {
            this.x = x;
            this.y = y;
            return this;
        },

        contains: function (x, y) {
            return x &gt;= this.x &amp;&amp; x &lt; this.x + this.width &amp;&amp;
                   y &gt;= this.y &amp;&amp; y &lt; this.y + this.height;
        },
        
        /*
         * Returns the geometrical properties of the SVG document
         *
         * Returns:
         *    - The default size, translation and rotation for the document's bounding box
         */
        getDocumentState: function () {
            // This object defines the bounding box of the whole document
            var camera = exports.CameraState.instance()
                .setCenter(initialBBox.x + initialBBox.width / 2,
                           initialBBox.y + initialBBox.height / 2)
                .setSize(initialBBox.width, initialBBox.height)
                .setClipped(false);
            
            // Copy the document's bounding box to all layers
            var result = {};
            for (var idLayer in this.cameras) {
                result[idLayer] = camera;
            }
            return result;
        },

        /*
         * Apply geometrical transformations to the image according to the current
         * geometrical attributes of this Display.
         *
         * This method is called automatically when the window is resized.
         */
        update: function () {
            this.svgGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + this.x + &quot;,&quot; + this.y + &quot;)&quot;);
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].update();
            }
            return this;
        },

        /*
         * Transform the SVG document to show the given frame.
         *
         * Parameters:
         *    - frame: the frame to show
         */
        showFrame: function (frame) {
            for (var idLayer in frame.states) {
                this.cameras[idLayer].setAtState(frame.states[idLayer]);
            }
            return this;
        },

        /*
         * Apply an additional translation to the SVG document based on onscreen coordinates.
         *
         * Parameters:
         *    - deltaX: the horizontal displacement, in pixels
         *    - deltaY: the vertical displacement, in pixels
         */
        drag: function (deltaX, deltaY) {
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].drag(deltaX, deltaY);
            }
            return this;
        },

        /*
         * Zooms the display with the given factor.
         *
         * The zoom is centered around (x, y) with respect to the center of the display area.
         */
        zoom: function (factor, x, y) {
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].zoom(factor, x, y);
            }
            return this;
        },

        /*
         * Rotate the display with the given angle.
         *
         * The rotation is centered around the center of the display area.
         */
        rotate: function (angle) {
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].rotate(angle);
            }
            return this;
        },
        
        /**
         * The default handler for window resize events.
         *
         * @param widthRatio The horizontal resize ratio
         * @param heightRatio The vertical resize ratio
         */
        onWindowResize: function (widthRatio, heightRatio) {
            this.setLocation(this.x * widthRatio, this.y * heightRatio)
                .setSize(this.width * widthRatio, this.height * heightRatio)
                .update();
        }
    });
    
    /*
     * Initializes the current Display.
     *
     * This method prepares the DOM representation of the current SVG document.
     * All the image is embedded into a global &quot;g&quot; element on which transformations will be applied.
     * A clipping rectangle is added.
     *
     * This method must be called when the document is ready to be manipulated.
     */
    function onDocumentReady() {
        var svgRoot = document.documentElement; // TODO check SVG tag
        
        // Save the initial bounding box of the document
        // and force its dimensions to the browser window
        initialBBox = svgRoot.getBBox();
        lastWindowWidth = window.innerWidth;
        lastWindowHeight = window.innerHeight;
        svgRoot.setAttribute(&quot;width&quot;, lastWindowWidth);
        svgRoot.setAttribute(&quot;height&quot;, lastWindowHeight);
        
        sozi.events.fire(&quot;sozi.display.ready&quot;);
    }

    /*
     * Resizes the SVG document to fit the browser window.
     *
     * This method calls onWindowResize on all registered viewports.
     */
    function resize() {
        var svgRoot = document.documentElement;
        svgRoot.setAttribute(&quot;width&quot;, window.innerWidth);
        svgRoot.setAttribute(&quot;height&quot;, window.innerHeight);
        
        for (var vp in exports.viewPorts) {
            exports.viewPorts[vp].onWindowResize(window.innerWidth / lastWindowWidth, window.innerHeight / lastWindowHeight);
        }

        lastWindowWidth = window.innerWidth;
        lastWindowHeight = window.innerHeight;
    }
    
    sozi.events.listen(&quot;sozi.document.ready&quot;, onDocumentReady); // @depend events.js
    window.addEventListener(&quot;resize&quot;, resize, false);
});

/*
* Sozi - A presentation tool using the SVG standard
*
* Copyright (C) 2010-2013 Guillaume Savaton
*
* This program is dual licensed under the terms of the MIT license
* or the GNU General Public License (GPL) version 3.
* A copy of both licenses is provided in the doc/ folder of the
* official release of Sozi.
*
* See http://sozi.baierouge.fr/wiki/en:license for details.
*/

/**
 * @name sozi.document
 * @namespace Document analysis.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.document&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
    var document = window.document;
    
    // Constant: the Sozi namespace
    var SOZI_NS = &quot;http://sozi.baierouge.fr&quot;;
    
    // Constant: the default frame properties, if missing in the SVG document
    var DEFAULTS = {
        &quot;title&quot;: &quot;Untitled&quot;,
        &quot;sequence&quot;: &quot;0&quot;,
        &quot;hide&quot;: &quot;true&quot;,
        &quot;clip&quot;: &quot;true&quot;,
        &quot;show-in-frame-list&quot;: &quot;true&quot;,
        &quot;timeout-enable&quot;: &quot;false&quot;,
        &quot;timeout-ms&quot;: &quot;5000&quot;,
        &quot;transition-duration-ms&quot;: &quot;1000&quot;,
        &quot;transition-zoom-percent&quot;: &quot;0&quot;,
        &quot;transition-profile&quot;: &quot;linear&quot;,
        &quot;transition-path-hide&quot;: &quot;true&quot;
    };

    var DRAWABLE_TAGS = [ &quot;g&quot;, &quot;image&quot;, &quot;path&quot;, &quot;rect&quot;, &quot;circle&quot;,
        &quot;ellipse&quot;, &quot;line&quot;, &quot;polyline&quot;, &quot;polygon&quot;, &quot;text&quot;, &quot;clippath&quot; ];

    // The definitions of all valid frames in the current document
    exports.frames = [];
    
    // The list of layer ids managed by Sozi
    exports.idLayerList = [];
    
    /*
    * Returns the value of an attribute of a given Sozi SVG element.
    *
    * If the attribute is empty or does not exist,
    * then a default value is returned (See DEFAULTS).
    */
    function readAttribute(soziElement, attr) {
        return soziElement.getAttributeNS(SOZI_NS, attr) || DEFAULTS[attr];
    }

    function readStateForLayer(frame, idLayer, soziElement) {
        var state = frame.states[idLayer] =
            frame.states[idLayer] || sozi.display.CameraState.instance();
        
        if (typeof state.transitionZoomPercent === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-zoom-percent&quot;)) {
            state.setTransitionZoomPercent(parseInt(readAttribute(soziElement, &quot;transition-zoom-percent&quot;), 10));
        }

        if (typeof state.transitionProfile === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-profile&quot;)) {
            state.setTransitionProfile(sozi.animation.profiles[readAttribute(soziElement, &quot;transition-profile&quot;)]);
        }
        
        if (typeof state.transitionPath === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-path&quot;)) {
            var svgPath = document.getElementById(soziElement.getAttributeNS(SOZI_NS, &quot;transition-path&quot;));
            if (svgPath &amp;&amp; svgPath.nodeName === &quot;path&quot;) {
                state.setTransitionPath(svgPath);
                if (readAttribute(soziElement, &quot;transition-path-hide&quot;) === &quot;true&quot;) {
                    svgPath.style.visibility = &quot;hidden&quot;;
                }
            }
        }
        
        if (soziElement.hasAttributeNS(SOZI_NS, &quot;refid&quot;)) {
            var svgElement = document.getElementById(soziElement.getAttributeNS(SOZI_NS, &quot;refid&quot;));
            if (svgElement) {
                state.setAtElement(svgElement);
                if (readAttribute(soziElement, &quot;hide&quot;) === &quot;true&quot;) {
                    svgElement.style.visibility = &quot;hidden&quot;;
                }
            }
        }
            
        if (soziElement.hasAttributeNS(SOZI_NS, &quot;clip&quot;)) {
            state.setClipped(readAttribute(soziElement, &quot;clip&quot;) === &quot;true&quot;);
        }
    }
    
    /*
    * Builds the list of frames from the current document.
    *
    * This method collects all elements with tag &quot;sozi:frame&quot; and
    * retrieves their geometrical and animation attributes.
    * SVG elements that should be hidden during the presentation are hidden.
    *
    * The resulting list is available in frames, sorted by frame indices.
    */
    function readFrames() {
        // Collect all group ids referenced in &lt;layer&gt; elements
        var idLayerRefList = [];
        var soziLayerList = document.getElementsByTagNameNS(SOZI_NS, &quot;layer&quot;);
        for (var i = 0; i &lt; soziLayerList.length; i += 1) {
            var idLayer = soziLayerList[i].getAttributeNS(SOZI_NS, &quot;group&quot;);
            if (idLayer &amp;&amp; idLayerRefList.indexOf(idLayer) === -1) {
                idLayerRefList.push(idLayer);
            }
        }

        // Reorganize the document, grouping objects that do not belong
        // to a group referenced in &lt;layer&gt; elements
        var svgRoot = document.documentElement;
        var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

        // Create the first wrapper group
        var svgWrapper = document.createElementNS(SVG_NS, &quot;g&quot;);

        // For each child of the root SVG element
        var svgElementList = Array.prototype.slice.call(svgRoot.childNodes);
        svgElementList.forEach(function (svgElement, index) {
            if (!svgElement.getAttribute) {
                // Remove text elements
                svgRoot.removeChild(svgElement);
            }
            else if (idLayerRefList.indexOf(svgElement.getAttribute(&quot;id&quot;)) !== -1) {
                // If the current element is a referenced layer ...
                if (svgWrapper.firstChild) {
                    // ... and if there were other non-referenced elements before it,
                    // append the wrapper group to the &lt;defs&gt; element
                    svgWrapper.setAttribute(&quot;id&quot;, &quot;sozi-wrapper-&quot; + index);
                    exports.idLayerList.push(&quot;sozi-wrapper-&quot; + index);
                    svgRoot.insertBefore(svgWrapper, svgElement);
                    
                    // Prepare a new wrapper element
                    svgWrapper = document.createElementNS(SVG_NS, &quot;g&quot;);
                }
                
                // ... append the current element to the &lt;defs&gt; element
                exports.idLayerList.push(svgElement.getAttribute(&quot;id&quot;));
            }
            else if (DRAWABLE_TAGS.indexOf(svgElement.localName.toLowerCase()) !== -1) {
                // If the current element is not a referenced layer
                // and is drawable, move it to the current wrapper element
                svgRoot.removeChild(svgElement);
                svgWrapper.appendChild(svgElement);
            }
        });

        // Append last wrapper if needed
        if (svgWrapper.firstChild) {
            svgWrapper.setAttribute(&quot;id&quot;, &quot;sozi-wrapper-&quot; + svgElementList.length);
            exports.idLayerList.push(&quot;sozi-wrapper-&quot; + svgElementList.length);
            svgRoot.appendChild(svgWrapper);
        }

        
        // Analyze &lt;frame&gt; elements sorted by sequence number
        var soziFrameList = Array.prototype.slice.call(document.getElementsByTagNameNS(SOZI_NS, &quot;frame&quot;));
        soziFrameList.sort(
            function (a, b) {
                var seqA = parseInt(readAttribute(a, &quot;sequence&quot;), 10);
                var seqB = parseInt(readAttribute(b, &quot;sequence&quot;), 10)
                return seqA - seqB;
            }
        );
        
        soziFrameList.forEach(function (soziFrame, indexFrame) {
            var newFrame = {
                id: soziFrame.getAttribute(&quot;id&quot;),
                title: readAttribute(soziFrame, &quot;title&quot;),
                showInFrameList: readAttribute(soziFrame, &quot;show-in-frame-list&quot;) === &quot;true&quot;,
                sequence: parseInt(readAttribute(soziFrame, &quot;sequence&quot;), 10),
                timeoutEnable: readAttribute(soziFrame, &quot;timeout-enable&quot;) === &quot;true&quot;,
                timeoutMs: parseInt(readAttribute(soziFrame, &quot;timeout-ms&quot;), 10),
                transitionDurationMs: parseInt(readAttribute(soziFrame, &quot;transition-duration-ms&quot;), 10),
                states: {}
            };

            // Get the default properties for all layers, either from
            // the current &lt;frame&gt; element or from the corresponding
            // layer in the previous frame.
            // Those properties can later be overriden by &lt;layer&gt; elements
            exports.idLayerList.forEach(function (idLayer) {
                if (indexFrame === 0 || idLayer.search(&quot;sozi-wrapper-[0-9]+&quot;) !== -1) {
                    // In the first frame, or in wrapper layers,
                    // read layer attributes from the &lt;frame&gt; element
                    readStateForLayer(newFrame, idLayer, soziFrame);
                }
                else {
                    // After the first frame, in referenced layers,
                    // copy attributes from the corresponding layer in the previous frame
                    var currentState = newFrame.states[idLayer] = sozi.display.CameraState.instance();
                    var previousState = exports.frames[exports.frames.length - 1].states[idLayer];
                    currentState.setAtState(previousState);
                }
            });

            // Collect and analyze &lt;layer&gt; elements in the current &lt;frame&gt; element
            var soziLayerList = Array.prototype.slice.call(soziFrame.getElementsByTagNameNS(SOZI_NS, &quot;layer&quot;));
            soziLayerList.forEach(function (soziLayer) {
                var idLayer = soziLayer.getAttributeNS(SOZI_NS, &quot;group&quot;);
                if (idLayer &amp;&amp; exports.idLayerList.indexOf(idLayer) !== -1) {
                    readStateForLayer(newFrame, idLayer, soziLayer);
                }
            });
            
            // If the &lt;frame&gt; element has at least one valid layer,
            // add it to the frame list
            for (var idLayer in newFrame.states) {
                if (newFrame.states.hasOwnProperty(idLayer)) {
                    exports.frames.push(newFrame);
                    break;
                }
            }
        });
    }

    /**
     * Return the frame with the given id.
     *
     * @return The index of the frame with the given id. -1 if not found.
     */
    exports.getFrameIndexForId = function (idFrame) {
        for (var indexFrame = 0; indexFrame &lt; exports.frames.length; indexFrame += 1) {
            if (exports.frames[indexFrame].id === idFrame) {
                return indexFrame;
            }
        }
        return - 1;
    };
    
    /*
     * Event handler: document load.
     *
     * This function reads the frames from the document and fires
     * the &quot;documentready&quot; event.
     *
     * @depend events.js
     */
    function onLoad() {
        document.documentElement.removeAttribute(&quot;viewBox&quot;);
        readFrames();
        sozi.events.fire(&quot;sozi.document.ready&quot;);
    }

    window.addEventListener(&quot;load&quot;, onLoad, false);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.framelist
 * @namespace Show the frame list.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.framelist&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
	var document = window.document;
	
    // Constant: the margin around the text of the frame list
    var MARGIN = 5;
    
	// The SVG group that will contain the frame list
    var svgTocGroup;
    
    // The SVG group that will contain the frame titles
    var svgTitlesGroup;
    
    // The current height of the frame list,
    // computed during the initialization
    var tocHeight = 0;
    
    // The X coordinate of the frame list in its hidden state
    var translateXHidden;
    
    // The X coordinate of the frame list when it is completely visible
    var translateXVisible;
    
    // The initial X coordinate of the frame list before starting an animation.
    // This variable is set before showing/hiding the frame list.
    var translateXStart;
    
    // The final X coordinate of the frame list for the starting animation.
    // This variable is set before showing/hiding the frame list.
    var translateXEnd;
    
    // The current X coordinate of the frame list for the running animation.
    // This variable is updated on each animation step.
    var translateX;
    
    // The animator object that will manage animations of the frame list
    var animator;
    
    // Constant: the duration of the showing/hiding animation, in milliseconds
    var ANIMATION_TIME_MS = 300;
    
    // Constant: the acceleration profile of the showing/hiding animation
    var ANIMATION_PROFILE = &quot;decelerate&quot;;
    
    // Constant: the SVG namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

	function onMouseOut(evt) {
        var rel = evt.relatedTarget,
            svgRoot = document.documentElement;
        while (rel &amp;&amp; rel !== svgTocGroup &amp;&amp; rel !== svgRoot) {
            rel = rel.parentNode;
        }
        if (rel !== svgTocGroup) {
            exports.hide();
            sozi.player.restart();
            evt.stopPropagation();
        }
    }

	function onClickArrowUp(evt) {
        var ty = svgTitlesGroup.getCTM().f;
        if (ty &lt;= -window.innerHeight / 2) {
            ty += window.innerHeight / 2;
        } else if (ty &lt; 0) {
            ty = 0;
        }
        svgTitlesGroup.setAttribute(&quot;transform&quot;, &quot;translate(0,&quot; + ty + &quot;)&quot;);
        evt.stopPropagation();
	}

	function onClickArrowDown(evt) {
        var ty = svgTitlesGroup.getCTM().f;
        if (ty + tocHeight &gt;= window.innerHeight * 3 / 2) {
            ty -= window.innerHeight / 2;
        } else if (ty + tocHeight &gt; window.innerHeight + 2 * MARGIN) {
            ty = window.innerHeight - tocHeight - 4 * MARGIN;
        }
        svgTitlesGroup.setAttribute(&quot;transform&quot;, &quot;translate(0,&quot; + ty + &quot;)&quot;);
        evt.stopPropagation();
    }

    /*
     * Create a function that responds to clicks on frame list entries.
     */
    function makeClickHandler(index) {
        return function (evt) {
            sozi.player.previewFrame(index);
            evt.stopPropagation();
        };
    }
    
    /*
     * The default event handler, to prevent event propagation
     * through the frame list.
     */
    function defaultEventHandler(evt) {
	    evt.stopPropagation();
    }
    
    /*
     * Adds a table of contents to the document.
     *
     * The table of contents is a rectangular region with the list of frame titles.
     * Clicking on a title moves the presentation to the corresponding frame.
     *
     * The table of contents is hidden by default.
     */
    function onPlayerReady() {
        svgTocGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgTocGroup.setAttribute(&quot;id&quot;, &quot;sozi-toc&quot;);
        document.documentElement.appendChild(svgTocGroup);

        svgTitlesGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgTocGroup.appendChild(svgTitlesGroup);
    
        // The background rectangle of the frame list
        var tocBackground = document.createElementNS(SVG_NS, &quot;rect&quot;);
        tocBackground.setAttribute(&quot;id&quot;, &quot;sozi-toc-background&quot;);
        tocBackground.setAttribute(&quot;x&quot;, MARGIN);
        tocBackground.setAttribute(&quot;y&quot;, MARGIN);
        tocBackground.setAttribute(&quot;rx&quot;, MARGIN);
        tocBackground.setAttribute(&quot;ry&quot;, MARGIN);
        tocBackground.addEventListener(&quot;click&quot;, defaultEventHandler, false);
        tocBackground.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        tocBackground.addEventListener(&quot;mouseout&quot;, onMouseOut, false);
        svgTitlesGroup.appendChild(tocBackground);

        var tocWidth = 0;
        sozi.document.frames.forEach(function (frame, frameIndex) {
            if (frame.showInFrameList) {
                var text = document.createElementNS(SVG_NS, &quot;text&quot;);
                text.appendChild(document.createTextNode(frame.title));
                text.setAttribute(&quot;id&quot;, &quot;sozi-toc-&quot; + frame.id);
                svgTitlesGroup.appendChild(text);
    
                if (frameIndex === sozi.player.currentFrameIndex) {
                    text.setAttribute(&quot;class&quot;, &quot;sozi-toc-current&quot;);
                }
                         
                var textWidth = text.getBBox().width;
                tocHeight += text.getBBox().height;
                if (textWidth &gt; tocWidth) {
                    tocWidth = textWidth;
                }
    
                text.setAttribute(&quot;x&quot;, 2 * MARGIN);
                text.setAttribute(&quot;y&quot;, tocHeight + MARGIN);
                text.addEventListener(&quot;click&quot;, makeClickHandler(frameIndex), false);
                text.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
            }
        });

        // The &quot;up&quot; button
        var tocUp = document.createElementNS(SVG_NS, &quot;path&quot;);
        tocUp.setAttribute(&quot;class&quot;, &quot;sozi-toc-arrow&quot;);
        tocUp.setAttribute(&quot;d&quot;, &quot;M&quot; + (tocWidth + 3 * MARGIN) + &quot;,&quot; + (5 * MARGIN) +
                           &quot; l&quot; + (4 * MARGIN) + &quot;,0&quot; +
                           &quot; l-&quot; + (2 * MARGIN) + &quot;,-&quot; + (3 * MARGIN) +
                           &quot; z&quot;);
        tocUp.addEventListener(&quot;click&quot;, onClickArrowUp, false);
        tocUp.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        svgTocGroup.appendChild(tocUp);

        // The &quot;down&quot; button
        var tocDown = document.createElementNS(SVG_NS, &quot;path&quot;);
        tocDown.setAttribute(&quot;class&quot;, &quot;sozi-toc-arrow&quot;);
        tocDown.setAttribute(&quot;d&quot;, &quot;M&quot; + (tocWidth + 3 * MARGIN) + &quot;,&quot; + (7 * MARGIN) +
                             &quot; l&quot; + (4 * MARGIN) + &quot;,0&quot; +
                             &quot; l-&quot; + (2 * MARGIN) + &quot;,&quot; + (3 * MARGIN) +
                             &quot; z&quot;);
        tocDown.addEventListener(&quot;click&quot;, onClickArrowDown, false);
        tocDown.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        svgTocGroup.appendChild(tocDown);

        tocBackground.setAttribute(&quot;width&quot;, tocWidth + 7 * MARGIN);
        tocBackground.setAttribute(&quot;height&quot;, tocHeight + 2 * MARGIN);
        
        translateXHidden = -tocWidth - 9 * MARGIN;
        translateXVisible = 0;
        translateX = translateXEnd = translateXHidden;
        
        svgTocGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + translateXHidden + &quot;,0)&quot;);
        animator = sozi.animation.Animator.instance().augment({
            onStep: function (progress) {
                var profileProgress = sozi.animation.profiles[ANIMATION_PROFILE](progress),
                    remaining = 1 - profileProgress;
                translateX = translateXEnd * profileProgress + translateXStart * remaining;
                svgTocGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + translateX + &quot;,0)&quot;);
            }
        });
    }

	/*
	 * Highlight the current frame title in the frame list.
	 *
	 * This handler is called on each frame change,
	 * even when the frame list is hidden.
	 */
    function onFrameChange(index) {
        var currentElementList = Array.prototype.slice.call(document.getElementsByClassName(&quot;sozi-toc-current&quot;));
        currentElementList.forEach(function (svgElement) {
            svgElement.removeAttribute(&quot;class&quot;);
        });

        var frame = sozi.document.frames[index];
        if (frame.showInFrameList) {
            document.getElementById(&quot;sozi-toc-&quot; + frame.id).setAttribute(&quot;class&quot;, &quot;sozi-toc-current&quot;);
        }
    }
    
    /*
     * Makes the table of contents visible.
     */
    exports.show = function () {
        // Bring frame list to front
        document.documentElement.appendChild(svgTocGroup);
        
        translateXStart = translateX;
        translateXEnd = translateXVisible;
        animator.start(ANIMATION_TIME_MS); // FIXME depends on current elapsed time
    };

    /*
     * Makes the table of contents invisible.
     */
    exports.hide = function () {
        translateXStart = translateX;
        translateXEnd = translateXHidden;
        animator.start(ANIMATION_TIME_MS); // FIXME depends on current elapsed time
    };

    /*
     * Returns true if the table of contents is visible, false otherwise.
     */
    exports.isVisible = function () {
        return translateXEnd === translateXVisible;
    };

    // @depend events.js
	sozi.events.listen(&quot;sozi.player.ready&quot;, onPlayerReady);
	sozi.events.listen(&quot;sozi.player.cleanup&quot;, exports.hide);
	sozi.events.listen(&quot;sozi.player.framechange&quot;, onFrameChange);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.framenumber
 * @namespace Show the frame number.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.framenumber&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
    var document = window.document;
    
    // The SVG group containing the frame number
    var svgGroup;
    
    // The SVG text element and its text node containing the frame number
    var svgText, svgTextNode;
    
    // The SVG circle enclosing the frame number
    var svgCircle;
    
    // Constant: the SVG namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;
    
    function adjust() {
        var textBBox = svgText.getBBox(),
            d = Math.max(textBBox.width, textBBox.height) * 0.75,
            t = d * 1.25;
        svgCircle.setAttribute(&quot;r&quot;, d);
        svgGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + t + &quot;,&quot; + t + &quot;)&quot;);
    }
    
    function onPlayerReady() {
        svgGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgText = document.createElementNS(SVG_NS, &quot;text&quot;);
        svgCircle = document.createElementNS(SVG_NS, &quot;circle&quot;);
        
        svgGroup.setAttribute(&quot;id&quot;, &quot;sozi-framenumber&quot;);

        svgCircle.setAttribute(&quot;cx&quot;, 0);
        svgCircle.setAttribute(&quot;cy&quot;, 0);
        svgGroup.appendChild(svgCircle);
        
        svgTextNode = document.createTextNode(sozi.player.currentFrameIndex + 1);
        svgText.setAttribute(&quot;text-anchor&quot;, &quot;middle&quot;);
        svgText.setAttribute(&quot;dominant-baseline&quot;, &quot;central&quot;);
        svgText.setAttribute(&quot;x&quot;, 0);
        svgText.setAttribute(&quot;y&quot;, 0);
        svgText.appendChild(svgTextNode);
        svgGroup.appendChild(svgText);
        
        document.documentElement.appendChild(svgGroup);
        
        adjust();
    }

    function onFrameChange(index) {
        svgTextNode.nodeValue = index + 1;
    }
    
    // @depend events.js
	sozi.events.listen(&quot;sozi.player.ready&quot;, onPlayerReady);
	sozi.events.listen(&quot;sozi.player.framechange&quot;, onFrameChange);
});

/*
* Sozi - A presentation tool using the SVG standard
*
* Copyright (C) 2010-2013 Guillaume Savaton
*
* This program is dual licensed under the terms of the MIT license
* or the GNU General Public License (GPL) version 3.
* A copy of both licenses is provided in the doc/ folder of the
* official release of Sozi.
*
* See http://sozi.baierouge.fr/wiki/en:license for details.
*/

/**
 * @name sozi.links
 * @namespace Links fix for Webkit.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.links&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;
    var XLINK_NS = &quot;http://www.w3.org/1999/xlink&quot;;
    
    function getClickHandler(index) {
        return function (evt) {
            sozi.player.moveToFrame(index);
            evt.preventDefault();
            evt.stopPropagation();
        };
    }
    
    /*
     * Event handler: document ready.
     *
     * This function adds an event listener to each internal link.
     * Clicking on a link that targets a frame of this document
     * will call sozi.player.moveToFrame().
     */
    function onDocumentReady() {
        var links = window.document.getElementsByTagNameNS(SVG_NS, &quot;a&quot;);
        for (var i = 0; i &lt; links.length; i += 1) {
            var href = links[i].getAttributeNS(XLINK_NS, &quot;href&quot;);
            if (href &amp;&amp; href[0] === &quot;#&quot;) {
                links[i].addEventListener(&quot;click&quot;, getClickHandler(sozi.location.getFrameIndexForHash(href)), false);
            }
        }
    }

    sozi.events.listen(&quot;sozi.document.ready&quot;, onDocumentReady); // @depend events.js
});


/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.location
 * @namespace Manage the URL in the address bar of the browser window.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.location&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    var changedFromWithin = false;

    /*
     * Returns the frame index corresponding to the URL hash.
     *
     * This is a shortcut for sozi.location.getFrameIndexForHash(window.location.hash)
     */
    exports.getFrameIndex = function () {
        return exports.getFrameIndexForHash(window.location.hash);
    };
    
    /*
     * Returns the frame index corresponding to the given URL hash.
     *
     * The URL hash can be either a frame index or a frame id.
     * In the URL, the frame index starts a 1.
     * This method converts it into a 0-based index.
     *
     * If the URL hash is not a positive integer, then 0 is returned.
     * It the URL hash is an integer greater than the last frame index, then
     * the last frame index is returned.
     */
    exports.getFrameIndexForHash = function (hash) {
        var indexOrId = hash ? hash.slice(1) : &quot;1&quot;;
        var index;
        if (/^[0-9]+$/.test(indexOrId)) {
            index = parseInt(indexOrId, 10) - 1;
        }
        else {
            index = sozi.document.getFrameIndexForId(indexOrId);
        }
        
        if (index &lt; 0) {
            return 0;
        }
        else if (index &gt;= sozi.document.frames.length) {
            return sozi.document.frames.length - 1;
        }
        else {
            return index;
        }
    };

    /*
     * Event handler: hash change.
     *
     * This function is called when the URL hash is changed.
     * If the hash was changed manually in the address bar, and if it corresponds to
     * a valid frame number, then the presentation moves to that frame.
     *
     * The hashchange event can be triggered externally, by the user modifying the URL,
     * or internally, by the script modifying window.location.hash.
     */
    function onHashChange() {
        var index = exports.getFrameIndex();
        if (!changedFromWithin) {
            sozi.player.moveToFrame(index);
        }
        changedFromWithin = false;
    }
    
    /*
     * Event handler: frame change.
     *
     * This function is called when the presentation has reached a new frame.
     * The URL hash is set to the current frame id.
     */
    function onFrameChange(index) {
        changedFromWithin = true;
        window.location.hash = &quot;#&quot; + sozi.document.frames[index].id;
    }

    window.addEventListener(&quot;hashchange&quot;, onHashChange, false);
    sozi.events.listen(&quot;sozi.player.framechange&quot;, onFrameChange); // @depend events.js
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.player
 * @namespace Presentation player.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.player&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    var viewPort;
    
    // The animator object used to animate transitions
    var animator;
    
    // The handle returned by setTimeout() for frame timeout
    var nextFrameTimeout;
    
    // Constants: default animation properties
    // for out-of-sequence transitions
    var DEFAULT_DURATION_MS = 500;
    var DEFAULT_ZOOM_PERCENT = -10;
    var DEFAULT_PROFILE = &quot;linear&quot;;
    
    // The source frame index for the current transition
    var sourceFrameIndex = 0;
    
    // The index of the visible frame
    exports.currentFrameIndex = 0;
    
    // The state of the presentation.
    // If false, no automatic transition will be fired.
    var playing = false;
    
    // The state of the current frame.
    // If true, an automatic transition will be fired after the current timeout.
    var waiting = false;

    /*
     * Starts waiting before moving to the next frame.
     *
     * It the current frame has a timeout set, this method
     * will register a timer to move to the next frame automatically
     * after the specified time.
     *
     * If the current frame is the last, the presentation will
     * move to the first frame.
     */
    function waitTimeout() {
        if (sozi.document.frames[exports.currentFrameIndex].timeoutEnable) {
            waiting = true;
            var index = (exports.currentFrameIndex + 1) % sozi.document.frames.length;
            nextFrameTimeout = window.setTimeout(function () {
                    exports.moveToFrame(index);
                },
                sozi.document.frames[exports.currentFrameIndex].timeoutMs
            );
        }
    }

    /*
     * Starts the presentation from the given frame index (0-based).
     *
     * This method sets the &quot;playing&quot; flag, shows the desired frame
     * and calls waitTimeout.
     */
    exports.startFromIndex = function (index) {
        playing = true;
        waiting = false;
        sourceFrameIndex = index;
        exports.currentFrameIndex = index;
        viewPort.showFrame(sozi.document.frames[index]);
        waitTimeout();
    };

    exports.restart = function () {
        exports.startFromIndex(exports.currentFrameIndex);
    };

    /*
     * Stops the presentation.
     *
     * This method clears the &quot;playing&quot;.
     * If the presentation was in &quot;waiting&quot; mode due to a timeout
     * in the current frame, then it stops waiting.
     * The current animation is stopped in its current state.
     */
    exports.stop = function () {
        animator.stop();
        if (waiting) {
            window.clearTimeout(nextFrameTimeout);
            waiting = false;
        }
        playing = false;
        sourceFrameIndex = exports.currentFrameIndex;
    };

    function getZoomData(zoomPercent, s0, s1) {
        var result = {
            ss: ((zoomPercent &lt; 0) ? Math.max(s0, s1) : Math.min(s0, s1)) * (100 - zoomPercent) / 100,
            ts: 0.5,
            k: 0
        };

        if (zoomPercent !== 0) {
            var a = s0 - s1;
            var b = s0 - result.ss;
            var c = s1 - result.ss;

            if (a !== 0) {
                var d = Math.sqrt(b * c);

                var u = (b - d) / a;
                var v = (b + d) / a;

                result.ts = (u &gt; 0 &amp;&amp; u &lt;= 1) ? u : v;
            }

            result.k = b / result.ts / result.ts;
        }

        return result;
    }

    /*
     * Jump to a frame with the given index (0-based).
     *
     * This method does not animate the transition from the current
     * state of the display to the desired frame.
     *
     * The presentation is stopped: if a timeout has been set for the
     * target frame, it will be ignored.
     *
     * The URL hash is set to the given frame index (1-based).
     */
    exports.jumpToFrame = function (index) {
        exports.stop();
        sozi.events.fire(&quot;sozi.player.cleanup&quot;);

        sourceFrameIndex = index;
        exports.currentFrameIndex = index;
        viewPort.showFrame(sozi.document.frames[index]);

        sozi.events.fire(&quot;sozi.player.framechange&quot;, index);
    };

    /*
     * Returns an associative array where keys are layer names
     * and values are objects in the form { initialState: finalState: profile: zoomWidth: zoomHeight:}
     */
    exports.getAnimationData = function (initialState, finalState, zoomPercent, profile, useTransitionPath, reverseTransitionPath) {
        var data = {};
        
        for (var idLayer in initialState) {
            data[idLayer] = {
                initialState: sozi.display.CameraState.instance(),
                finalState: sozi.display.CameraState.instance(),
                useTransitionPath: useTransitionPath,
                reverseTransitionPath: reverseTransitionPath
            };
            
            data[idLayer].profile = profile || finalState[idLayer].transitionProfile;
            data[idLayer].initialState.setAtState(initialState[idLayer]);

            // If the current layer is referenced in final state, copy the final properties
            // else, copy initial state to final state for the current layer.
            if (finalState.hasOwnProperty(idLayer)) {
                data[idLayer].finalState.setAtState(finalState[idLayer]);
            }
            else {
                data[idLayer].finalState.setAtState(initialState[idLayer]);
            }

            // Keep the smallest angle difference between initial state and final state
            // TODO this should be handled in the interpolation function
            if (data[idLayer].finalState.angle - data[idLayer].initialState.angle &gt; 180) {
                data[idLayer].finalState.setRawAngle(data[idLayer].finalState.angle - 360);
            }
            else if (data[idLayer].finalState.angle - data[idLayer].initialState.angle &lt; -180) {
                data[idLayer].initialState.setRawAngle(data[idLayer].initialState.angle - 360);
            }

            var zp = zoomPercent || finalState[idLayer].transitionZoomPercent;
            
            if (zp &amp;&amp; finalState.hasOwnProperty(idLayer)) {
                data[idLayer].zoomWidth = getZoomData(zp,
                    initialState[idLayer].width,
                    finalState[idLayer].width);
                data[idLayer].zoomHeight = getZoomData(zp,
                    initialState[idLayer].height,
                    finalState[idLayer].height);
            }
        }
        return data;
    };
    
    exports.previewFrame = function (index) {
        exports.currentFrameIndex = index;
        animator.start(DEFAULT_DURATION_MS,
            exports.getAnimationData(viewPort.cameras, sozi.document.frames[index].states,
                DEFAULT_ZOOM_PERCENT, sozi.animation.profiles[DEFAULT_PROFILE]),
                false, false);
        sozi.events.fire(&quot;sozi.player.framechange&quot;, index);
    };

    /*
     * Moves to a frame with the given index (0-based).
     *
     * This method animates the transition from the current
     * state of the display to the desired frame.
     *
     * If the given frame index corresponds to the next frame in the list,
     * the transition properties of the next frame are used.
     * Otherwise, default transition properties are used.
     */
    exports.moveToFrame = function (index) {
        if (waiting) {
            window.clearTimeout(nextFrameTimeout);
            waiting = false;
        }

        var durationMs, zoomPercent, profile, useTransitionPath, reverseTransitionPath;
        if (index === (exports.currentFrameIndex - 1) % sozi.document.frames.length) {
            durationMs = sozi.document.frames[exports.currentFrameIndex].transitionDurationMs;
            zoomPercent = undefined; // Set for each layer
            profile = undefined; // Set for each layer
            useTransitionPath = true;
            reverseTransitionPath = true;
        }
        else if (index === (exports.currentFrameIndex + 1) % sozi.document.frames.length) {
            durationMs = sozi.document.frames[index].transitionDurationMs;
            zoomPercent = undefined; // Set for each layer
            profile = undefined; // Set for each layer
            useTransitionPath = true;
            reverseTransitionPath = false;
        }
        else {
            durationMs = DEFAULT_DURATION_MS;
            zoomPercent = DEFAULT_ZOOM_PERCENT;
            profile = sozi.animation.profiles[DEFAULT_PROFILE];
            useTransitionPath = false;
            reverseTransitionPath = false;
        }

        sozi.events.fire(&quot;sozi.player.cleanup&quot;);

        playing = true;
        exports.currentFrameIndex = index;

        animator.start(durationMs, exports.getAnimationData(
            viewPort.cameras, sozi.document.frames[index].states,
            zoomPercent, profile,
            useTransitionPath, reverseTransitionPath));

        sozi.events.fire(&quot;sozi.player.framechange&quot;, index);
    };

    /**
     * Jumps to the first frame of the presentation.
     */
    exports.jumpToFirst = function () {
        exports.jumpToFrame(0);
    };
    
    /**
     * Moves to the first frame of the presentation.
     */
    exports.moveToFirst = function () {
        exports.moveToFrame(0);
    };

    /**
     * Jumps to the previous frame.
     */
    exports.jumpToPrevious = function () {
        var index = exports.currentFrameIndex;
        if (!animator.started || sourceFrameIndex &lt;= exports.currentFrameIndex) {
            index -= 1;
        }
        if (index &gt;= 0) {
            exports.jumpToFrame(index);
        }
    };

    /*
     * Moves to the previous frame.
     */
    exports.moveToPrevious = function () {
        for (var index = exports.currentFrameIndex - 1; index &gt;= 0; index -= 1) {
            var frame = sozi.document.frames[index];
            if (!frame.timeoutEnable || frame.timeoutMs !== 0) {
                exports.moveToFrame(index);
                break;
            }
        }
    };

    /**
     * Jumps to the next frame.
     */
    exports.jumpToNext = function () {
        var index = exports.currentFrameIndex;
        if (!animator.started || sourceFrameIndex &gt;= exports.currentFrameIndex) {
            index += 1;
        }
        if (index &lt; sozi.document.frames.length) {
            exports.jumpToFrame(index);
        }
    };

    /**
     * Moves to the next frame.
     */
    exports.moveToNext = function () {
        if (exports.currentFrameIndex &lt; sozi.document.frames.length - 1 || sozi.document.frames[exports.currentFrameIndex].timeoutEnable) {
            exports.moveToFrame((exports.currentFrameIndex + 1) % sozi.document.frames.length);
        }
    };

    /**
     * Jumps to the last frame of the presentation.
     */
    exports.jumpToLast = function () {
        exports.jumpToFrame(sozi.document.frames.length - 1);
    };

    /**
     * Moves to the last frame of the presentation.
     */
    exports.moveToLast = function () {
        exports.moveToFrame(sozi.document.frames.length - 1);
    };

    /*
     * Restores the current frame.
     *
     * This method restores the display to fit the current frame,
     * e.g. after the display has been zoomed or dragged.
     */
    exports.moveToCurrent = function () {
        exports.moveToFrame(exports.currentFrameIndex);
    };

    /*
     * Shows all the document in the browser window.
     */
    exports.showAll = function () {
        exports.stop();
        sozi.events.fire(&quot;sozi.player.cleanup&quot;);
        animator.start(DEFAULT_DURATION_MS,
            exports.getAnimationData(viewPort.cameras, viewPort.getDocumentState(),
                DEFAULT_ZOOM_PERCENT, sozi.animation.profiles[DEFAULT_PROFILE],
                false, false
            )
        );
    };

    /*
     * Event handler: display ready.
     */
    function onDisplayReady() {
        viewPort = sozi.display.ViewPort.instance(&quot;player&quot;, sozi.document.idLayerList, true);
        
        exports.startFromIndex(sozi.location.getFrameIndex());

        // Hack to fix the blank screen bug in Chrome/Chromium
        // See https://github.com/senshu/Sozi/issues/109
        window.setTimeout(viewPort.bind(viewPort.update), 1);
        
        sozi.events.fire(&quot;sozi.player.ready&quot;);
    }

    // TODO move the zoom code to display.js
    exports.onAnimationStep = function (progress, data) {
        for (var idLayer in data) {
            var camera = viewPort.cameras[idLayer];
            
            camera.interpolate(
                data[idLayer].initialState,
                data[idLayer].finalState,
                data[idLayer].profile(progress),
                data[idLayer].useTransitionPath,
                data[idLayer].reverseTransitionPath
            );

            var ps;
            if (data[idLayer].zoomWidth &amp;&amp; data[idLayer].zoomWidth.k !== 0) {
                ps = progress - data[idLayer].zoomWidth.ts;
                camera.width = data[idLayer].zoomWidth.k * ps * ps + data[idLayer].zoomWidth.ss;
            }

            if (data[idLayer].zoomHeight &amp;&amp; data[idLayer].zoomHeight.k !== 0) {
                ps = progress - data[idLayer].zoomHeight.ts;
                camera.height = data[idLayer].zoomHeight.k * ps * ps + data[idLayer].zoomHeight.ss;
            }

            camera.setClipped(data[idLayer].finalState.clipped);
        }

        viewPort.update();
    };
    
    /**
     * @depend animation.js
     */
    animator = sozi.animation.Animator.instance().augment({
        /*
         * Event handler: animation step.
         *
         * This method is called periodically by animator after the animation
         * has been started, and until the animation time is elapsed.
         *
         * Parameter data provides the following information:
         *    - initialState and finalState contain the geometrical properties of the display
         *      at the start and end of the animation.
         *    - profile is a reference to the speed profile function to use.
         *    - zoomWidth and zoomHeight are the parameters of the zooming polynomial if the current
         *      animation has a non-zero zooming effect.
         *
         * Parameter progress is a float number between 0 (start of the animation)
         * and 1 (end of the animation).
         */
        onStep: function (progress) {
            exports.onAnimationStep(progress, this.data);
        },
        
        /*
         * Event handler: animation done.
         *
         * This method is called by animator when the current animation is finished.
         *
         * If the animation was a transition in the normal course of the presentation,
         * then we call the waitTimeout method to process the timeout property of the current frame.
         */
        onDone: function () {
            for (var idLayer in this.data) {
                viewPort.cameras[idLayer].setAtState(this.data[idLayer].finalState);
            }

            viewPort.update();

            sourceFrameIndex = exports.currentFrameIndex;

            if (playing) {
                waitTimeout();
            }
        }
    });

    sozi.events.listen(&quot;sozi.display.ready&quot;, onDisplayReady); // @depend events.js
});

/*
    @depend framenumber.js
    @depend framelist.js
    @depend actions.js
    @depend player.js
    @depend display.js
    @depend document.js
    @depend location.js
    @depend links.js
*/
</script>
  <style
     ns1:version="13.11-30213629"
     id="sozi-style">/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 * 
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

#sozi-toc text {
   fill: #eff;
   font-family: Verdana, sans-serif;
   font-size: 12pt;
}

#sozi-toc text:hover {
   fill: #0cf;
   cursor: pointer;
}

#sozi-toc text.sozi-toc-current {
   fill: #fa4;
}

#sozi-toc-background {
   stroke: #222;
   stroke-opacity: 0.1;
   stroke-width: 10;
   fill: #222;
   fill-opacity: 0.9;
}

.sozi-toc-arrow {
   fill: #eff;
   fill-opacity: 0.75;
   stroke: none;
}

.sozi-toc-arrow:hover {
   fill: #0cf;
}

#sozi-framenumber circle {
   stroke: #222;
   stroke-opacity: 0.1;
   stroke-width: 4;
   fill: #222;
   fill-opacity: 0.9;
}

#sozi-framenumber text {
   fill: #eff;
   font-family: Verdana, sans-serif;
   font-size: 12pt;
}
</style>
  <ns1:frame
     id="frame7885"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="2"
     ns1:title="Untitled"
     ns1:refid="slide2" />
  <ns1:frame
     id="frame7908"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="15"
     ns1:title="Untitled"
     ns1:refid="slide15" />
  <ns1:frame
     id="frame7900"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="8"
     ns1:title="Untitled"
     ns1:refid="slide8" />
  <ns1:frame
     id="frame7905"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="13"
     ns1:title="Untitled"
     ns1:refid="slide13" />
  <ns1:frame
     id="frame7897"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="6"
     ns1:title="Untitled"
     ns1:refid="slide6" />
  <ns1:frame
     id="frame7895"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="4"
     ns1:title="Untitled"
     ns1:refid="slide4" />
  <ns1:frame
     id="frame7903"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="11"
     ns1:title="Untitled"
     ns1:refid="slide11" />
  <ns1:frame
     id="frame7909"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="16"
     ns1:title="Untitled"
     ns1:refid="slide16" />
  <ns1:frame
     id="frame7901"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="9"
     ns1:title="Untitled"
     ns1:refid="slide9" />
  <ns1:frame
     id="frame7884"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="1"
     ns1:title="Untitled"
     ns1:refid="slide1" />
  <ns1:frame
     id="frame7907"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="14"
     ns1:title="Untitled"
     ns1:refid="slide14" />
  <ns1:frame
     id="frame7899"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="7"
     ns1:title="Untitled"
     ns1:refid="slide7" />
  <ns1:frame
     id="frame7896"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="5"
     ns1:title="Untitled"
     ns1:refid="slide5" />
  <ns1:frame
     id="frame7904"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="12"
     ns1:title="Untitled"
     ns1:refid="slide12" />
  <ns1:frame
     id="frame7894"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="250.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="3"
     ns1:title="Untitled"
     ns1:refid="slide3" />
  <ns1:frame
     id="frame7902"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="10"
     ns1:title="Untitled"
     ns1:refid="slide10" />
  <ns1:frame
     ns1:refid="slide21"
     ns1:title="Untitled"
     ns1:sequence="21"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8362" />
  <ns1:frame
     ns1:refid="slide27"
     ns1:title="Untitled"
     ns1:sequence="27"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8369" />
  <ns1:frame
     ns1:refid="slide22"
     ns1:title="Untitled"
     ns1:sequence="22"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8363" />
  <ns1:frame
     ns1:refid="slide23"
     ns1:title="Untitled"
     ns1:sequence="23"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8364" />
  <ns1:frame
     ns1:refid="slide24"
     ns1:title="Untitled"
     ns1:sequence="24"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8365" />
  <ns1:frame
     ns1:refid="slide25"
     ns1:title="Untitled"
     ns1:sequence="25"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8367" />
  <ns1:frame
     ns1:refid="slide26"
     ns1:title="Untitled"
     ns1:sequence="26"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8368" />
  <ns1:frame
     ns1:refid="slide17"
     ns1:title="Untitled"
     ns1:sequence="17"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8357" />
  <ns1:frame
     ns1:refid="slide18"
     ns1:title="Untitled"
     ns1:sequence="18"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8359" />
  <ns1:frame
     ns1:refid="slide19"
     ns1:title="Untitled"
     ns1:sequence="19"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8360" />
  <ns1:frame
     ns1:refid="slide20"
     ns1:title="Untitled"
     ns1:sequence="20"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8361" />
  <ns1:frame
     id="frame8627"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="28"
     ns1:title="Untitled"
     ns1:refid="slide28" />
  <ns1:frame
     id="frame9028"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0"
     ns1:transition-duration-ms="1000"
     ns1:timeout-ms="5000"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="29"
     ns1:title="Untitled"
     ns1:refid="slide-q" />
</svg>
