<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xmlns:ns1="http://sozi.baierouge.fr"
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="2945.46"
   height="1863.2386"
   id="svg2"
   version="1.1"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="magic-of-attribute-access.svg">
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="3.6203868"
     inkscape:cx="7271.0271"
     inkscape:cy="13788.119"
     inkscape:document-units="px"
     inkscape:current-layer="layer2"
     showgrid="false"
     inkscape:window-width="1887"
     inkscape:window-height="1025"
     inkscape:window-x="30"
     inkscape:window-y="-3"
     inkscape:window-maximized="1"
     fit-margin-top="0"
     fit-margin-left="0"
     fit-margin-right="0"
     fit-margin-bottom="0" />
  <defs
     id="defs4">
    <style
       type="text/css"
       id="style9456">.xx-important-term {
    text-shadow: 0px 0px 5px red;
}
tspan:hover {
	background-color: red;
    text-shadow: 0px 0px 5px red;
}
text, tspan {
	cursor: default;
}
tspan.the-dot {
	cursor: default;
    text-shadow: 0px 0px 5px blue;
    text-shadow: 0px 0px 5px blue;
    text-shadow: 0px 0px 5px blue;
}
svg {
	overflow: none;
}</style>
  </defs>
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     transform="translate(3468.2387,-24373.293)"
     id="layer1"
     inkscape:groupmode="layer"
     inkscape:label="Layer 1"
     sodipodi:insensitive="true">
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#ffffff;stroke-width:0.99999988;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide1"
       width="148643.02"
       height="84015.195"
       x="-62845.051"
       y="-62434.113" />
    <g
       transform="matrix(0.36998624,-0.04848633,0.04848633,0.36998624,-31821.261,-33737.649)"
       id="g9486">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9480"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9482"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9484"
           x="-32582.543"
           y="-17825.713">&lt;</tspan></text>
    </g>
    <g
       id="g9491"
       transform="matrix(0.36968016,0.05076736,-0.05076736,0.36968016,-6114.472,-39613.22)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9493"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9495"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9497"
           sodipodi:role="line">&gt;</tspan></text>
    </g>
    <g
       transform="matrix(0.37314976,0,0,0.37314976,28775.625,-40959.569)"
       id="g9499">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9501"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9503"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9505"
           x="-32582.543"
           y="-17825.713">==</tspan></text>
    </g>
    <g
       id="g9507"
       transform="matrix(0.37314976,0,0,0.37314976,63575.625,-41259.569)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9509"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9511"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9513"
           sodipodi:role="line">!=</tspan></text>
    </g>
    <g
       transform="matrix(0.36628066,-0.07126865,0.07126865,0.36628066,4390.4219,-22387.809)"
       id="g9515">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9517"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9519"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9521"
           x="-32582.543"
           y="-17825.713">|</tspan></text>
    </g>
    <g
       id="g9523"
       transform="matrix(0.36575532,0.07391745,-0.07391745,0.36575532,74638.508,-19980.853)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9525"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9527"
         y="-16083.811"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-16083.811"
           x="-32582.543"
           id="tspan9529"
           sodipodi:role="line">&amp;</tspan></text>
    </g>
    <g
       transform="matrix(0.37314976,0,0,0.37314976,41075.625,-21259.569)"
       id="g9531">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9533"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9535"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9537"
           x="-32582.543"
           y="-17825.713">^</tspan></text>
    </g>
    <g
       id="g9539"
       transform="matrix(0.37314976,0,0,0.37314976,69675.625,-3559.569)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9541"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9543"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9545"
           sodipodi:role="line">/</tspan></text>
    </g>
    <g
       transform="matrix(0.36650138,0.07012478,-0.07012478,0.36650138,-33919.367,-4381.2523)"
       id="g9547">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9549"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9551"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9553"
           x="-32582.543"
           y="-17825.713">+</tspan></text>
    </g>
    <g
       id="g9555"
       transform="matrix(0.36756196,0.06433466,-0.06433466,0.36756196,35095.055,763.03718)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9557"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9559"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9561"
           sodipodi:role="line">*</tspan></text>
    </g>
    <g
       id="g9563"
       transform="matrix(0.36245528,-0.08869563,0.08869563,0.36245528,882.43201,618.28608)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9565"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9567"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9569"
           sodipodi:role="line">-</tspan></text>
    </g>
    <g
       transform="matrix(0.36218232,0.08980372,-0.08980372,0.36218232,78228.596,20725.77)"
       id="g9571">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9573"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9575"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9577"
           x="-32582.543"
           y="-17825.713">~</tspan></text>
    </g>
    <g
       id="g9579"
       transform="matrix(0.36917034,-0.05435075,0.05435075,0.36917034,50934.329,18245.928)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9581"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <text
         sodipodi:linespacing="125%"
         id="text9583"
         y="-17825.713"
         x="-32582.543"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-17825.713"
           x="-32582.543"
           id="tspan9585"
           sodipodi:role="line">()</tspan></text>
    </g>
    <g
       transform="matrix(0.36493631,0.07786035,-0.07786035,0.36493631,-31610.66,22822.174)"
       id="g9587">
      <rect
         rx="13131.457"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect9589"
         width="72743.648"
         height="41115.543"
         x="-68954.367"
         y="-51621.988"
         ry="13131.457" />
      <text
         xml:space="preserve"
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         x="-32582.543"
         y="-17825.713"
         id="text9591"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan9593"
           x="-32582.543"
           y="-17825.713">[]</tspan></text>
    </g>
    <g
       id="g9595"
       transform="matrix(0.37314976,0,0,0.37314976,15875.625,19940.431)">
      <rect
         ry="13131.457"
         y="-51621.988"
         x="-68954.367"
         height="41115.543"
         width="72743.648"
         id="rect9597"
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.67988896;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         rx="13131.457" />
      <g
         style="font-size:40000px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Sans"
         id="text9599">
        <path
           d="m -34672.387,-22786.65 4121.094,0 0,4960.937 -4121.094,0 0,-4960.937"
           id="path17830"
           inkscape:connector-curvature="0" />
      </g>
    </g>
    <rect
       y="11013.721"
       x="1403.0137"
       height="2667.3608"
       width="4719.9453"
       id="slide2"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#ffffff;stroke-width:0.99999988;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <text
       sodipodi:linespacing="125%"
       id="text9470"
       y="13506.816"
       x="3755.4041"
       style="font-size:185.67677307px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         y="13506.816"
         x="3755.4041"
         id="tspan9472"
         sodipodi:role="line">Petr Viktorin</tspan></text>
    <text
       xml:space="preserve"
       style="font-size:236.18432617px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       x="3765.874"
       y="11281.814"
       id="text9474"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan9476"
         x="3765.874"
         y="11281.814">The Magic of Attribute Access</tspan></text>
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Layer">
    <g
       transform="matrix(0.22152713,0,0,0.22132958,6621.0122,-11717.149)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g6946">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text6948">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6950">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan6952">_set_area</tspan>(<tspan
   style="fill:#008000"
   id="tspan6954">self</tspan>, value):</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text6956">        <tspan
   style="fill:#008000"
   id="tspan6958">self</tspan><tspan
   style="fill:#666666"
   id="tspan6960">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan6962">=</tspan> math<tspan
   style="fill:#666666"
   id="tspan6964">.</tspan>sqrt(value)</text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text6966" />
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text6968">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6970">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan6972">_get_area</tspan>(<tspan
   style="fill:#008000"
   id="tspan6974">self</tspan>):</text>
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text6976">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6978">return</tspan> <tspan
   style="fill:#008000"
   id="tspan6980">self</tspan><tspan
   style="fill:#666666"
   id="tspan6982">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan6984">*</tspan><tspan
   style="fill:#666666"
   id="tspan6986">*</tspan> <tspan
   style="fill:#666666"
   id="tspan6988">2</tspan></text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text6990" />
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text6992">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6994">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan6996">_del_area</tspan>(<tspan
   style="fill:#008000"
   id="tspan6998">self</tspan>):</text>
      <text
         x="0"
         y="147"
         xml:space="preserve"
         id="text7000">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan7002">del</tspan> <tspan
   style="fill:#008000"
   id="tspan7004">self</tspan><tspan
   style="fill:#666666"
   id="tspan7006">.</tspan>side</text>
      <text
         x="0"
         y="166"
         xml:space="preserve"
         id="text7008" />
      <text
         x="0"
         y="185"
         xml:space="preserve"
         id="text7010">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan7012">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan7014">Square</tspan>:</text>
      <text
         x="0"
         y="204"
         xml:space="preserve"
         id="text7016">        area <tspan
   style="fill:#666666"
   id="tspan7018">=</tspan> Property(_get_area, _set_area, _del_area)</text>
      <text
         x="0"
         y="223"
         xml:space="preserve"
         id="text7020" />
    </g>
    <rect
       y="-11798.688"
       x="6600.3203"
       height="132.3125"
       width="234.46347"
       id="slide20"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide23"
       width="524.65955"
       height="296.33115"
       x="6575.439"
       y="-12112.711" />
    <rect
       y="-12231.952"
       x="7132.2036"
       height="124.0043"
       width="219.80923"
       id="slide27"
       style="fill:#00ffff;fill-opacity:0.04854371;stroke:#000000;stroke-width:0.99999988;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide28"
       width="114.60799"
       height="64.361893"
       x="7009.9351"
       y="-12182.434" />
    <rect
       y="-11996.403"
       x="6570.3569"
       height="143.68988"
       width="254.60187"
       id="slide22"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <rect
       y="-12384.866"
       x="6820.6338"
       height="125.12115"
       width="221.74948"
       id="slide25"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <rect
       y="-12275.369"
       x="7360.3091"
       height="168.83942"
       width="299.09714"
       id="slide7"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <rect
       y="-12362.725"
       x="6810.0952"
       height="132.10344"
       width="234.10275"
       id="slide26"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide5a"
       width="103.28105"
       height="58.218945"
       x="7345.0288"
       y="-12259.039" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide6"
       width="218.37196"
       height="123.21213"
       x="7359.6011"
       y="-12290.144" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide8"
       width="299.09714"
       height="168.83942"
       x="7360.3091"
       y="-12256.843" />
    <rect
       y="-12384.65"
       x="7322.2666"
       height="94.17939"
       width="167.00635"
       id="slide4"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide3"
       width="167.00635"
       height="94.17939"
       x="7243.8149"
       y="-12384.787" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide5"
       width="167.00635"
       height="94.17939"
       x="7410.7812"
       y="-12384.65" />
    <g
       transform="matrix(0.49568094,0,0,0.49568094,7407.077,-12370.95)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g3163">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text3165">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan3167">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan3169">Object</tspan>:</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text3171">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan3173">pass</tspan></text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text3175" />
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text3177">    obj <tspan
   style="fill:#666666"
   id="tspan3179">=</tspan> Object()</text>
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text3181" />
    </g>
    <g
       transform="matrix(0.49568094,0,0,0.49568094,7407.0855,-12323.865)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g3317">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text3319">    obj<tspan
   class="the-dot"
   style="fill:#666666"
   id="tspan3321">.</tspan>x <tspan
   class=""
   style="fill:#666666"
   id="tspan3323">=</tspan> <tspan
   style="fill:#666666"
   id="tspan3325">5</tspan>       <tspan
   style="fill:#008000"
   id="tspan3327">setattr</tspan>(obj, <tspan
   style="fill:#ba2121"
   id="tspan3329">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan3331">x</tspan><tspan
   style="fill:#ba2121"
   id="tspan3333">'</tspan>, <tspan
   style="fill:#666666"
   id="tspan3335">5</tspan>)  STORE_ATTR (<tspan
   style="fill:#666666"
   id="tspan3337">95</tspan>)</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text3339">    <tspan
   style="fill:#008000"
   id="tspan3341">print</tspan>(obj<tspan
   class="the-dot"
   style="fill:#666666"
   id="tspan3343">.</tspan>x)    <tspan
   style="fill:#008000"
   id="tspan3345">getattr</tspan>(obj, <tspan
   style="fill:#ba2121"
   id="tspan3347">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan3349">x</tspan><tspan
   style="fill:#ba2121"
   id="tspan3351">'</tspan>)     LOAD_ATTR (<tspan
   style="fill:#666666"
   id="tspan3353">106</tspan>)</text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text3355">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan3357">del</tspan> obj<tspan
   class="the-dot"
   style="fill:#666666"
   id="tspan3359">.</tspan>x       <tspan
   style="fill:#008000"
   id="tspan3361">delattr</tspan>(obj, <tspan
   style="fill:#ba2121"
   id="tspan3363">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan3365">x</tspan><tspan
   style="fill:#ba2121"
   id="tspan3367">'</tspan>)     DELETE_ATTR (<tspan
   style="fill:#666666"
   id="tspan3369">96</tspan>)</text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text3371" />
    </g>
    <g
       transform="matrix(0.49568094,0,0,0.49568094,7185.7776,-12456.7)"
       id="g3950">
      <g
         id="g3900"
         font-size="14px"
         style="font-size:14px;font-family:monospace"
         transform="translate(394.23118,433.14462)">
        <text
           id="text3902"
           xml:space="preserve"
           y="13.930293"
           x="0">__type__</text>
        <text
           id="text3904"
           xml:space="preserve"
           y="51.980312"
           x="0">__dict__</text>
        <text
           id="text3914"
           xml:space="preserve"
           y="71"
           x="0" />
      </g>
      <rect
         style="fill:none;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="rect3948"
         width="139.65359"
         height="84.600281"
         x="358.60416"
         y="427.83536" />
    </g>
    <g
       transform="matrix(0.49568094,0,0,0.49568094,7452.6098,-12246.321)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g4035">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text4037"><tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4039">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan4041">Square</tspan>:</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text4043">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4045">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan4047">get_area</tspan>(<tspan
   style="fill:#008000"
   id="tspan4049">self</tspan>):</text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text4051">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4053">return</tspan> <tspan
   style="fill:#008000"
   id="tspan4055">self</tspan><tspan
   style="fill:#666666"
   id="tspan4057">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan4059">*</tspan><tspan
   style="fill:#666666"
   id="tspan4061">*</tspan> <tspan
   style="fill:#666666"
   id="tspan4063">2</tspan></text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text4065" />
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text4067">square <tspan
   style="fill:#666666"
   id="tspan4069">=</tspan> Square()</text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text4071">square<tspan
   style="fill:#666666"
   id="tspan4073">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan4075">=</tspan> <tspan
   style="fill:#666666"
   id="tspan4077">5</tspan></text>
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text4079" />
    </g>
    <rect
       y="-12072.965"
       x="7399.2554"
       height="168.83942"
       width="299.09714"
       id="slide10"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide9"
       width="299.09714"
       height="168.83942"
       x="7360.3091"
       y="-12166.082" />
    <g
       transform="matrix(0.49568094,0,0,0.49568094,7401.8784,-12183.811)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g4274">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text4276">            square<tspan
   style="fill:#666666"
   id="tspan4278">.</tspan>get_area()</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text4280" />
    </g>
    <g
       transform="matrix(0.49568094,0,0,0.49568094,7439.8295,-12068.137)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g4513">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text4515">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4517">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan4519">Proxy</tspan>:</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text4521">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4523">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan4525">__init__</tspan>(<tspan
   style="fill:#008000"
   id="tspan4527">self</tspan>, obj):</text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text4529">            <tspan
   style="fill:#008000"
   id="tspan4531">self</tspan><tspan
   style="fill:#666666"
   id="tspan4533">.</tspan>_obj <tspan
   style="fill:#666666"
   id="tspan4535">=</tspan> obj</text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text4537" />
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text4539">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4541">def</tspan> <tspan
   style="fill:#0000ff"
   class="important-term"
   id="tspan4543">__getattr__</tspan>(<tspan
   style="fill:#008000"
   id="tspan4545">self</tspan>, attr_name):</text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text4547">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4549">return</tspan> <tspan
   style="fill:#008000"
   id="tspan4551">getattr</tspan>(<tspan
   style="fill:#008000"
   id="tspan4553">self</tspan><tspan
   style="fill:#666666"
   id="tspan4555">.</tspan>_obj, attr_name)</text>
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text4557" />
    </g>
    <g
       transform="matrix(0.49568094,0,0,0.49568094,7438.7031,-11992.688)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g4685">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text4687">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4689">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan4691">StrictProxy</tspan>:</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text4693">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4695">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan4697">__init__</tspan>(<tspan
   style="fill:#008000"
   id="tspan4699">self</tspan>, obj):</text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text4701">            <tspan
   style="fill:#008000"
   id="tspan4703">self</tspan><tspan
   style="fill:#666666"
   id="tspan4705">.</tspan>_obj <tspan
   style="fill:#666666"
   id="tspan4707">=</tspan> obj</text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text4709" />
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text4711">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4713">def</tspan> <tspan
   class="important-term"
   style="fill:#0000ff"
   id="tspan4715">__getattribute__</tspan>(<tspan
   style="fill:#008000"
   id="tspan4717">self</tspan>, attr_name):</text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text4719">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4721">if</tspan> attr_name <tspan
   style="fill:#666666"
   id="tspan4723">==</tspan> <tspan
   style="fill:#ba2121"
   id="tspan4725">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan4727">_obj</tspan><tspan
   style="fill:#ba2121"
   id="tspan4729">'</tspan>:</text>
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text4731">                <tspan
   style="fill:#008000"
   id="tspan4733">super</tspan>()<tspan
   style="fill:#666666"
   id="tspan4735">.</tspan>__getattribute__(attr_name)</text>
      <text
         x="0"
         y="147"
         xml:space="preserve"
         id="text4737">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4739">else</tspan>:</text>
      <text
         x="0"
         y="166"
         xml:space="preserve"
         id="text4741">                <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4743">return</tspan> <tspan
   style="fill:#008000"
   id="tspan4745">getattr</tspan>(<tspan
   style="fill:#008000"
   id="tspan4747">self</tspan><tspan
   style="fill:#666666"
   id="tspan4749">.</tspan>_obj, attr_name)</text>
      <text
         x="0"
         y="185"
         xml:space="preserve"
         id="text4751" />
    </g>
    <rect
       y="-12084.591"
       x="6820.2612"
       height="224.52271"
       width="397.61371"
       id="slide15"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <g
       transform="matrix(0.49568094,0,0,0.49568094,7299.6414,-11890.077)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g4940">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text4942">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4944">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan4946">DictProxy</tspan>:</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text4948">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4950">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan4952">__init__</tspan>(<tspan
   style="fill:#008000"
   id="tspan4954">self</tspan>):</text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text4956">            <tspan
   style="fill:#008000"
   id="tspan4958">self</tspan><tspan
   style="fill:#666666"
   id="tspan4960">.</tspan>_dict <tspan
   style="fill:#666666"
   id="tspan4962">=</tspan> {}</text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text4964" />
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text4966">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4968">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan4970">__getattr__</tspan>(<tspan
   style="fill:#008000"
   id="tspan4972">self</tspan>, attr_name):</text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text4974">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4976">try</tspan>:</text>
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text4978">                <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4980">return</tspan> <tspan
   style="fill:#008000"
   id="tspan4982">self</tspan><tspan
   style="fill:#666666"
   id="tspan4984">.</tspan>_dict[attr_name]</text>
      <text
         x="0"
         y="147"
         xml:space="preserve"
         id="text4986">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4988">except</tspan> <tspan
   style="font-weight:bold;fill:#d2413a"
   font-weight="bold"
   id="tspan4990">KeyError</tspan>:</text>
      <text
         x="0"
         y="166"
         xml:space="preserve"
         id="text4992">                <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan4994">raise</tspan> <tspan
   style="font-weight:bold;fill:#d2413a"
   font-weight="bold"
   id="tspan4996">AttributeError</tspan>(attr_name)</text>
      <text
         x="0"
         y="185"
         xml:space="preserve"
         id="text4998" />
      <text
         x="0"
         y="204"
         xml:space="preserve"
         id="text5000">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5002">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan5004">__setattr__</tspan>(<tspan
   style="fill:#008000"
   id="tspan5006">self</tspan>, attr_name, value):</text>
      <text
         x="0"
         y="223"
         xml:space="preserve"
         id="text5008">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5010">if</tspan> attr_name <tspan
   style="fill:#666666"
   id="tspan5012">!=</tspan> <tspan
   style="fill:#ba2121"
   id="tspan5014">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan5016">_dict</tspan><tspan
   style="fill:#ba2121"
   id="tspan5018">'</tspan>:</text>
      <text
         x="0"
         y="242"
         xml:space="preserve"
         id="text5020">                <tspan
   style="fill:#008000"
   id="tspan5022">self</tspan><tspan
   style="fill:#666666"
   id="tspan5024">.</tspan>_dict[attr_name] <tspan
   style="fill:#666666"
   id="tspan5026">=</tspan> value</text>
      <text
         x="0"
         y="261"
         xml:space="preserve"
         id="text5028">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5030">else</tspan>:</text>
      <text
         x="0"
         y="280"
         xml:space="preserve"
         id="text5032">                <tspan
   style="fill:#008000"
   id="tspan5034">super</tspan>()<tspan
   style="fill:#666666"
   id="tspan5036">.</tspan>__setattr__(attr_name, value)</text>
      <text
         x="0"
         y="299"
         xml:space="preserve"
         id="text5038" />
      <text
         x="0"
         y="318"
         xml:space="preserve"
         id="text5040">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5042">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan5044">__delattr__</tspan>(<tspan
   style="fill:#008000"
   id="tspan5046">self</tspan>, attr_name):</text>
      <text
         x="0"
         y="337"
         xml:space="preserve"
         id="text5048">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5050">del</tspan> <tspan
   style="fill:#008000"
   id="tspan5052">self</tspan><tspan
   style="fill:#666666"
   id="tspan5054">.</tspan>_dict[attr_name]</text>
      <text
         x="0"
         y="356"
         xml:space="preserve"
         id="text5056" />
    </g>
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide16"
       width="141.9053"
       height="79.916687"
       x="6885.9526"
       y="-11773.857" />
    <g
       transform="matrix(0.17662951,0,0,0.17615809,6920.9135,-11770.608)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g5584">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text5586">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5588">import</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan5590">math</tspan></text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text5592" />
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text5594">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5596">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan5598">AreaDescriptor</tspan>:</text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text5600">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5602">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan5604">__get__</tspan>(<tspan
   style="fill:#008000"
   id="tspan5606">self</tspan>, instance, owner_class<tspan
   style="fill:#666666"
   id="tspan5608">=</tspan><tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5610">None</tspan>):</text>
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text5612">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5614">if</tspan> instance:</text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text5616">                <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5618">return</tspan> instance<tspan
   style="fill:#666666"
   id="tspan5620">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan5622">*</tspan><tspan
   style="fill:#666666"
   id="tspan5624">*</tspan> <tspan
   style="fill:#666666"
   id="tspan5626">2</tspan></text>
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text5628">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5630">else</tspan>:</text>
      <text
         x="0"
         y="147"
         xml:space="preserve"
         id="text5632">                <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5634">return</tspan> <tspan
   style="fill:#008000"
   id="tspan5636">self</tspan></text>
      <text
         x="0"
         y="166"
         xml:space="preserve"
         id="text5638" />
      <text
         x="0"
         y="185"
         xml:space="preserve"
         id="text5640">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5642">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan5644">__set__</tspan>(<tspan
   style="fill:#008000"
   id="tspan5646">self</tspan>, instance, value):</text>
      <text
         x="0"
         y="204"
         xml:space="preserve"
         id="text5648">            instance<tspan
   style="fill:#666666"
   id="tspan5650">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan5652">=</tspan> math<tspan
   style="fill:#666666"
   id="tspan5654">.</tspan>sqrt(value)</text>
      <text
         x="0"
         y="223"
         xml:space="preserve"
         id="text5656" />
      <text
         x="0"
         y="242"
         xml:space="preserve"
         id="text5658">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5660">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan5662">Square</tspan>:</text>
      <text
         x="0"
         y="261"
         xml:space="preserve"
         id="text5664">        area <tspan
   style="fill:#666666"
   id="tspan5666">=</tspan> AreaDescriptor()</text>
      <text
         x="0"
         y="280"
         xml:space="preserve"
         id="text5668" />
      <text
         x="0"
         y="299"
         xml:space="preserve"
         id="text5670">    square <tspan
   style="fill:#666666"
   id="tspan5672">=</tspan> Square()</text>
      <text
         x="0"
         y="318"
         xml:space="preserve"
         id="text5674" />
      <text
         x="0"
         y="337"
         xml:space="preserve"
         id="text5676">    square<tspan
   style="fill:#666666"
   id="tspan5678">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan5680">=</tspan> <tspan
   style="fill:#666666"
   id="tspan5682">5</tspan></text>
      <text
         x="0"
         y="356"
         xml:space="preserve"
         id="text5684">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5686">assert</tspan> square<tspan
   style="fill:#666666"
   id="tspan5688">.</tspan>area <tspan
   style="fill:#666666"
   id="tspan5690">==</tspan> <tspan
   style="fill:#666666"
   id="tspan5692">25</tspan></text>
      <text
         x="0"
         y="375"
         xml:space="preserve"
         id="text5694" />
      <text
         x="0"
         y="394"
         xml:space="preserve"
         id="text5696">    square<tspan
   style="fill:#666666"
   id="tspan5698">.</tspan>area <tspan
   style="fill:#666666"
   id="tspan5700">=</tspan> <tspan
   style="fill:#666666"
   id="tspan5702">16</tspan></text>
      <text
         x="0"
         y="413"
         xml:space="preserve"
         id="text5704">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan5706">assert</tspan> square<tspan
   style="fill:#666666"
   id="tspan5708">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan5710">==</tspan> <tspan
   style="fill:#666666"
   id="tspan5712">4</tspan></text>
      <text
         x="0"
         y="432"
         xml:space="preserve"
         id="text5714" />
    </g>
    <rect
       y="-11694.616"
       x="6766.9556"
       height="108.76999"
       width="192.8205"
       id="slide18"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <g
       transform="matrix(0.27392519,0,0,0.27364552,6829.836,-11677.151)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g6272">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text6274">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6276">import</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan6278">math</tspan></text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text6280" />
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text6282">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6284">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan6286">AreaDescriptor</tspan>:</text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text6288">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6290">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan6292">__get__</tspan>(<tspan
   style="fill:#008000"
   id="tspan6294">self</tspan>, instance, owner_class<tspan
   style="fill:#666666"
   id="tspan6296">=</tspan><tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6298">None</tspan>):</text>
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text6300">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6302">if</tspan> instance:</text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text6304">                <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6306">return</tspan> instance<tspan
   style="fill:#666666"
   id="tspan6308">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan6310">*</tspan><tspan
   style="fill:#666666"
   id="tspan6312">*</tspan> <tspan
   style="fill:#666666"
   id="tspan6314">2</tspan></text>
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text6316">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6318">else</tspan>:</text>
      <text
         x="0"
         y="147"
         xml:space="preserve"
         id="text6320">                <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6322">return</tspan> <tspan
   style="fill:#008000"
   id="tspan6324">self</tspan></text>
      <text
         x="0"
         y="166"
         xml:space="preserve"
         id="text6326" />
      <text
         x="0"
         y="185"
         xml:space="preserve"
         id="text6328">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6330">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan6332">__set__</tspan>(<tspan
   style="fill:#008000"
   id="tspan6334">self</tspan>, instance, value):</text>
      <text
         x="0"
         y="204"
         xml:space="preserve"
         id="text6336">            instance<tspan
   style="fill:#666666"
   id="tspan6338">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan6340">=</tspan> math<tspan
   style="fill:#666666"
   id="tspan6342">.</tspan>sqrt(value)</text>
      <text
         x="0"
         y="223"
         xml:space="preserve"
         id="text6344" />
      <text
         x="0"
         y="242"
         xml:space="preserve"
         id="text6346">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6348">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan6350">__del__</tspan>(<tspan
   style="fill:#008000"
   id="tspan6352">self</tspan>, instance):</text>
      <text
         x="0"
         y="261"
         xml:space="preserve"
         id="text6354">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6356">del</tspan> instance<tspan
   style="fill:#666666"
   id="tspan6358">.</tspan>side</text>
      <text
         x="0"
         y="280"
         xml:space="preserve"
         id="text6360" />
    </g>
    <g
       transform="matrix(0.22152713,0,0,0.22132958,6613.6387,-11797.086)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g6558">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text6560">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6562">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan6564">Property</tspan>(<tspan
   style="fill:#008000"
   id="tspan6566">object</tspan>):</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text6568">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6570">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan6572">__init__</tspan>(<tspan
   style="fill:#008000"
   id="tspan6574">self</tspan>, fget, fset, fdel):</text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text6576">            <tspan
   style="fill:#008000"
   id="tspan6578">self</tspan><tspan
   style="fill:#666666"
   id="tspan6580">.</tspan>fget <tspan
   style="fill:#666666"
   id="tspan6582">=</tspan> fget</text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text6584">            <tspan
   style="fill:#008000"
   id="tspan6586">self</tspan><tspan
   style="fill:#666666"
   id="tspan6588">.</tspan>fset <tspan
   style="fill:#666666"
   id="tspan6590">=</tspan> fset</text>
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text6592">            <tspan
   style="fill:#008000"
   id="tspan6594">self</tspan><tspan
   style="fill:#666666"
   id="tspan6596">.</tspan>fdel <tspan
   style="fill:#666666"
   id="tspan6598">=</tspan> fdel</text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text6600" />
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text6602">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6604">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan6606">__get__</tspan>(<tspan
   style="fill:#008000"
   id="tspan6608">self</tspan>, obj, objtype<tspan
   style="fill:#666666"
   id="tspan6610">=</tspan><tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6612">None</tspan>):</text>
      <text
         x="0"
         y="147"
         xml:space="preserve"
         id="text6614">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6616">if</tspan> obj <tspan
   style="font-weight:bold;fill:#aa22ff"
   font-weight="bold"
   id="tspan6618">is</tspan> <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6620">None</tspan>:</text>
      <text
         x="0"
         y="166"
         xml:space="preserve"
         id="text6622">                <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6624">return</tspan> <tspan
   style="fill:#008000"
   id="tspan6626">self</tspan></text>
      <text
         x="0"
         y="185"
         xml:space="preserve"
         id="text6628">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6630">else</tspan>:</text>
      <text
         x="0"
         y="204"
         xml:space="preserve"
         id="text6632">                <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6634">return</tspan> <tspan
   style="fill:#008000"
   id="tspan6636">self</tspan><tspan
   style="fill:#666666"
   id="tspan6638">.</tspan>fget(obj)</text>
      <text
         x="0"
         y="223"
         xml:space="preserve"
         id="text6640" />
      <text
         x="0"
         y="242"
         xml:space="preserve"
         id="text6642">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6644">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan6646">__set__</tspan>(<tspan
   style="fill:#008000"
   id="tspan6648">self</tspan>, obj, value):</text>
      <text
         x="0"
         y="261"
         xml:space="preserve"
         id="text6650">            <tspan
   style="fill:#008000"
   id="tspan6652">self</tspan><tspan
   style="fill:#666666"
   id="tspan6654">.</tspan>fset(obj, value)</text>
      <text
         x="0"
         y="280"
         xml:space="preserve"
         id="text6656" />
      <text
         x="0"
         y="299"
         xml:space="preserve"
         id="text6658">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan6660">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan6662">__delete__</tspan>(<tspan
   style="fill:#008000"
   id="tspan6664">self</tspan>, obj):</text>
      <text
         x="0"
         y="318"
         xml:space="preserve"
         id="text6666">            <tspan
   style="fill:#008000"
   id="tspan6668">self</tspan><tspan
   style="fill:#666666"
   id="tspan6670">.</tspan>fdel(obj)</text>
      <text
         x="0"
         y="337"
         xml:space="preserve"
         id="text6672" />
    </g>
    <g
       transform="matrix(0.49568094,0,0,0.49568094,6489.4666,-11837.872)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g7155">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text7157">    <tspan
   style="fill:#666666"
   id="tspan7159">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan7161">&gt;</tspan> <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan7163">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan7165">f</tspan>():</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text7167">    <tspan
   style="fill:#666666"
   id="tspan7169">.</tspan><tspan
   style="fill:#666666"
   id="tspan7171">.</tspan><tspan
   style="fill:#666666"
   id="tspan7173">.</tspan>     <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan7175">pass</tspan></text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text7177">    <tspan
   style="fill:#666666"
   id="tspan7179">.</tspan><tspan
   style="fill:#666666"
   id="tspan7181">.</tspan><tspan
   style="fill:#666666"
   id="tspan7183">.</tspan> </text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text7185">    <tspan
   style="fill:#666666"
   id="tspan7187">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan7189">&gt;</tspan> <tspan
   style="fill:#008000"
   id="tspan7191">dir</tspan>(f)</text>
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text7193">    [<tspan
   style="fill:#666666"
   id="tspan7195">.</tspan><tspan
   style="fill:#666666"
   id="tspan7197">.</tspan><tspan
   style="fill:#666666"
   id="tspan7199">.</tspan>, <tspan
   style="fill:#ba2121"
   id="tspan7201">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan7203">__get__</tspan><tspan
   style="fill:#ba2121"
   id="tspan7205">'</tspan>, <tspan
   style="fill:#666666"
   id="tspan7207">.</tspan><tspan
   style="fill:#666666"
   id="tspan7209">.</tspan><tspan
   style="fill:#666666"
   id="tspan7211">.</tspan>]</text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text7213" />
    </g>
    <g
       transform="matrix(0.22464068,0,0,0.22355394,7007.9641,-12175.374)"
       style="font-size:14px;font-family:monospace"
       font-size="14px"
       id="g8468">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text8470">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan8472">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan8474">reify</tspan>:</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text8478">        <tspan
   style="font-style:italic;fill:#ba2121"
   font-style="italic"
   id="tspan8480">&quot;&quot;&quot;(also called &quot;cached_property&quot;)&quot;&quot;&quot;</tspan></text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text8482">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan8484">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan8486">__init__</tspan>(<tspan
   style="fill:#008000"
   id="tspan8488">self</tspan>, func):</text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text8490">            <tspan
   style="fill:#008000"
   id="tspan8492">self</tspan><tspan
   style="fill:#666666"
   id="tspan8494">.</tspan>func <tspan
   style="fill:#666666"
   id="tspan8496">=</tspan> func</text>
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text8498" />
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text8500">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan8502">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan8504">__get__</tspan>(<tspan
   style="fill:#008000"
   id="tspan8506">self</tspan>, instance, owner_class<tspan
   style="fill:#666666"
   id="tspan8508">=</tspan><tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan8510">None</tspan>):</text>
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text8512">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan8514">if</tspan> instance <tspan
   style="font-weight:bold;fill:#aa22ff"
   font-weight="bold"
   id="tspan8516">is</tspan> <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan8518">None</tspan>:</text>
      <text
         x="0"
         y="147"
         xml:space="preserve"
         id="text8520">                <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan8522">return</tspan> <tspan
   style="fill:#008000"
   id="tspan8524">self</tspan></text>
      <text
         x="0"
         y="166"
         xml:space="preserve"
         id="text8526">            value <tspan
   style="fill:#666666"
   id="tspan8528">=</tspan> <tspan
   style="fill:#008000"
   id="tspan8530">self</tspan><tspan
   style="fill:#666666"
   id="tspan8532">.</tspan>wrapped(instance)</text>
      <text
         x="0"
         y="185"
         xml:space="preserve"
         id="text8534">            <tspan
   style="fill:#008000"
   id="tspan8536">setattr</tspan>(instance, <tspan
   style="fill:#008000"
   id="tspan8538">self</tspan><tspan
   style="fill:#666666"
   id="tspan8540">.</tspan>wrapped<tspan
   style="fill:#666666"
   id="tspan8542">.</tspan>__name__, value)</text>
      <text
         x="0"
         y="204"
         xml:space="preserve"
         id="text8544">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan8546">return</tspan> value</text>
      <text
         x="0"
         y="223"
         xml:space="preserve"
         id="text8548" />
    </g>
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide11"
       width="338.75162"
       height="191.25281"
       x="7297.6812"
       y="-11902.065" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide21"
       width="147.72385"
       height="83.280571"
       x="6468.8159"
       y="-11854.133" />
    <path
       sodipodi:nodetypes="cc"
       inkscape:connector-curvature="0"
       id="path9403"
       d="m 7433.0675,-12218.957 15.8759,23.523"
       style="fill:none;stroke:#000000;stroke-width:1.00000012px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
    <path
       transform="matrix(0.38552963,0,0,0.38552963,7118.9104,-12393.419)"
       d="m 818.21431,453.61218 a 4.8214288,4.8214288 0 1 1 -9.64286,0 4.8214288,4.8214288 0 1 1 9.64286,0 z"
       sodipodi:ry="4.8214288"
       sodipodi:rx="4.8214288"
       sodipodi:cy="453.61218"
       sodipodi:cx="813.39288"
       id="path9399"
       style="fill:#0000ff;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       sodipodi:type="arc" />
    <path
       sodipodi:type="arc"
       style="fill:#0000ff;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="path9401"
       sodipodi:cx="813.39288"
       sodipodi:cy="453.61218"
       sodipodi:rx="4.8214288"
       sodipodi:ry="4.8214288"
       d="m 818.21431,453.61218 a 4.8214288,4.8214288 0 1 1 -9.64286,0 4.8214288,4.8214288 0 1 1 9.64286,0 z"
       transform="matrix(0.38552963,0,0,0.38552963,7135.3741,-12369.695)" />
    <path
       sodipodi:nodetypes="cc"
       inkscape:connector-curvature="0"
       id="path9409"
       d="m 7432.495,-12233.282 33.7088,0.495"
       style="fill:none;stroke:#000000;stroke-width:1.00000012px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
    <path
       sodipodi:type="arc"
       style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="path9405"
       sodipodi:cx="813.39288"
       sodipodi:cy="453.61218"
       sodipodi:rx="4.8214288"
       sodipodi:ry="4.8214288"
       d="m 818.21431,453.61218 a 4.8214288,4.8214288 0 1 1 -9.64286,0 4.8214288,4.8214288 0 1 1 9.64286,0 z"
       transform="matrix(0.38552963,0,0,0.38552963,7118.9104,-12408.212)" />
    <path
       transform="matrix(0.38552963,0,0,0.38552963,7152.9885,-12406.96)"
       d="m 818.21431,453.61218 a 4.8214288,4.8214288 0 1 1 -9.64286,0 4.8214288,4.8214288 0 1 1 9.64286,0 z"
       sodipodi:ry="4.8214288"
       sodipodi:rx="4.8214288"
       sodipodi:cy="453.61218"
       sodipodi:cx="813.39288"
       id="path9407"
       style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       sodipodi:type="arc" />
    <path
       sodipodi:type="arc"
       style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="path9411"
       sodipodi:cx="813.39288"
       sodipodi:cy="453.61218"
       sodipodi:rx="4.8214288"
       sodipodi:ry="4.8214288"
       d="m 818.21431,453.61218 a 4.8214288,4.8214288 0 1 1 -9.64286,0 4.8214288,4.8214288 0 1 1 9.64286,0 z"
       transform="matrix(0.38552963,0,0,0.38552963,7134.7124,-12353.634)" />
    <text
       sodipodi:linespacing="125%"
       id="text10443"
       y="-12156.415"
       x="7437.6621"
       style="font-size:6.93953323px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         id="tspan10445"
         y="-12156.415"
         x="7437.6621"
         sodipodi:role="line"><tspan
           dx="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
           id="tspan10447"
           y="-12156.415"
           x="7437.6621">Set an attribute -- directly to __dict__ </tspan></tspan><tspan
         id="tspan10455"
         y="-12147.74"
         x="7437.6621"
         sodipodi:role="line"><tspan
           id="tspan10457"
           y="-12147.69"
           x="7437.6621" /></tspan><tspan
         id="tspan10459"
         y="-12139.017"
         x="7437.6621"
         sodipodi:role="line"><tspan
           id="tspan10461"
           y="-12139.017"
           x="7437.6621">Get an attribute:</tspan><tspan
           id="tspan10463"
           y="-12139.017"
           x="7489.98"
           dx="0" /></tspan><tspan
         id="tspan10465"
         y="-12130.342"
         x="7437.6621"
         sodipodi:role="line"><tspan
           id="tspan10467"
           y="-12130.342"
           x="7437.6621">1. try in the __dict__</tspan><tspan
           id="tspan10469"
           y="-12130.342"
           x="7504.2246"
           dx="0" /></tspan><tspan
         id="tspan10471"
         y="-12121.668"
         x="7437.6621"
         sodipodi:role="line"><tspan
           id="tspan10473"
           y="-12121.668"
           x="7437.6621">2. try in the type</tspan><tspan
           id="tspan10475"
           y="-12121.668"
           x="7489.2886"
           dx="0" /></tspan><tspan
         id="tspan10477"
         y="-12112.993"
         x="7437.6621"
         sodipodi:role="line"><tspan
           id="tspan10479"
           y="-12112.993"
           x="7437.6621">3. raise AttributeError</tspan><tspan
           id="tspan10481"
           y="-12112.993"
           x="7506.8003"
           dx="0" /></tspan><tspan
         id="tspan10483"
         y="-12104.318"
         x="7437.6621"
         sodipodi:role="line"><tspan
           id="tspan10485"
           y="-12104.318"
           x="7437.6621" /></tspan><tspan
         id="tspan10487"
         y="-12095.645"
         x="7437.6621"
         sodipodi:role="line"><tspan
           id="tspan10489"
           y="-12095.645"
           x="7437.6621">How to make this work differently?</tspan></tspan></text>
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:0.99999988;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide24"
       width="138.4366"
       height="78.031258"
       x="6817.3755"
       y="-12407.302" />
    <g
       style="font-size:14px;font-family:monospace"
       transform="matrix(0.49568094,0,0,0.49568094,7307.3001,-12363.839)"
       font-size="14px"
       id="g10394">
      <text
         x="-105.78979"
         y="-7.8208737"
         xml:space="preserve"
         id="text10396"><tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan10398">import</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan10400">xml</tspan><tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan10402">.</tspan><tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan10404">etree</tspan><tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan10406">.</tspan><tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan10408">elementtree</tspan><tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan10410">.</tspan><tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan10412">parse</tspan></text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text10414" />
      <text
         sodipodi:linespacing="125%"
         id="text10433"
         y="29.099762"
         x="111.52772"
         style="font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
         xml:space="preserve"><tspan
           y="29.099762"
           x="47.041969"
           id="tspan10435"
           sodipodi:role="line">Namespaces are one</tspan><tspan
           id="tspan10437"
           y="46.599762"
           x="47.041969"
           sodipodi:role="line">honking great idea</tspan><tspan
           y="64.099762"
           x="47.041969"
           sodipodi:role="line"
           id="tspan13702">...right?</tspan></text>
    </g>
    <g
       id="g10491"
       transform="matrix(0.49568094,0,0,0.49568094,6787.2463,-12570.816)">
      <g
         transform="translate(394.23118,433.14462)"
         style="font-size:14px;font-family:monospace"
         font-size="14px"
         id="g10493">
        <text
           x="0"
           y="14"
           xml:space="preserve"
           id="text10495">__type__</text>
        <text
           x="0"
           y="37"
           xml:space="preserve"
           id="text10497">__dict__</text>
        <text
           x="0"
           y="71"
           xml:space="preserve"
           id="text10499" />
        <text
           id="text10509"
           xml:space="preserve"
           y="56.53125"
           x="29.296875">x</text>
        <text
           x="29.6875"
           y="77.625"
           xml:space="preserve"
           id="text10511">y</text>
      </g>
      <rect
         y="427.83533"
         x="358.60416"
         height="95.147156"
         width="139.65359"
         id="rect10507"
         style="fill:none;stroke:#000000;stroke-width:2.01742673;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    </g>
    <g
       transform="matrix(0.49568094,0,0,0.49568094,7850.3593,-24707.585)"
       id="g10517">
      <path
         style="fill:none;stroke:#ff0000;stroke-width:2.01742697px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="m 1773.4375,461.59374 81.6406,-16.01562"
         id="path10513"
         inkscape:connector-curvature="0"
         transform="translate(-3532.5938,24497.812)" />
      <path
         inkscape:connector-curvature="0"
         id="path10515"
         d="m -1759.1563,24943.39 81.6406,16.016"
         style="fill:none;stroke:#ff0000;stroke-width:2.01742697px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
    </g>
    <g
       style="font-size:14px;font-family:monospace"
       transform="matrix(0.49568094,0,0,0.49568094,6811.6884,-12357.629)"
       font-size="14px"
       id="g12612">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text12614">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan12616">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan12618">Point</tspan>:</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text12620">        __slots__ <tspan
   style="fill:#666666"
   id="tspan12622">=</tspan> [<tspan
   style="fill:#ba2121"
   id="tspan12624">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan12626">x</tspan><tspan
   style="fill:#ba2121"
   id="tspan12628">'</tspan>, <tspan
   style="fill:#ba2121"
   id="tspan12630">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan12632">y</tspan><tspan
   style="fill:#ba2121"
   id="tspan12634">'</tspan>]</text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text12636" />
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text12638">    <tspan
   style="fill:#666666"
   id="tspan12640">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan12642">&gt;</tspan> point <tspan
   style="fill:#666666"
   id="tspan12644">=</tspan> Point()</text>
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text12646">    <tspan
   style="fill:#666666"
   id="tspan12648">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan12650">&gt;</tspan> point<tspan
   style="fill:#666666"
   id="tspan12652">.</tspan>x <tspan
   style="fill:#666666"
   id="tspan12654">=</tspan> <tspan
   style="fill:#666666"
   id="tspan12656">3</tspan></text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text12658">    <tspan
   style="fill:#666666"
   id="tspan12660">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan12662">&gt;</tspan> point<tspan
   style="fill:#666666"
   id="tspan12664">.</tspan>x</text>
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text12666">    <tspan
   style="fill:#666666"
   id="tspan12668">3</tspan></text>
      <text
         x="0"
         y="147"
         xml:space="preserve"
         id="text12670" />
      <text
         x="0"
         y="166"
         xml:space="preserve"
         id="text12672">    <tspan
   style="fill:#666666"
   id="tspan12674">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan12676">&gt;</tspan> point<tspan
   style="fill:#666666"
   id="tspan12678">.</tspan>z <tspan
   style="fill:#666666"
   id="tspan12680">=</tspan> <tspan
   style="fill:#666666"
   id="tspan12682">3</tspan></text>
      <text
         x="0"
         y="185"
         xml:space="preserve"
         id="text12684">    <tspan
   style="font-weight:bold;fill:#d2413a"
   font-weight="bold"
   id="tspan12686">AttributeError</tspan>: <tspan
   style="fill:#ba2121"
   id="tspan12688">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan12690">Point</tspan><tspan
   style="fill:#ba2121"
   id="tspan12692">'</tspan> <tspan
   style="fill:#008000"
   id="tspan12694">object</tspan> has no attribute <tspan
   style="fill:#ba2121"
   id="tspan12696">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan12698">z</tspan><tspan
   style="fill:#ba2121"
   id="tspan12700">'</tspan></text>
      <text
         x="0"
         y="204"
         xml:space="preserve"
         id="text12702" />
      <text
         x="0"
         y="223"
         xml:space="preserve"
         id="text12704">    <tspan
   style="fill:#666666"
   id="tspan12706">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan12708">&gt;</tspan> Point<tspan
   style="fill:#666666"
   id="tspan12710">.</tspan>x</text>
      <text
         x="0"
         y="242"
         xml:space="preserve"
         id="text12712">    <tspan
   style="fill:#666666"
   id="tspan12714">&lt;</tspan>member <tspan
   style="fill:#ba2121"
   id="tspan12716">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan12718">x</tspan><tspan
   style="fill:#ba2121"
   id="tspan12720">'</tspan> of <tspan
   style="fill:#ba2121"
   id="tspan12722">'</tspan><tspan
   style="fill:#ba2121"
   id="tspan12724">Point</tspan><tspan
   style="fill:#ba2121"
   id="tspan12726">'</tspan> objects<tspan
   style="fill:#666666"
   id="tspan12728">&gt;</tspan></text>
      <text
         x="0"
         y="261"
         xml:space="preserve"
         id="text12730" />
    </g>
    <text
       sodipodi:linespacing="125%"
       id="text13850"
       y="-12151.868"
       x="6729.4224"
       style="font-size:91.83036041px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         y="-12151.868"
         x="6729.4224"
         id="tspan13852"
         sodipodi:role="line">Descriptors</tspan></text>
    <text
       xml:space="preserve"
       style="font-size:47.66363144px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       x="6749.771"
       y="-12367.925"
       id="text13854"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan13856"
         x="6749.771"
         y="-12367.925">Slots</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text13858"
       y="-12398.17"
       x="7807.1528"
       style="font-size:45.55584335px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:end;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         id="tspan13862"
         y="-12398.17"
         x="7807.1528"
         sodipodi:role="line">Generic</tspan><tspan
         id="tspan13868"
         y="-12341.225"
         x="7807.1528"
         sodipodi:role="line">Attribute</tspan><tspan
         id="tspan13866"
         y="-12284.28"
         x="7807.1528"
         sodipodi:role="line">Access</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text13870"
       y="-12188.972"
       x="7181.5698"
       style="font-size:9.36980629px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         y="-12188.972"
         x="7181.5698"
         id="tspan13872"
         sodipodi:role="line">0. __getatribute__ <tspan
   id="tspan16159"
   style="font-style:italic;-inkscape-font-specification:Fertigo Pro Italic">on class</tspan></tspan><tspan
         id="tspan13874"
         y="-12177.26"
         x="7181.5698"
         sodipodi:role="line">1. data descriptor <tspan
   id="tspan16153"
   style="font-style:italic;-inkscape-font-specification:Fertigo Pro Italic">on class</tspan></tspan><tspan
         id="tspan13876"
         y="-12165.547"
         x="7181.5698"
         sodipodi:role="line">2. __dict__</tspan><tspan
         id="tspan13878"
         y="-12153.835"
         x="7181.5698"
         sodipodi:role="line">3. non-data descriptor <tspan
   id="tspan16155"
   style="font-style:italic;-inkscape-font-specification:Fertigo Pro Italic">on class</tspan></tspan><tspan
         id="tspan13882"
         y="-12142.123"
         x="7181.5698"
         sodipodi:role="line">4. simple value from the <tspan
   id="tspan16157"
   style="font-style:italic;-inkscape-font-specification:Fertigo Pro Italic">class</tspan></tspan><tspan
         id="tspan13884"
         y="-12130.411"
         x="7181.5698"
         sodipodi:role="line">5. __getattr__ <tspan
   id="tspan16163"
   style="font-style:italic;-inkscape-font-specification:Fertigo Pro Italic">on class</tspan></tspan><tspan
         id="tspan13886"
         y="-12118.698"
         x="7181.5698"
         sodipodi:role="line">6. raise AttributeError</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text13890"
       y="-12207.658"
       x="7245.3623"
       style="font-size:19.82723808px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         y="-12207.658"
         x="7245.3623"
         id="tspan13892"
         sodipodi:role="line">The magic formula</tspan></text>
    <g
       style="font-size:14px;font-family:monospace"
       transform="matrix(0.66605367,0,0,0.66605367,6848.8125,-12078.105)"
       font-size="14px"
       id="g14825">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text14827"><tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan14829">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan14831">AreaDescriptor</tspan>:</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text14833">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan14835">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan14837">__get__</tspan>(<tspan
   style="fill:#008000"
   id="tspan14839">self</tspan>, instance, <tspan
   style="fill:#008000"
   id="tspan14841">type</tspan><tspan
   style="fill:#666666"
   id="tspan14843">=</tspan><tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan14845">None</tspan>):</text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text14847">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan14849">if</tspan> instance <tspan
   style="font-weight:bold;fill:#aa22ff"
   font-weight="bold"
   id="tspan14851">is</tspan> <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan14853">None</tspan>:</text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text14855">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan14857">return</tspan> <tspan
   style="fill:#008000"
   id="tspan14859">self</tspan></text>
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text14861">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan14863">else</tspan>:</text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text14865">            <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan14867">return</tspan> instance<tspan
   style="fill:#666666"
   id="tspan14869">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan14871">*</tspan><tspan
   style="fill:#666666"
   id="tspan14873">*</tspan> <tspan
   style="fill:#666666"
   id="tspan14875">2</tspan></text>
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text14877" />
      <text
         x="0"
         y="147"
         xml:space="preserve"
         id="text14879"><tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan14881">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan14883">Square</tspan>:</text>
      <text
         x="0"
         y="166"
         xml:space="preserve"
         id="text14885">    area <tspan
   style="fill:#666666"
   id="tspan14887">=</tspan> AreaDescriptor()</text>
      <text
         x="0"
         y="185"
         xml:space="preserve"
         id="text14889" />
      <text
         x="0"
         y="204"
         xml:space="preserve"
         id="text14891"><tspan
   style="fill:#666666"
   id="tspan14893">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan14895">&gt;</tspan> square <tspan
   style="fill:#666666"
   id="tspan14897">=</tspan> Square()</text>
      <text
         x="0"
         y="223"
         xml:space="preserve"
         id="text14899"><tspan
   style="fill:#666666"
   id="tspan14901">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan14903">&gt;</tspan> square<tspan
   style="fill:#666666"
   id="tspan14905">.</tspan>side <tspan
   style="fill:#666666"
   id="tspan14907">=</tspan> <tspan
   style="fill:#666666"
   id="tspan14909">5</tspan></text>
      <text
         x="0"
         y="242"
         xml:space="preserve"
         id="text14911"><tspan
   style="fill:#666666"
   id="tspan14913">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan14915">&gt;</tspan> square<tspan
   style="fill:#666666"
   id="tspan14917">.</tspan>area</text>
      <text
         x="0"
         y="261"
         xml:space="preserve"
         id="text14919"><tspan
           style="fill:#666666"
           id="tspan14921">25</tspan></text>
      <text
         x="0"
         y="280"
         xml:space="preserve"
         id="text14923" />
      <text
         x="0"
         y="299"
         xml:space="preserve"
         id="text14925"><tspan
   style="fill:#666666"
   id="tspan14927">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan14929">&gt;</tspan> Square<tspan
   style="fill:#666666"
   id="tspan14931">.</tspan>area</text>
      <text
         x="0"
         y="318"
         xml:space="preserve"
         id="text14933"><tspan
   style="fill:#666666"
   id="tspan14935">&lt;</tspan>__main__<tspan
   style="fill:#666666"
   id="tspan14937">.</tspan>AreaDescriptor at <tspan
   style="fill:#666666"
   id="tspan14939">0x7f9a969fab38</tspan><tspan
   style="fill:#666666"
   id="tspan14941">&gt;</tspan></text>
      <text
         x="0"
         y="337"
         xml:space="preserve"
         id="text14943" />
    </g>
    <rect
       y="-11902.065"
       x="7199.103"
       height="191.25281"
       width="338.75162"
       id="slide12"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <text
       sodipodi:linespacing="125%"
       id="text15013"
       y="-11828.011"
       x="7247.1826"
       style="font-size:71.37805176px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:DejaVu Sans;-inkscape-font-specification:DejaVu Sans Bold"
       xml:space="preserve"><tspan
         y="-11828.011"
         x="7247.1826"
         id="tspan15015"
         sodipodi:role="line">☠</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text15017"
       y="-11805.66"
       x="7247.1831"
       style="font-size:19.82723808px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         id="tspan15021"
         y="-11805.66"
         x="7247.1831"
         sodipodi:role="line">__doc__</tspan><tspan
         id="tspan15025"
         y="-11780.876"
         x="7247.1831"
         sodipodi:role="line">__dict__</tspan><tspan
         id="tspan15027"
         y="-11756.092"
         x="7247.1831"
         sodipodi:role="line">methods</tspan><tspan
         y="-11731.308"
         x="7247.1831"
         sodipodi:role="line"
         id="tspan13714">subclasses</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text15029"
       y="-11955.65"
       x="7158.9561"
       style="font-size:6.96692085px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         y="-11955.65"
         x="7158.9561"
         id="tspan15031"
         sodipodi:role="line">Usually we want</tspan><tspan
         id="tspan15033"
         y="-11946.941"
         x="7158.9561"
         sodipodi:role="line"
         style="font-size:9px">one</tspan><tspan
         id="tspan15035"
         y="-11938.233"
         x="7158.9561"
         sodipodi:role="line">special attribute</tspan></text>
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide13"
       width="93.413414"
       height="52.583385"
       x="7113.6187"
       y="-11964.767" />
    <text
       sodipodi:linespacing="125%"
       id="text15043"
       y="-11971.256"
       x="7159.8906"
       style="font-size:15.80176258px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         y="-11971.256"
         x="7159.8906"
         id="tspan15045"
         sodipodi:role="line">Descriptors</tspan></text>
    <rect
       y="-11984.594"
       x="7113.6187"
       height="52.583385"
       width="93.413414"
       id="slide14"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <g
       style="font-size:14px;font-family:monospace"
       transform="matrix(0.67993234,0,0,0.67993234,6588.8905,-11992.198)"
       font-size="14px"
       id="g15957">
      <text
         x="0"
         y="14"
         xml:space="preserve"
         id="text15959"><tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan15961">class</tspan> <tspan
   style="font-weight:bold;fill:#0000ff"
   font-weight="bold"
   id="tspan15963">Point</tspan>:</text>
      <text
         x="0"
         y="33"
         xml:space="preserve"
         id="text15965">    <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan15967">def</tspan> <tspan
   style="fill:#0000ff"
   id="tspan15969">align</tspan>(<tspan
   style="fill:#008000"
   id="tspan15971">self</tspan>):</text>
      <text
         x="0"
         y="52"
         xml:space="preserve"
         id="text15973">        <tspan
   style="font-weight:bold;fill:#008000"
   font-weight="bold"
   id="tspan15975">return</tspan> <tspan
   style="fill:#666666"
   id="tspan15977">.</tspan><tspan
   style="fill:#666666"
   id="tspan15979">.</tspan><tspan
   style="fill:#666666"
   id="tspan15981">.</tspan></text>
      <text
         x="0"
         y="71"
         xml:space="preserve"
         id="text15983" />
      <text
         x="0"
         y="90"
         xml:space="preserve"
         id="text15985"><tspan
   style="fill:#666666"
   id="tspan15987">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan15989">&gt;</tspan> point <tspan
   style="fill:#666666"
   id="tspan15991">=</tspan> Point()</text>
      <text
         x="0"
         y="109"
         xml:space="preserve"
         id="text15993"><tspan
   style="fill:#666666"
   id="tspan15995">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan15997">&gt;</tspan> point<tspan
   style="fill:#666666"
   id="tspan15999">.</tspan>align</text>
      <text
         x="0"
         y="128"
         xml:space="preserve"
         id="text16001"><tspan
   style="fill:#666666"
   id="tspan16003">&lt;</tspan>bound method Point<tspan
   style="fill:#666666"
   id="tspan16005">.</tspan>align of <tspan
   style="fill:#666666"
   id="tspan16007">.</tspan><tspan
   style="fill:#666666"
   id="tspan16009">.</tspan><tspan
   style="fill:#666666"
   id="tspan16011">.</tspan><tspan
   style="fill:#666666"
   id="tspan16013">&gt;</tspan></text>
      <text
         x="0"
         y="147"
         xml:space="preserve"
         id="text16015" />
      <text
         x="0"
         y="166"
         xml:space="preserve"
         id="text16017"><tspan
   style="fill:#666666"
   id="tspan16019">&gt;&gt;</tspan><tspan
   style="fill:#666666"
   id="tspan16021">&gt;</tspan> Point<tspan
   style="fill:#666666"
   id="tspan16023">.</tspan>align</text>
      <text
         x="0"
         y="185"
         xml:space="preserve"
         id="text16025"><tspan
   style="fill:#666666"
   id="tspan16027">&lt;</tspan>function Point<tspan
   style="fill:#666666"
   id="tspan16029">.</tspan>align at <tspan
   style="fill:#666666"
   id="tspan16031">0x7f0f6cab9840</tspan><tspan
   style="fill:#666666"
   id="tspan16033">&gt;</tspan></text>
      <text
         x="0"
         y="204"
         xml:space="preserve"
         id="text16035" />
    </g>
    <g
       id="g16113"
       transform="matrix(0.49568094,0,0,0.49568094,6849.3538,-12170.07)">
      <g
         transform="translate(394.23118,433.14462)"
         style="font-size:14px;font-family:monospace"
         font-size="14px"
         id="g16115">
        <text
           x="0"
           y="22"
           xml:space="preserve"
           id="text16117">__type__</text>
        <text
           x="0"
           y="51"
           xml:space="preserve"
           id="text16119">__dict__</text>
        <text
           x="0"
           y="71"
           xml:space="preserve"
           id="text16121" />
      </g>
      <rect
         y="427.83536"
         x="358.60416"
         height="84.600281"
         width="139.65359"
         id="rect16123"
         style="fill:none;stroke:#000000;stroke-width:2.01742697;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    </g>
    <path
       style="fill:none;stroke:#000000;stroke-width:1.00000012px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 7007.0036,-11969.005 20.9295,22.739"
       id="path16125"
       inkscape:connector-curvature="0"
       sodipodi:nodetypes="cc" />
    <path
       transform="matrix(0.38552963,0,0,0.38552963,6692.6445,-12144.817)"
       d="m 818.21431,453.61218 a 4.8214288,4.8214288 0 1 1 -9.64286,0 4.8214288,4.8214288 0 1 1 9.64286,0 z"
       sodipodi:ry="4.8214288"
       sodipodi:rx="4.8214288"
       sodipodi:cy="453.61218"
       sodipodi:cx="813.39288"
       id="path16127"
       style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       sodipodi:type="arc" />
    <path
       sodipodi:type="arc"
       style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="path16129"
       sodipodi:cx="813.39288"
       sodipodi:cy="453.61218"
       sodipodi:rx="4.8214288"
       sodipodi:ry="4.8214288"
       d="m 818.21431,453.61218 a 4.8214288,4.8214288 0 1 1 -9.64286,0 4.8214288,4.8214288 0 1 1 9.64286,0 z"
       transform="matrix(0.38552963,0,0,0.38552963,6713.9433,-12122.266)" />
    <path
       style="fill:none;stroke:#000000;stroke-width:1.00000048px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 6969.2388,-11932.924 56.9245,-1.214"
       id="path16137"
       inkscape:connector-curvature="0"
       sodipodi:nodetypes="cc" />
    <path
       sodipodi:type="arc"
       style="fill:#0000ff;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="path16139"
       sodipodi:cx="813.39288"
       sodipodi:cy="453.61218"
       sodipodi:rx="4.8214288"
       sodipodi:ry="4.8214288"
       d="m 818.21431,453.61218 a 4.8214288,4.8214288 0 1 1 -9.64286,0 4.8214288,4.8214288 0 1 1 9.64286,0 z"
       transform="matrix(0.38552963,0,0,0.38552963,6655.4684,-12107.177)" />
    <path
       transform="matrix(0.38552963,0,0,0.38552963,6713.7552,-12108.624)"
       d="m 818.21431,453.61218 a 4.8214288,4.8214288 0 1 1 -9.64286,0 4.8214288,4.8214288 0 1 1 9.64286,0 z"
       sodipodi:ry="4.8214288"
       sodipodi:rx="4.8214288"
       sodipodi:cy="453.61218"
       sodipodi:cx="813.39288"
       id="path16141"
       style="fill:#0000ff;fill-opacity:1;stroke:#000000;stroke-width:2.5938344;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       sodipodi:type="arc" />
    <text
       sodipodi:linespacing="125%"
       id="text16143"
       y="-11684.537"
       x="6800.583"
       style="font-size:9.19203758px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         style="font-size:5.94817114px"
         y="-11684.537"
         x="6800.583"
         id="tspan16145"
         sodipodi:role="line">__set__ makes this is a</tspan><tspan
         id="tspan16147"
         y="-11673.892"
         x="6800.583"
         sodipodi:role="line">data descriptor</tspan></text>
    <path
       sodipodi:nodetypes="cc"
       inkscape:connector-curvature="0"
       id="path16149"
       d="m 6800.0271,-11664.919 c 0,20.912 19.1689,35.627 45.3083,36.789"
       style="fill:none;stroke:#000000;stroke-width:1.00000012px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide17"
       width="192.8205"
       height="108.76999"
       x="6835.1113"
       y="-11694.616" />
    <path
       style="fill:none;stroke:#000000;stroke-width:1.00000012px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 6800.6931,-11694.459 c 0,-28.272 -47.7486,-48.167 -112.8604,-49.738"
       id="path16165"
       inkscape:connector-curvature="0"
       sodipodi:nodetypes="cc" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide19"
       width="136.48903"
       height="76.933487"
       x="6600.3203"
       y="-11798.688" />
    <text
       xml:space="preserve"
       style="font-size:13.58677483px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       x="6886.6484"
       y="-12389.582"
       id="text21148"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan21150"
         x="6886.6484"
         y="-12389.582">A trick</tspan><tspan
         sodipodi:role="line"
         x="6886.6484"
         y="-12372.599"
         id="tspan21152">for saving memory</tspan><tspan
         sodipodi:role="line"
         x="6886.6484"
         y="-12355.615"
         id="tspan21154" /></text>
    <text
       xml:space="preserve"
       style="font-size:59.64499283px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       x="7155.0127"
       y="-12336.847"
       id="text23584"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan23586"
         x="7155.0127"
         y="-12336.847">MRO</tspan><tspan
         sodipodi:role="line"
         x="7155.0127"
         y="-12262.29"
         id="tspan23588">?</tspan></text>
    <rect
       y="-12315.182"
       x="7101.812"
       height="60.744167"
       width="107.59548"
       id="slide-q"
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
    <rect
       style="fill:#0000b0;fill-opacity:0.04854371;stroke:#000000;stroke-width:1.00000012;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       id="slide14a"
       width="397.61371"
       height="224.52271"
       x="6820.2612"
       y="-11997.872" />
    <text
       xml:space="preserve"
       style="font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       x="7397.6562"
       y="-12248.09"
       id="text8708"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan8710"
         x="7397.6562"
         y="-12248.09">An object</tspan></text>
    <rect
       y="-11957.384"
       x="7455.0044"
       height="53.033009"
       width="206.05533"
       id="rect11236"
       style="fill:#ffff00;fill-opacity:0.11881187;stroke:none" />
    <rect
       style="fill:#ffff00;fill-opacity:0.11881187;stroke:none"
       id="rect12006"
       width="218.48494"
       height="53.033009"
       x="7315.793"
       y="-11799.39" />
    <rect
       y="-11742.389"
       x="6929.4512"
       height="11.500441"
       width="61.514721"
       id="rect12008"
       style="fill:#ffff00;fill-opacity:0.11881187;stroke:none" />
    <rect
       style="fill:#ffff00;fill-opacity:0.11881187;stroke:none"
       id="rect13704"
       width="70.158241"
       height="33.14563"
       x="7416.3345"
       y="-12326.405" />
    <text
       xml:space="preserve"
       style="font-size:4px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       x="7398.6572"
       y="-12227.245"
       id="text13706"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan13708"
         x="7398.6572"
         y="-12227.245">(behavior)</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text13710"
       y="-12210.396"
       x="7397.8286"
       style="font-size:4px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Fertigo Pro;-inkscape-font-specification:Fertigo Pro"
       xml:space="preserve"><tspan
         y="-12210.396"
         x="7397.8286"
         id="tspan13712"
         sodipodi:role="line">(data)</tspan></text>
  </g>
  <script
     ns1:version="13.11-30213629"
     id="sozi-script">/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * Create or augment a namespace.
 *
 * &lt;p&gt;A typical use of this function is:&lt;/p&gt;
 *
 * &lt;pre&gt;
 * namespace(this, &quot;a.b.c&quot;, function (exports, globals) {
 *     exports.foo = function (x) {
 *         ...
 *     };
 * });
 * &lt;/pre&gt;
 *
 * &lt;p&gt;where &lt;code&gt;this&lt;/code&gt; is the global object.&lt;/p&gt;
 *
 * &lt;p&gt;In this example, function &lt;code&gt;foo&lt;/code&gt; is exported and can be
 * called as &lt;code&gt;a.b.c.foo(someValue)&lt;/code&gt;.&lt;/p&gt;
 *
 * @memberOf _global_
 * @param globals The global object
 * @param {String} path The dot-separated path to the namespace
 * @param {Function} body A function to execute in the context of the namespace
 */
function namespace(globals, path, body) {
    &quot;use strict&quot;;
    
    // Start name lookup in the global object
	var current = globals;
	
	// For each name in the given path
	path.split(&quot;.&quot;).forEach(function (name) {
	    // If the current path element does not exist
	    // in the current namespace, create a new sub-namespace
		if (typeof current[name] === &quot;undefined&quot;) {
			current[name] = {};
		}
		
		// Move to the namespace for the current path element
		current = current[name];
	});
	
	// Execute the given function in the last namespace
	if (body) {
	    body(current, globals);
	}
	
	return current;
}


/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.events
 * @namespace A simple event system for Sozi.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.events&quot;, function (exports) {
    /** @lends sozi.events */

    &quot;use strict&quot;;
    
    /**
     * A registry of callback functions for each event type.
     *
     * &lt;p&gt;Call {@link sozi.events.listen} to add a new listener.&lt;/p&gt;
     */
    var listenerRegistry = {};

    /**
     * Adds a listener for a given event type.
     *
     * @memberOf sozi.events
     * @name listen
     * @function
     * @param {String} key The identifier of the event type to listen
     * @param {Function} handler The function to call when a corresponding event is fired
     */
    exports.listen = function (key, handler) {
        if (!listenerRegistry.hasOwnProperty(key)) {
            listenerRegistry[key] = [];
        }
        listenerRegistry[key].push(handler);
    };
    
    /**
     * Fire an event of a given type.
     *
     * &lt;p&gt;All event handlers added for the given event type are
     * executed.&lt;/p&gt;
     *
     * &lt;p&gt;Additional arguments provided to this function are passed
     * to the event handlers.&lt;/p&gt;
     *
     * @memberOf sozi.events
     * @name fire
     * @function
     * @param {String} key The identifier of the event type to fire
     */
    exports.fire = function (key) {
        var args = Array.prototype.slice.call(arguments, 1);
        if (listenerRegistry.hasOwnProperty(key)) {
            listenerRegistry[key].forEach(function (listener) {
                listener.apply(null, args);
            });
        }
    };
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.proto
 * @namespace Helpers for prototype inheritance.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.proto&quot;, function (exports) {
    &quot;use strict&quot;;
    
    exports.Object = {
        installConstructors: function () {
            function InstanceConstructor() {}
            InstanceConstructor.prototype = this;
            
            this.instance = function () {
                var result = new InstanceConstructor();
                result.construct.apply(result, arguments);
                return result;
            };
            
            this.subtype = function (anObject) {
                var result = new InstanceConstructor();
                result.augment(anObject);
                result.installConstructors();
                return result;
            };
        },
        
        construct: function () {},
        
        augment: function (anObject) {
            for (var attr in anObject) {
                if (anObject.hasOwnProperty(attr)) {
                    this[attr] = anObject[attr];
                }
            }
            return this;
        },
        
        bind: function (aFunction) {
            var self = this;
            return function () {
                return aFunction.apply(self, arguments);
            }
        }
    };
    
    // Bootstrap the root object
    exports.Object.installConstructors();
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.actions
 * @namespace Callback functions for DOM event handlers
 * @depend namespace.js
 */
namespace(this, &quot;sozi.actions&quot;, function (exports, window) {
    /** @lends sozi.actions */
    
    &quot;use strict&quot;;
    
    // Module aliases
    var player = namespace(window, &quot;sozi.player&quot;);
    var display = namespace(window, &quot;sozi.display&quot;);
    
    // The global document object
    var document = window.document;
    
    // Constants: mouse button numbers
    var DRAG_BUTTON = 0;    // Left button
    var TOC_BUTTON = 1;     // Middle button
    
    // Constants: increments for zooming and rotating,
    // threshold for dragging
    var SCALE_FACTOR = 1.05;
    var ROTATE_STEP = 5;
    var DRAG_THRESHOLD_PX = 5;
    
    /**
     * The status of the current drag operation.
     *
     * @type Boolean
     */
    var mouseDragged = false;
    
    /**
     * The X coordinate of the mouse on the latest &quot;down&quot; or &quot;drag&quot; event.
     *
     * @type Number
     */
    var mouseLastX = 0;

    /**
     * The Y coordinate of the mouse on the latest &quot;down&quot; or &quot;drag&quot; event.
     *
     * @type Number
     */
    var mouseLastY = 0;
    
    /**
     * Zooms the display in the given direction.
     *
     * &lt;p&gt;Only the sign of &lt;code&gt;direction&lt;/code&gt; is used:&lt;/p&gt;
     * &lt;ul&gt;
     *  &lt;li&gt;zoom in when &lt;code&gt;direction &gt; 0&lt;/code&gt;&lt;/li&gt;
     *  &lt;li&gt;zoom out when &lt;code&gt;direction &lt;= 0&lt;/code&gt;&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * &lt;p&gt;The scaling is centered around point (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;).&lt;/p&gt;
     *
     * @param {Number} direction The direction of the scaling operation
     * @param {Number} x The X coordinate of the scaling center
     * @param {Number} y The Y coordinate of the scaling center
     */
    function zoom(direction, x, y) {
        player.stop();
        display.viewPorts[&quot;player&quot;].zoom(direction &gt; 0 ? SCALE_FACTOR : 1 / SCALE_FACTOR, x, y);
    }
    
    /**
     * Rotate the display in the given direction.
     *
     * &lt;p&gt;Only the sign of &lt;code&gt;direction&lt;/code&gt; is used:&lt;/p&gt;
     * &lt;ul&gt;
     *  &lt;li&gt;rotate anticlockwise when direction &gt; 0&lt;/li&gt;
     *  &lt;li&gt;rotate clockwise when direction &lt;= 0&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * @param {Number} direction The direction of the rotation
     */
    function rotate(direction) {
        player.stop();
        display.viewPorts[&quot;player&quot;].rotate(direction &gt; 0 ? ROTATE_STEP : -ROTATE_STEP);
    }
    
    /**
     * Show/hide the frame list.
     *
     * &lt;p&gt;The presentation stops when the frame list is showed,
     * and restarts when the frame list is hidden.&lt;/p&gt;
     */
    function toggleFrameList() {
        if (sozi.framelist.isVisible()) {
            sozi.framelist.hide();
            player.restart();
        } else {
            player.stop();
            sozi.framelist.show();
        }
    }

    function isPlayerEvent(evt) {
        return display.viewPorts[&quot;player&quot;].contains(evt.clientX, evt.clientY);
    }
    
    /**
     * Event handler: mouse down.
     *
     * &lt;p&gt;When the left button is pressed, we register the current coordinates
     * in case the mouse will be dragged. Handler {@link sozi.actions-onMouseDrag} is set until
     * the button is released ({@link sozi.actions-onMouseUp}).&lt;/p&gt;
     *
     * &lt;p&gt;When the middle button is pressed, the table of contents is shown or hidden.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onMouseDown(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        if (evt.button === DRAG_BUTTON) {
            document.documentElement.addEventListener(&quot;mousemove&quot;, onMouseDrag, false);
            mouseDragged = false;
            mouseLastX = evt.clientX;
            mouseLastY = evt.clientY;
        } else if (evt.button === TOC_BUTTON) {
            toggleFrameList();
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: mouse move.
     *
     * &lt;p&gt;If the left mouse button is down, then the mouse move is a drag action.
     * This method computes the displacement since the button was pressed or
     * since the last move, and updates the reference coordinates for the next move.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onMouseDrag(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        player.stop();
        
        // The drag action is confirmed when one of the mouse coordinates
        // has moved past the threshold
        if (!mouseDragged &amp;&amp; (Math.abs(evt.clientX - mouseLastX) &gt; DRAG_THRESHOLD_PX ||
                              Math.abs(evt.clientY - mouseLastY) &gt; DRAG_THRESHOLD_PX)) {
            mouseDragged = true;
        }
        
        if (mouseDragged) {
            sozi.events.fire(&quot;sozi.player.cleanup&quot;);
            display.viewPorts[&quot;player&quot;].drag(evt.clientX - mouseLastX, evt.clientY - mouseLastY);
            mouseLastX = evt.clientX;
            mouseLastY = evt.clientY;
        }
        
        evt.stopPropagation();
    }

    /**
     * Event handler: mouse up.
     *
     * &lt;p&gt;Releasing the left button removes the {@link sozi.actions-onMouseDrag} handler.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onMouseUp(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        if (evt.button === DRAG_BUTTON) {
            document.documentElement.removeEventListener(&quot;mousemove&quot;, onMouseDrag, false);
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: context menu (i.e right click).
     *
     * &lt;p&gt;Right click goes one frame back.&lt;/p&gt;
     *
     * &lt;p&gt;There is no &quot;click&quot; event for the right mouse button and the menu
     * can't be disabled in {@link sozi.actions-onMouseDown}.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onContextMenu(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        player.moveToPrevious();
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: mouse click.
     *
     * &lt;p&gt;Left-click moves the presentation to the next frame.&lt;/p&gt;
     *
     * &lt;p&gt;No &quot;click&quot; event is generated for the middle button in Firefox.
     * See {@link sozi.actions-onMouseDown} for middle click handling.&lt;/p&gt;
     *
     * &lt;p&gt;Dragging the mouse produces a &quot;click&quot; event when the button is released.
     * If flag {@link sozi.actions-mouseDragged} was set by {@link sozi.actions-onMouseDrag},
     * then the click event is the result of a drag action.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onClick(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        if (!mouseDragged &amp;&amp; evt.button !== TOC_BUTTON) {
            player.moveToNext();
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: mouse wheel.
     *
     * &lt;p&gt;Rolling the mouse wheel stops the presentation and zooms the current display.&lt;/p&gt;
     *
     * FIXME shift key does not work in Opera
     *
     * @param {Event} evt The DOM event object
     */
    function onWheel(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        
        if (!evt) {
            evt = window.event;
        }

        var delta = 0;
        if (evt.wheelDelta) { // IE and Opera
            delta = evt.wheelDelta;
        }
        else if (evt.detail) { // Mozilla
            delta = -evt.detail;
        }
        
        if (delta !== 0) {
            if (evt.shiftKey) {
                rotate(delta);
            }
            else {
                zoom(delta, evt.clientX, evt.clientY);
            }
        }
        
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: key press.
     *
     * &lt;p&gt;Keyboard handling is split into two methods:
     * {@link sozi.actions-onKeyPress} and {@link sozi.actions-onKeyDown}
     * in order to get the same behavior across browsers.&lt;/p&gt;
     *
     * &lt;p&gt;This method handles character keys &quot;+&quot;, &quot;-&quot;, &quot;=&quot;, &quot;F&quot; and &quot;T&quot;.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onKeyPress(evt) {
        // Keys with modifiers are ignored
        if (evt.altKey || evt.ctrlKey || evt.metaKey) {
            return;
        }

        switch (evt.charCode || evt.which) {
        case 43: // +
            zoom(1, window.innerWidth / 2, window.innerHeight / 2);
            break;
        case 45: // -
            zoom(-1, window.innerWidth / 2, window.innerHeight / 2);
            break;
        case 61: // =
            player.moveToCurrent();
            break;
        case 70: // F
        case 102: // f
            player.showAll();
            break;
        case 84: // T
        case 116: // t
            toggleFrameList();
            break;
        case 82: // R
            rotate(-1);
            break;
        case 114: // r
            rotate(1);
            break;
        default:
            return;
        }

        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: key down.
     *
     * &lt;p&gt;Keyboard handling is split into two methods:
     * {@link sozi.actions-onKeyPress} and {@link sozi.actions-onKeyDown}
     * in order to get the same behavior across browsers.&lt;/p&gt;
     *
     * &lt;p&gt;This method handles navigation keys (arrows, page up/down, home, end)
     * and the space and enter keys.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onKeyDown(evt) {
        // Keys with Alt/Ctrl/Meta modifiers are ignored
        if (evt.altKey || evt.ctrlKey || evt.metaKey) {
            return;
        }

        switch (evt.keyCode) {
            case 36: // Home
                if (evt.shiftKey) {
                    player.jumpToFirst();
                }
                else {
                    player.moveToFirst();
                }
                break;
            case 35: // End
                if (evt.shiftKey) {
                    player.jumpToLast();
                }
                else {
                    player.moveToLast();
                }
                break;
            case 38: // Arrow up
            case 33: // Page up
            case 37: // Arrow left
                if (evt.shiftKey) {
                    player.jumpToPrevious();
                }
                else {
                    player.moveToPrevious();
                }
                break;
            case 40: // Arrow down
            case 34: // Page down
            case 39: // Arrow right
            case 13: // Enter
            case 32: // Space
                if (evt.shiftKey) {
                    player.jumpToNext();
                }
                else {
                    player.moveToNext();
                }
                break;
            default:
                // Ignore other keys and propagate the event
                return;
        }
        
        // Stop event propagation for supported keys
        evt.stopPropagation();
        
        // In some versions of Chrome/Chromium, preventDefault() inhibits the &quot;keypress&quot; event
        evt.preventDefault();
    }

    /**
     * Dummy event handler: stop event propagation.
     *
     * @param {Event} evt The DOM event object
     */
    function stopEvent(evt) {
        evt.stopPropagation();
    }

    /**
     * Event handler: document load.
     *
     * &lt;p&gt;This function sets up all other event handlers for the player.&lt;/p&gt;
     */
    function onDisplayReady() {
        // Prevent event propagation when clicking on a link
        // FIXME does not work in Firefox when the &lt;a&gt; is referenced through a &lt;use&gt;
        var links = document.getElementsByTagName(&quot;a&quot;);
        for (var i = 0; i &lt; links.length; i += 1) {
            links[i].addEventListener(&quot;click&quot;, stopEvent, false);
            links[i].addEventListener(&quot;contextmenu&quot;, stopEvent, false);
        }
        
        // Mouse events are constrained to the player viewport
        // see isPlayerEvent()
        // TODO also use shift-click as an alternative for middle-click
        var svgRoot = document.documentElement;
        svgRoot.addEventListener(&quot;click&quot;, onClick, false);
        svgRoot.addEventListener(&quot;mousedown&quot;, onMouseDown, false);
        svgRoot.addEventListener(&quot;mouseup&quot;, onMouseUp, false);
        svgRoot.addEventListener(&quot;contextmenu&quot;, onContextMenu, false);
        svgRoot.addEventListener(&quot;DOMMouseScroll&quot;, onWheel, false); // Mozilla
        window.onmousewheel = onWheel;

        // Keyboard events are global to the SVG document
        svgRoot.addEventListener(&quot;keypress&quot;, onKeyPress, false);
        svgRoot.addEventListener(&quot;keydown&quot;, onKeyDown, false);
    }

    sozi.events.listen(&quot;sozi.display.ready&quot;, onDisplayReady); // @depend events.js
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.animation
 * @namespace A general-purpose animation controller.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.animation&quot;, function (exports, window) {
    /** @lends sozi.animation */
    
    &quot;use strict&quot;;
    
    /**
     * The browser-specific function to request an animation frame.
     *
     * @function
     */
    var requestAnimationFrame =
            window.mozRequestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.msRequestAnimationFrame ||
            window.oRequestAnimationFrame;

    var getCurrentTime = function () {
        return window.performance &amp;&amp; window.performance.now ?
            window.performance.now() :
            Date.now();
    };

    exports.setAnimationFrameHandlers = function (requestAnimationFrameFunction, getCurrentTimeFunction) {
        requestAnimationFrame = requestAnimationFrameFunction;
        getCurrentTime = getCurrentTimeFunction;
    };

    /**
     * The default time step.
     *
     * &lt;p&gt;For browsers that do not support animation frames.&lt;/p&gt;
     *
     * @constant
     * @type Number
     */
    var TIME_STEP_MS = 40;
    
    /**
     * The handle provided by &lt;code&gt;setInterval()&lt;/code&gt;.
     *
     * &lt;p&gt;For browsers that do not support animation frames.&lt;/p&gt;
     */
    var timer;
    
    /**
     * The list of running animators.
     *
     * @type Array
     */
    var animatorList = [];
    
    /**
     * The main animation loop.
     *
     * &lt;p&gt;This function is called periodically and triggers the
     * animation steps in all running animators.&lt;/p&gt;
     *
     * &lt;p&gt;If all animators are removed from the list of running animators,
     * then the periodic calling is disabled.&lt;/p&gt;
     *
     * &lt;p&gt;This function can be called either through {@link sozi.animation-requestAnimationFrame}
     * if the browser supports it, or through &lt;code&gt;setInterval()&lt;/code&gt;.&lt;/p&gt;
     */
    function loop() {
        if (animatorList.length &gt; 0) {
            // If there is at least one animator,
            // and if the browser provides animation frames,
            // schedule this function to be called again in the next frame.
            if (requestAnimationFrame) {
                requestAnimationFrame(loop);
            }

            // Step all animators
            animatorList.forEach(function (animator) {
                // TODO use timestamp argument:
                // browser compatibility issue with Date.now()
                // and performance.now() timestamps.
                animator.step(getCurrentTime());
            });
        }
        else {
            // If all animators have been removed,
            // and if this function is called periodically
            // through setInterval, disable the periodic calling.
            if (!requestAnimationFrame) {
                window.clearInterval(timer);
            }
        }
    }
    
    /**
     * Start the animation loop.
     *
     * &lt;p&gt;This function delegates the periodic update of all animators
     * to the {@link sozi.animation-loop} function, either through {@link sozi.animation-requestAnimationFrame}
     * if the browser supports it, or through &lt;code&gt;setInterval()&lt;/code&gt;.&lt;/p&gt;
     */
    function start() {
        if (requestAnimationFrame) {
            requestAnimationFrame(loop);
        }
        else {
            timer = window.setInterval(function () {
                loop(getCurrentTime());
            }, TIME_STEP_MS);
        }
    }
    
    /**
     * Add a new animator object to the list of running animators.
     *
     * &lt;p&gt;If the animator list was empty before calling this function,
     * then the animation loop is started.&lt;/p&gt;
     *
     * @param {sozi.animation.Animator} animator The animator object to add.
     */
    function addAnimator(animator) {
        animatorList.push(animator);
        if (animatorList.length === 1) {
            start();
        }
    }
    
    /**
     * Remove the given animator from the list of running animators.
     *
     * @param {sozi.animation.Animator} animator The animator object to add.
     */
    function removeAnimator(animator) {
        animatorList.splice(animatorList.indexOf(animator), 1);
    }
    
    /**
     * @class
     *
     * An animator provides the logic for animating other objects.
     *
     * &lt;p&gt;The main purpose of an animator is to schedule the update
     * operations in the animated objects.&lt;/p&gt;
     *
     * @memberOf sozi.animation
     * @name Animator
     * @depend proto.js
     */
    exports.Animator = sozi.proto.Object.subtype({
        /** @lends sozi.animation.Animator */
        
        /**
         * Construct a new animator.
         */
        construct: function () {
            /**
             * The animation duration, in milliseconds.
             * @type Number
             */
            this.durationMs = 0;
            
            /**
             * A &quot;payload&quot; object that can be used by {@link sozi.animation.Animator.onStep}
             * and {@link sozi.animation.Animator.onDone}.
             */
            this.data = null;
            
            /**
             * The start time of the animation.
             * @type Number
             */
            this.initialTime = 0;
            
            /**
             * The current state of this animator.
             * @type Boolean
             */
            this.started = false;
        },

        /**
         * Start the current animator.
         *
         * &lt;p&gt;The current animator is added to the list of running animators
         * and is put in the &quot;started&quot; state.
         * It will be removed from the list automatically when the given duration
         * has elapsed.&lt;/p&gt;
         *
         * &lt;p&gt;Method {@link sozi.animation.Animator.onStep} is called once before starting the animation.&lt;/p&gt;
         *
         * @param {Number} durationMs The animation duration, in milliseconds
         * @param data Some data that can be used in {@link sozi.animation.Animator.onStep}
         * and {@link sozi.animation.Animator.onDone}
         */
        start: function (durationMs, data) {
            this.durationMs = durationMs;
            this.data = data;
            this.initialTime = getCurrentTime();
            this.onStep(0);
            if (!this.started) {
                this.started = true;
                addAnimator(this);
            }
        },

        /**
         * Stop the current animator.
         *
         * &lt;p&gt;The current animator is removed from the list of running animators
         * and is put in the &quot;stopped&quot; state.&lt;/p&gt;
         */
        stop: function () {
            if (this.started) {
                removeAnimator(this);
                this.started = false;
            }
        },

        /**
         * Perform one animation step.
         *
         * &lt;p&gt;This function is called automatically by the {@link sozi.animation-loop} function.
         * It calls {@link sozi.animation.Animator.onStep}.
         * If the animation duration has elapsed, {@link sozi.animation.Animator.onDone} is called.&lt;/p&gt;
         *
         * @param {Number} currentTime The current time
         */
        step: function (currentTime) {
            var elapsedTime = currentTime - this.initialTime;
            if (elapsedTime &gt;= this.durationMs) {
                this.stop();
                this.onStep(1);
                this.onDone();
            } else {
                this.onStep(elapsedTime / this.durationMs);
            }
        },
        
        /**
         * This method is called automatically on each animation step.
         *
         * &lt;p&gt;The default implementation does nothing. Override it in a
         * subclass or instance to provide your own implementation.&lt;p&gt;
         *
         * @param {Number} progress The elapsed fraction of the total duration (comprised between 0 and 1 included).
         */
        onStep: function (progress) {
            // Do nothing
        },
        
        /**
         * This method is called automatically when the animation ends.
         *
         * &lt;p&gt;The default implementation does nothing. Override it in a
         * subclass or instance to provide your own implementation.&lt;p&gt;
         */
        onDone: function () {
            // Do nothing
        }
    });

    /*
     * The acceleration profiles.
     *
     * Each profile is a function that operates in the interval [0, 1]
     * and produces a result in the same interval.
     *
     * These functions are meant to be called in {@link sozi.animation.Animator.onStep}
     * to transform the progress indicator according to the desired
     * acceleration effect.
     */
    exports.profiles = {
        &quot;linear&quot;: function (x) {
            return x;
        },

        &quot;accelerate&quot;: function (x) {
            return Math.pow(x, 3);
        },

        &quot;strong-accelerate&quot;: function (x) {
            return Math.pow(x, 5);
        },

        &quot;decelerate&quot;: function (x) {
            return 1 - Math.pow(1 - x, 3);
        },

        &quot;strong-decelerate&quot;: function (x) {
            return 1 - Math.pow(1 - x, 5);
        },

        &quot;accelerate-decelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = Math.pow(2 * xs, 3) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;strong-accelerate-decelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = Math.pow(2 * xs, 5) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;decelerate-accelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = (1 - Math.pow(1 - 2 * xs, 2)) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;strong-decelerate-accelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = (1 - Math.pow(1 - 2 * xs, 3)) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },
        
        &quot;immediate-beginning&quot;: function (x) {
            return 1;
        },
        
        &quot;immediate-end&quot;: function (x) {
            return x === 1 ? 1 : 0;
        },
        
        &quot;immediate-middle&quot;: function (x) {
            return x &gt;= 0.5 ? 1 : 0;
        }
    };
});


/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.display
 * @namespace Display management.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.display&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // Constant: the Sozi namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

    var XLINK_NS = &quot;http://www.w3.org/1999/xlink&quot;;
    
    // The global document object
    var document = window.document;
    
    // The initial bounding box of the whole document,
    // assigned in onDocumentReady()
    var initialBBox;
    
    var lastWindowWidth;
    var lastWindowHeight;
    
    exports.viewPorts = {};
    
    var primaryViewport;

    /**
     * @depend proto.js
     */
    exports.CameraState = sozi.proto.Object.subtype({
        construct : function () {
            // Center coordinates
            this.cx = this.cy = 0;
            
            // Dimensions
            this.width = this.height = 1;
            
            // Rotation angle, in degrees
            this.angle = 0;
            
            // Clipping
            this.clipped = true;
            
            // Transition zoom
            this.transitionZoomPercent = 0;
            
            // Transition profile
            this.transitionProfile = sozi.animation.profiles.linear;
            
            // Transition path
            this.transitionPath = null;
        },

        setCenter: function (cx, cy) {
            this.cx = cx;
            this.cy = cy;
            return this;
        },
        
        setSize: function (width, height) {
            this.width = width;
            this.height = height;
            return this;
        },
        
        setClipped: function (clipped) {
            this.clipped = clipped;
            return this;
        },
        
        /*
         * Set the angle of the current camera state.
         * The angle of the current state is normalized
         * in the interval [-180 ; 180]
         */
        setAngle: function (angle) {
            this.angle = (angle + 180) % 360 - 180;
            return this;
        },
        
        setRawAngle: function (angle) {
            this.angle = angle;
            return this;
        },
        
        setTransitionZoomPercent: function (zoomPercent) {
            this.transitionZoomPercent = zoomPercent;
            return this;
        },
        
        setTransitionProfile: function (profile) {
            this.transitionProfile = profile;
            return this;
        },
        
        setTransitionPath: function (svgPath) {
            this.transitionPath = svgPath;
            return this;
        },
        
        /*
         * Set the current camera's properties to the given SVG element.
         *
         * If the element is a rectangle, the properties of the frames are based
         * on the geometrical properties of the rectangle.
         * Otherwise, the properties of the frame are based on the bounding box
         * of the given element.
         *
         * Parameters:
         *    - svgElement: an element from the SVG DOM
         */
        setAtElement: function (svgElement) {
            // Read the raw bounding box of the given SVG element
            var x, y, w, h;
            if (svgElement.nodeName === &quot;rect&quot;) {
                x = svgElement.x.baseVal.value;
                y = svgElement.y.baseVal.value;
                w = svgElement.width.baseVal.value;
                h = svgElement.height.baseVal.value;
            } else {
                var b = svgElement.getBBox();
                x = b.x;
                y = b.y;
                w = b.width;
                h = b.height;
            }

            // Compute the raw coordinates of the center
            // of the given SVG element
            var c = document.documentElement.createSVGPoint();
            c.x = x + w / 2;
            c.y = y + h / 2;
            
            // Compute the coordinates of the center of the given SVG element
            // after its current transformation
            var matrix = svgElement.getCTM();
            c = c.matrixTransform(matrix);

            // Compute the scaling factor applied to the given SVG element
            var scale = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);
            
            // Update the camera to match the bounding box information of the
            // given SVG element after its current transformation
            return this.setCenter(c.x, c.y)
                .setSize(w * scale, h * scale)
                .setAngle(Math.atan2(matrix.b, matrix.a) * 180 / Math.PI);
        },

        setAtState: function (other) {
            return this.setCenter(other.cx, other.cy)
                .setSize(other.width, other.height)
                .setAngle(other.angle)
                .setClipped(other.clipped)
                .setTransitionZoomPercent(other.transitionZoomPercent)
                .setTransitionProfile(other.transitionProfile)
                .setTransitionPath(other.transitionPath);
        },
        
        interpolatableAttributes: [&quot;width&quot;, &quot;height&quot;, &quot;angle&quot;],
        
        interpolate: function (initialState, finalState, ratio, useTransitionPath, reverseTransitionPath) {
            var remaining = 1 - ratio;
            for (var i = 0; i &lt; this.interpolatableAttributes.length; i += 1) {
                var attr = this.interpolatableAttributes[i];
                this[attr] = finalState[attr] * ratio + initialState[attr] * remaining;
            }

            var svgPath = reverseTransitionPath ? initialState.transitionPath : finalState.transitionPath;
            if (useTransitionPath &amp;&amp; svgPath) {
                var pathLength = svgPath.getTotalLength();
                
                if (reverseTransitionPath) {
                    var startPoint = svgPath.getPointAtLength(pathLength);
                    var endPoint = svgPath.getPointAtLength(0);
                    var currentPoint = svgPath.getPointAtLength(pathLength * remaining);
                }
                else {
                    var startPoint = svgPath.getPointAtLength(0);
                    var endPoint = svgPath.getPointAtLength(pathLength);
                    var currentPoint = svgPath.getPointAtLength(pathLength * ratio);
                }
 
                this.cx = currentPoint.x + (finalState.cx - endPoint.x) * ratio + (initialState.cx - startPoint.x) * remaining;
                this.cy = currentPoint.y + (finalState.cy - endPoint.y) * ratio + (initialState.cy - startPoint.y) * remaining;
            }
            else {
                this.cx = finalState.cx * ratio + initialState.cx * remaining;
                this.cy = finalState.cy * ratio + initialState.cy * remaining;
            }
        }
    });
    
    exports.Camera = exports.CameraState.subtype({
        construct: function (viewPort, idLayer) {
            exports.CameraState.construct.call(this);
            
            this.viewPort = viewPort;
            
            // Clipping rectangle
            this.svgClipRect = document.createElementNS(SVG_NS, &quot;rect&quot;);
        
            // Clipping path
            var svgClipPath = document.createElementNS(SVG_NS, &quot;clipPath&quot;);
            svgClipPath.setAttribute(&quot;id&quot;, &quot;sozi-clip-path-&quot; + viewPort.id + &quot;-&quot; + idLayer);
            svgClipPath.appendChild(this.svgClipRect);
            viewPort.svgGroup.appendChild(svgClipPath);

            // The group that will support the clipping operation
            var svgClippedGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
            svgClippedGroup.setAttribute(&quot;clip-path&quot;, &quot;url(#sozi-clip-path-&quot; + viewPort.id + &quot;-&quot; + idLayer + &quot;)&quot;);
            viewPort.svgGroup.appendChild(svgClippedGroup);
            
            if (viewPort.isPrimary) {
                // This group will support transformations
                // we keep the layer group clean since it can be referenced
                // from &lt;use&gt; elements
                this.svgLayer = document.createElementNS(SVG_NS, &quot;g&quot;);
                this.svgLayer.appendChild(document.getElementById(idLayer));
            }
            else {
                // A &lt;use&gt; element referencing the target layer
                this.svgLayer = document.createElementNS(SVG_NS, &quot;use&quot;);
                this.svgLayer.setAttributeNS(XLINK_NS, &quot;href&quot;, &quot;#&quot; + idLayer);
            }
            svgClippedGroup.appendChild(this.svgLayer);
        },
        
        setAtState: function (other) {
            return exports.CameraState.setAtState.call(this, other).update();
        },
        
        getScale: function () {
            return Math.min(this.viewPort.width / this.width, this.viewPort.height / this.height);
        },
        
        rotate: function (angle) {
            return this.setAngle(this.angle + angle).update();
        },

        zoom: function (factor, x, y) {
            return this.setSize(this.width / factor, this.height / factor)
                       .drag(
                            (1 - factor) * (x - this.viewPort.width / 2),
                            (1 - factor) * (y - this.viewPort.height / 2)
                        );
        },
        
        drag: function (deltaX, deltaY) {
            var scale = this.getScale();
            var angleRad = this.angle * Math.PI / 180;
            var si = Math.sin(angleRad);
            var co = Math.cos(angleRad);
            return this.setCenter(
                    this.cx - (deltaX * co - deltaY * si) / scale,
                    this.cy - (deltaX * si + deltaY * co) / scale
                ).setClipped(false).update();
        },

        update: function () {
            var scale = this.getScale();
                    
            // Compute the size and location of the frame on the screen
            var width = this.width  * scale;
            var height = this.height * scale;
            var x = (this.viewPort.width - width) / 2;
            var y = (this.viewPort.height - height) / 2;

            // Adjust the location and size of the clipping rectangle and the frame rectangle
            this.svgClipRect.setAttribute(&quot;x&quot;, this.clipped ? x : 0);
            this.svgClipRect.setAttribute(&quot;y&quot;, this.clipped ? y : 0);
            this.svgClipRect.setAttribute(&quot;width&quot;,  this.clipped ? width  : this.viewPort.width);
            this.svgClipRect.setAttribute(&quot;height&quot;, this.clipped ? height : this.viewPort.height);
                    
            // Compute and apply the geometrical transformation to the layer group
            var translateX = -this.cx + this.width / 2  + x / scale;
            var translateY = -this.cy + this.height / 2 + y / scale;

            this.svgLayer.setAttribute(&quot;transform&quot;,
                &quot;scale(&quot; + scale + &quot;)&quot; +
                &quot;translate(&quot; + translateX + &quot;,&quot; + translateY + &quot;)&quot; +
                &quot;rotate(&quot; + (-this.angle) + ',' + this.cx + &quot;,&quot; + this.cy + &quot;)&quot;
            );
            
            return this;
        }
    });
    
    /**
     * @depend proto.js
     */
    exports.ViewPort = sozi.proto.Object.subtype({
        construct: function (id, idLayerList, primary) {
            this.id = id;
            exports.viewPorts[id] = this;
            
            this.isPrimary = !!primary;
            
            if (this.isPrimary) {
                if (primaryViewport) {
                    throw &quot;Failed to create a primary viewport. A primary viewport already exists.&quot;;
                }
                else {
                    primaryViewport = this;
                }
            }
            
            // TODO add a clip path for the viewport
            this.svgGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
            this.svgGroup.setAttribute(&quot;class&quot;, &quot;sozi-viewport&quot;);
            this.svgGroup.setAttribute(&quot;id&quot;, &quot;sozi-viewport-&quot; + id);
            document.documentElement.appendChild(this.svgGroup);
            
            this.setLocation(0, 0).setSize(window.innerWidth, window.innerHeight);
            
            // Create a camera for each layer
            this.cameras = {};
            idLayerList.forEach(function (idLayer) {
                this.cameras[idLayer] = exports.Camera.instance(this, idLayer);
            }, this);
        },
        
        setSize: function (width, height) {
            this.width = width;
            this.height = height;
            return this;
        },
        
        setLocation: function (x, y) {
            this.x = x;
            this.y = y;
            return this;
        },

        contains: function (x, y) {
            return x &gt;= this.x &amp;&amp; x &lt; this.x + this.width &amp;&amp;
                   y &gt;= this.y &amp;&amp; y &lt; this.y + this.height;
        },
        
        /*
         * Returns the geometrical properties of the SVG document
         *
         * Returns:
         *    - The default size, translation and rotation for the document's bounding box
         */
        getDocumentState: function () {
            // This object defines the bounding box of the whole document
            var camera = exports.CameraState.instance()
                .setCenter(initialBBox.x + initialBBox.width / 2,
                           initialBBox.y + initialBBox.height / 2)
                .setSize(initialBBox.width, initialBBox.height)
                .setClipped(false);
            
            // Copy the document's bounding box to all layers
            var result = {};
            for (var idLayer in this.cameras) {
                result[idLayer] = camera;
            }
            return result;
        },

        /*
         * Apply geometrical transformations to the image according to the current
         * geometrical attributes of this Display.
         *
         * This method is called automatically when the window is resized.
         */
        update: function () {
            this.svgGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + this.x + &quot;,&quot; + this.y + &quot;)&quot;);
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].update();
            }
            return this;
        },

        /*
         * Transform the SVG document to show the given frame.
         *
         * Parameters:
         *    - frame: the frame to show
         */
        showFrame: function (frame) {
            for (var idLayer in frame.states) {
                this.cameras[idLayer].setAtState(frame.states[idLayer]);
            }
            return this;
        },

        /*
         * Apply an additional translation to the SVG document based on onscreen coordinates.
         *
         * Parameters:
         *    - deltaX: the horizontal displacement, in pixels
         *    - deltaY: the vertical displacement, in pixels
         */
        drag: function (deltaX, deltaY) {
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].drag(deltaX, deltaY);
            }
            return this;
        },

        /*
         * Zooms the display with the given factor.
         *
         * The zoom is centered around (x, y) with respect to the center of the display area.
         */
        zoom: function (factor, x, y) {
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].zoom(factor, x, y);
            }
            return this;
        },

        /*
         * Rotate the display with the given angle.
         *
         * The rotation is centered around the center of the display area.
         */
        rotate: function (angle) {
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].rotate(angle);
            }
            return this;
        },
        
        /**
         * The default handler for window resize events.
         *
         * @param widthRatio The horizontal resize ratio
         * @param heightRatio The vertical resize ratio
         */
        onWindowResize: function (widthRatio, heightRatio) {
            this.setLocation(this.x * widthRatio, this.y * heightRatio)
                .setSize(this.width * widthRatio, this.height * heightRatio)
                .update();
        }
    });
    
    /*
     * Initializes the current Display.
     *
     * This method prepares the DOM representation of the current SVG document.
     * All the image is embedded into a global &quot;g&quot; element on which transformations will be applied.
     * A clipping rectangle is added.
     *
     * This method must be called when the document is ready to be manipulated.
     */
    function onDocumentReady() {
        var svgRoot = document.documentElement; // TODO check SVG tag
        
        // Save the initial bounding box of the document
        // and force its dimensions to the browser window
        initialBBox = svgRoot.getBBox();
        lastWindowWidth = window.innerWidth;
        lastWindowHeight = window.innerHeight;
        svgRoot.setAttribute(&quot;width&quot;, lastWindowWidth);
        svgRoot.setAttribute(&quot;height&quot;, lastWindowHeight);
        
        sozi.events.fire(&quot;sozi.display.ready&quot;);
    }

    /*
     * Resizes the SVG document to fit the browser window.
     *
     * This method calls onWindowResize on all registered viewports.
     */
    function resize() {
        var svgRoot = document.documentElement;
        svgRoot.setAttribute(&quot;width&quot;, window.innerWidth);
        svgRoot.setAttribute(&quot;height&quot;, window.innerHeight);
        
        for (var vp in exports.viewPorts) {
            exports.viewPorts[vp].onWindowResize(window.innerWidth / lastWindowWidth, window.innerHeight / lastWindowHeight);
        }

        lastWindowWidth = window.innerWidth;
        lastWindowHeight = window.innerHeight;
    }
    
    sozi.events.listen(&quot;sozi.document.ready&quot;, onDocumentReady); // @depend events.js
    window.addEventListener(&quot;resize&quot;, resize, false);
});

/*
* Sozi - A presentation tool using the SVG standard
*
* Copyright (C) 2010-2013 Guillaume Savaton
*
* This program is dual licensed under the terms of the MIT license
* or the GNU General Public License (GPL) version 3.
* A copy of both licenses is provided in the doc/ folder of the
* official release of Sozi.
*
* See http://sozi.baierouge.fr/wiki/en:license for details.
*/

/**
 * @name sozi.document
 * @namespace Document analysis.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.document&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
    var document = window.document;
    
    // Constant: the Sozi namespace
    var SOZI_NS = &quot;http://sozi.baierouge.fr&quot;;
    
    // Constant: the default frame properties, if missing in the SVG document
    var DEFAULTS = {
        &quot;title&quot;: &quot;Untitled&quot;,
        &quot;sequence&quot;: &quot;0&quot;,
        &quot;hide&quot;: &quot;true&quot;,
        &quot;clip&quot;: &quot;true&quot;,
        &quot;show-in-frame-list&quot;: &quot;true&quot;,
        &quot;timeout-enable&quot;: &quot;false&quot;,
        &quot;timeout-ms&quot;: &quot;5000&quot;,
        &quot;transition-duration-ms&quot;: &quot;1000&quot;,
        &quot;transition-zoom-percent&quot;: &quot;0&quot;,
        &quot;transition-profile&quot;: &quot;linear&quot;,
        &quot;transition-path-hide&quot;: &quot;true&quot;
    };

    var DRAWABLE_TAGS = [ &quot;g&quot;, &quot;image&quot;, &quot;path&quot;, &quot;rect&quot;, &quot;circle&quot;,
        &quot;ellipse&quot;, &quot;line&quot;, &quot;polyline&quot;, &quot;polygon&quot;, &quot;text&quot;, &quot;clippath&quot; ];

    // The definitions of all valid frames in the current document
    exports.frames = [];
    
    // The list of layer ids managed by Sozi
    exports.idLayerList = [];
    
    /*
    * Returns the value of an attribute of a given Sozi SVG element.
    *
    * If the attribute is empty or does not exist,
    * then a default value is returned (See DEFAULTS).
    */
    function readAttribute(soziElement, attr) {
        return soziElement.getAttributeNS(SOZI_NS, attr) || DEFAULTS[attr];
    }

    function readStateForLayer(frame, idLayer, soziElement) {
        var state = frame.states[idLayer] =
            frame.states[idLayer] || sozi.display.CameraState.instance();
        
        if (typeof state.transitionZoomPercent === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-zoom-percent&quot;)) {
            state.setTransitionZoomPercent(parseInt(readAttribute(soziElement, &quot;transition-zoom-percent&quot;), 10));
        }

        if (typeof state.transitionProfile === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-profile&quot;)) {
            state.setTransitionProfile(sozi.animation.profiles[readAttribute(soziElement, &quot;transition-profile&quot;)]);
        }
        
        if (typeof state.transitionPath === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-path&quot;)) {
            var svgPath = document.getElementById(soziElement.getAttributeNS(SOZI_NS, &quot;transition-path&quot;));
            if (svgPath &amp;&amp; svgPath.nodeName === &quot;path&quot;) {
                state.setTransitionPath(svgPath);
                if (readAttribute(soziElement, &quot;transition-path-hide&quot;) === &quot;true&quot;) {
                    svgPath.style.visibility = &quot;hidden&quot;;
                }
            }
        }
        
        if (soziElement.hasAttributeNS(SOZI_NS, &quot;refid&quot;)) {
            var svgElement = document.getElementById(soziElement.getAttributeNS(SOZI_NS, &quot;refid&quot;));
            if (svgElement) {
                state.setAtElement(svgElement);
                if (readAttribute(soziElement, &quot;hide&quot;) === &quot;true&quot;) {
                    svgElement.style.visibility = &quot;hidden&quot;;
                }
            }
        }
            
        if (soziElement.hasAttributeNS(SOZI_NS, &quot;clip&quot;)) {
            state.setClipped(readAttribute(soziElement, &quot;clip&quot;) === &quot;true&quot;);
        }
    }
    
    /*
    * Builds the list of frames from the current document.
    *
    * This method collects all elements with tag &quot;sozi:frame&quot; and
    * retrieves their geometrical and animation attributes.
    * SVG elements that should be hidden during the presentation are hidden.
    *
    * The resulting list is available in frames, sorted by frame indices.
    */
    function readFrames() {
        // Collect all group ids referenced in &lt;layer&gt; elements
        var idLayerRefList = [];
        var soziLayerList = document.getElementsByTagNameNS(SOZI_NS, &quot;layer&quot;);
        for (var i = 0; i &lt; soziLayerList.length; i += 1) {
            var idLayer = soziLayerList[i].getAttributeNS(SOZI_NS, &quot;group&quot;);
            if (idLayer &amp;&amp; idLayerRefList.indexOf(idLayer) === -1) {
                idLayerRefList.push(idLayer);
            }
        }

        // Reorganize the document, grouping objects that do not belong
        // to a group referenced in &lt;layer&gt; elements
        var svgRoot = document.documentElement;
        var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

        // Create the first wrapper group
        var svgWrapper = document.createElementNS(SVG_NS, &quot;g&quot;);

        // For each child of the root SVG element
        var svgElementList = Array.prototype.slice.call(svgRoot.childNodes);
        svgElementList.forEach(function (svgElement, index) {
            if (!svgElement.getAttribute) {
                // Remove text elements
                svgRoot.removeChild(svgElement);
            }
            else if (idLayerRefList.indexOf(svgElement.getAttribute(&quot;id&quot;)) !== -1) {
                // If the current element is a referenced layer ...
                if (svgWrapper.firstChild) {
                    // ... and if there were other non-referenced elements before it,
                    // append the wrapper group to the &lt;defs&gt; element
                    svgWrapper.setAttribute(&quot;id&quot;, &quot;sozi-wrapper-&quot; + index);
                    exports.idLayerList.push(&quot;sozi-wrapper-&quot; + index);
                    svgRoot.insertBefore(svgWrapper, svgElement);
                    
                    // Prepare a new wrapper element
                    svgWrapper = document.createElementNS(SVG_NS, &quot;g&quot;);
                }
                
                // ... append the current element to the &lt;defs&gt; element
                exports.idLayerList.push(svgElement.getAttribute(&quot;id&quot;));
            }
            else if (DRAWABLE_TAGS.indexOf(svgElement.localName.toLowerCase()) !== -1) {
                // If the current element is not a referenced layer
                // and is drawable, move it to the current wrapper element
                svgRoot.removeChild(svgElement);
                svgWrapper.appendChild(svgElement);
            }
        });

        // Append last wrapper if needed
        if (svgWrapper.firstChild) {
            svgWrapper.setAttribute(&quot;id&quot;, &quot;sozi-wrapper-&quot; + svgElementList.length);
            exports.idLayerList.push(&quot;sozi-wrapper-&quot; + svgElementList.length);
            svgRoot.appendChild(svgWrapper);
        }

        
        // Analyze &lt;frame&gt; elements sorted by sequence number
        var soziFrameList = Array.prototype.slice.call(document.getElementsByTagNameNS(SOZI_NS, &quot;frame&quot;));
        soziFrameList.sort(
            function (a, b) {
                var seqA = parseInt(readAttribute(a, &quot;sequence&quot;), 10);
                var seqB = parseInt(readAttribute(b, &quot;sequence&quot;), 10)
                return seqA - seqB;
            }
        );
        
        soziFrameList.forEach(function (soziFrame, indexFrame) {
            var newFrame = {
                id: soziFrame.getAttribute(&quot;id&quot;),
                title: readAttribute(soziFrame, &quot;title&quot;),
                showInFrameList: readAttribute(soziFrame, &quot;show-in-frame-list&quot;) === &quot;true&quot;,
                sequence: parseInt(readAttribute(soziFrame, &quot;sequence&quot;), 10),
                timeoutEnable: readAttribute(soziFrame, &quot;timeout-enable&quot;) === &quot;true&quot;,
                timeoutMs: parseInt(readAttribute(soziFrame, &quot;timeout-ms&quot;), 10),
                transitionDurationMs: parseInt(readAttribute(soziFrame, &quot;transition-duration-ms&quot;), 10),
                states: {}
            };

            // Get the default properties for all layers, either from
            // the current &lt;frame&gt; element or from the corresponding
            // layer in the previous frame.
            // Those properties can later be overriden by &lt;layer&gt; elements
            exports.idLayerList.forEach(function (idLayer) {
                if (indexFrame === 0 || idLayer.search(&quot;sozi-wrapper-[0-9]+&quot;) !== -1) {
                    // In the first frame, or in wrapper layers,
                    // read layer attributes from the &lt;frame&gt; element
                    readStateForLayer(newFrame, idLayer, soziFrame);
                }
                else {
                    // After the first frame, in referenced layers,
                    // copy attributes from the corresponding layer in the previous frame
                    var currentState = newFrame.states[idLayer] = sozi.display.CameraState.instance();
                    var previousState = exports.frames[exports.frames.length - 1].states[idLayer];
                    currentState.setAtState(previousState);
                }
            });

            // Collect and analyze &lt;layer&gt; elements in the current &lt;frame&gt; element
            var soziLayerList = Array.prototype.slice.call(soziFrame.getElementsByTagNameNS(SOZI_NS, &quot;layer&quot;));
            soziLayerList.forEach(function (soziLayer) {
                var idLayer = soziLayer.getAttributeNS(SOZI_NS, &quot;group&quot;);
                if (idLayer &amp;&amp; exports.idLayerList.indexOf(idLayer) !== -1) {
                    readStateForLayer(newFrame, idLayer, soziLayer);
                }
            });
            
            // If the &lt;frame&gt; element has at least one valid layer,
            // add it to the frame list
            for (var idLayer in newFrame.states) {
                if (newFrame.states.hasOwnProperty(idLayer)) {
                    exports.frames.push(newFrame);
                    break;
                }
            }
        });
    }

    /**
     * Return the frame with the given id.
     *
     * @return The index of the frame with the given id. -1 if not found.
     */
    exports.getFrameIndexForId = function (idFrame) {
        for (var indexFrame = 0; indexFrame &lt; exports.frames.length; indexFrame += 1) {
            if (exports.frames[indexFrame].id === idFrame) {
                return indexFrame;
            }
        }
        return - 1;
    };
    
    /*
     * Event handler: document load.
     *
     * This function reads the frames from the document and fires
     * the &quot;documentready&quot; event.
     *
     * @depend events.js
     */
    function onLoad() {
        document.documentElement.removeAttribute(&quot;viewBox&quot;);
        readFrames();
        sozi.events.fire(&quot;sozi.document.ready&quot;);
    }

    window.addEventListener(&quot;load&quot;, onLoad, false);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.framelist
 * @namespace Show the frame list.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.framelist&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
	var document = window.document;
	
    // Constant: the margin around the text of the frame list
    var MARGIN = 5;
    
	// The SVG group that will contain the frame list
    var svgTocGroup;
    
    // The SVG group that will contain the frame titles
    var svgTitlesGroup;
    
    // The current height of the frame list,
    // computed during the initialization
    var tocHeight = 0;
    
    // The X coordinate of the frame list in its hidden state
    var translateXHidden;
    
    // The X coordinate of the frame list when it is completely visible
    var translateXVisible;
    
    // The initial X coordinate of the frame list before starting an animation.
    // This variable is set before showing/hiding the frame list.
    var translateXStart;
    
    // The final X coordinate of the frame list for the starting animation.
    // This variable is set before showing/hiding the frame list.
    var translateXEnd;
    
    // The current X coordinate of the frame list for the running animation.
    // This variable is updated on each animation step.
    var translateX;
    
    // The animator object that will manage animations of the frame list
    var animator;
    
    // Constant: the duration of the showing/hiding animation, in milliseconds
    var ANIMATION_TIME_MS = 300;
    
    // Constant: the acceleration profile of the showing/hiding animation
    var ANIMATION_PROFILE = &quot;decelerate&quot;;
    
    // Constant: the SVG namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

	function onMouseOut(evt) {
        var rel = evt.relatedTarget,
            svgRoot = document.documentElement;
        while (rel &amp;&amp; rel !== svgTocGroup &amp;&amp; rel !== svgRoot) {
            rel = rel.parentNode;
        }
        if (rel !== svgTocGroup) {
            exports.hide();
            sozi.player.restart();
            evt.stopPropagation();
        }
    }

	function onClickArrowUp(evt) {
        var ty = svgTitlesGroup.getCTM().f;
        if (ty &lt;= -window.innerHeight / 2) {
            ty += window.innerHeight / 2;
        } else if (ty &lt; 0) {
            ty = 0;
        }
        svgTitlesGroup.setAttribute(&quot;transform&quot;, &quot;translate(0,&quot; + ty + &quot;)&quot;);
        evt.stopPropagation();
	}

	function onClickArrowDown(evt) {
        var ty = svgTitlesGroup.getCTM().f;
        if (ty + tocHeight &gt;= window.innerHeight * 3 / 2) {
            ty -= window.innerHeight / 2;
        } else if (ty + tocHeight &gt; window.innerHeight + 2 * MARGIN) {
            ty = window.innerHeight - tocHeight - 4 * MARGIN;
        }
        svgTitlesGroup.setAttribute(&quot;transform&quot;, &quot;translate(0,&quot; + ty + &quot;)&quot;);
        evt.stopPropagation();
    }

    /*
     * Create a function that responds to clicks on frame list entries.
     */
    function makeClickHandler(index) {
        return function (evt) {
            sozi.player.previewFrame(index);
            evt.stopPropagation();
        };
    }
    
    /*
     * The default event handler, to prevent event propagation
     * through the frame list.
     */
    function defaultEventHandler(evt) {
	    evt.stopPropagation();
    }
    
    /*
     * Adds a table of contents to the document.
     *
     * The table of contents is a rectangular region with the list of frame titles.
     * Clicking on a title moves the presentation to the corresponding frame.
     *
     * The table of contents is hidden by default.
     */
    function onPlayerReady() {
        svgTocGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgTocGroup.setAttribute(&quot;id&quot;, &quot;sozi-toc&quot;);
        document.documentElement.appendChild(svgTocGroup);

        svgTitlesGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgTocGroup.appendChild(svgTitlesGroup);
    
        // The background rectangle of the frame list
        var tocBackground = document.createElementNS(SVG_NS, &quot;rect&quot;);
        tocBackground.setAttribute(&quot;id&quot;, &quot;sozi-toc-background&quot;);
        tocBackground.setAttribute(&quot;x&quot;, MARGIN);
        tocBackground.setAttribute(&quot;y&quot;, MARGIN);
        tocBackground.setAttribute(&quot;rx&quot;, MARGIN);
        tocBackground.setAttribute(&quot;ry&quot;, MARGIN);
        tocBackground.addEventListener(&quot;click&quot;, defaultEventHandler, false);
        tocBackground.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        tocBackground.addEventListener(&quot;mouseout&quot;, onMouseOut, false);
        svgTitlesGroup.appendChild(tocBackground);

        var tocWidth = 0;
        sozi.document.frames.forEach(function (frame, frameIndex) {
            if (frame.showInFrameList) {
                var text = document.createElementNS(SVG_NS, &quot;text&quot;);
                text.appendChild(document.createTextNode(frame.title));
                text.setAttribute(&quot;id&quot;, &quot;sozi-toc-&quot; + frame.id);
                svgTitlesGroup.appendChild(text);
    
                if (frameIndex === sozi.player.currentFrameIndex) {
                    text.setAttribute(&quot;class&quot;, &quot;sozi-toc-current&quot;);
                }
                         
                var textWidth = text.getBBox().width;
                tocHeight += text.getBBox().height;
                if (textWidth &gt; tocWidth) {
                    tocWidth = textWidth;
                }
    
                text.setAttribute(&quot;x&quot;, 2 * MARGIN);
                text.setAttribute(&quot;y&quot;, tocHeight + MARGIN);
                text.addEventListener(&quot;click&quot;, makeClickHandler(frameIndex), false);
                text.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
            }
        });

        // The &quot;up&quot; button
        var tocUp = document.createElementNS(SVG_NS, &quot;path&quot;);
        tocUp.setAttribute(&quot;class&quot;, &quot;sozi-toc-arrow&quot;);
        tocUp.setAttribute(&quot;d&quot;, &quot;M&quot; + (tocWidth + 3 * MARGIN) + &quot;,&quot; + (5 * MARGIN) +
                           &quot; l&quot; + (4 * MARGIN) + &quot;,0&quot; +
                           &quot; l-&quot; + (2 * MARGIN) + &quot;,-&quot; + (3 * MARGIN) +
                           &quot; z&quot;);
        tocUp.addEventListener(&quot;click&quot;, onClickArrowUp, false);
        tocUp.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        svgTocGroup.appendChild(tocUp);

        // The &quot;down&quot; button
        var tocDown = document.createElementNS(SVG_NS, &quot;path&quot;);
        tocDown.setAttribute(&quot;class&quot;, &quot;sozi-toc-arrow&quot;);
        tocDown.setAttribute(&quot;d&quot;, &quot;M&quot; + (tocWidth + 3 * MARGIN) + &quot;,&quot; + (7 * MARGIN) +
                             &quot; l&quot; + (4 * MARGIN) + &quot;,0&quot; +
                             &quot; l-&quot; + (2 * MARGIN) + &quot;,&quot; + (3 * MARGIN) +
                             &quot; z&quot;);
        tocDown.addEventListener(&quot;click&quot;, onClickArrowDown, false);
        tocDown.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        svgTocGroup.appendChild(tocDown);

        tocBackground.setAttribute(&quot;width&quot;, tocWidth + 7 * MARGIN);
        tocBackground.setAttribute(&quot;height&quot;, tocHeight + 2 * MARGIN);
        
        translateXHidden = -tocWidth - 9 * MARGIN;
        translateXVisible = 0;
        translateX = translateXEnd = translateXHidden;
        
        svgTocGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + translateXHidden + &quot;,0)&quot;);
        animator = sozi.animation.Animator.instance().augment({
            onStep: function (progress) {
                var profileProgress = sozi.animation.profiles[ANIMATION_PROFILE](progress),
                    remaining = 1 - profileProgress;
                translateX = translateXEnd * profileProgress + translateXStart * remaining;
                svgTocGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + translateX + &quot;,0)&quot;);
            }
        });
    }

	/*
	 * Highlight the current frame title in the frame list.
	 *
	 * This handler is called on each frame change,
	 * even when the frame list is hidden.
	 */
    function onFrameChange(index) {
        var currentElementList = Array.prototype.slice.call(document.getElementsByClassName(&quot;sozi-toc-current&quot;));
        currentElementList.forEach(function (svgElement) {
            svgElement.removeAttribute(&quot;class&quot;);
        });

        var frame = sozi.document.frames[index];
        if (frame.showInFrameList) {
            document.getElementById(&quot;sozi-toc-&quot; + frame.id).setAttribute(&quot;class&quot;, &quot;sozi-toc-current&quot;);
        }
    }
    
    /*
     * Makes the table of contents visible.
     */
    exports.show = function () {
        // Bring frame list to front
        document.documentElement.appendChild(svgTocGroup);
        
        translateXStart = translateX;
        translateXEnd = translateXVisible;
        animator.start(ANIMATION_TIME_MS); // FIXME depends on current elapsed time
    };

    /*
     * Makes the table of contents invisible.
     */
    exports.hide = function () {
        translateXStart = translateX;
        translateXEnd = translateXHidden;
        animator.start(ANIMATION_TIME_MS); // FIXME depends on current elapsed time
    };

    /*
     * Returns true if the table of contents is visible, false otherwise.
     */
    exports.isVisible = function () {
        return translateXEnd === translateXVisible;
    };

    // @depend events.js
	sozi.events.listen(&quot;sozi.player.ready&quot;, onPlayerReady);
	sozi.events.listen(&quot;sozi.player.cleanup&quot;, exports.hide);
	sozi.events.listen(&quot;sozi.player.framechange&quot;, onFrameChange);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.framenumber
 * @namespace Show the frame number.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.framenumber&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
    var document = window.document;
    
    // The SVG group containing the frame number
    var svgGroup;
    
    // The SVG text element and its text node containing the frame number
    var svgText, svgTextNode;
    
    // The SVG circle enclosing the frame number
    var svgCircle;
    
    // Constant: the SVG namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;
    
    function adjust() {
        var textBBox = svgText.getBBox(),
            d = Math.max(textBBox.width, textBBox.height) * 0.75,
            t = d * 1.25;
        svgCircle.setAttribute(&quot;r&quot;, d);
        svgGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + t + &quot;,&quot; + t + &quot;)&quot;);
    }
    
    function onPlayerReady() {
        svgGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgText = document.createElementNS(SVG_NS, &quot;text&quot;);
        svgCircle = document.createElementNS(SVG_NS, &quot;circle&quot;);
        
        svgGroup.setAttribute(&quot;id&quot;, &quot;sozi-framenumber&quot;);

        svgCircle.setAttribute(&quot;cx&quot;, 0);
        svgCircle.setAttribute(&quot;cy&quot;, 0);
        svgGroup.appendChild(svgCircle);
        
        svgTextNode = document.createTextNode(sozi.player.currentFrameIndex + 1);
        svgText.setAttribute(&quot;text-anchor&quot;, &quot;middle&quot;);
        svgText.setAttribute(&quot;dominant-baseline&quot;, &quot;central&quot;);
        svgText.setAttribute(&quot;x&quot;, 0);
        svgText.setAttribute(&quot;y&quot;, 0);
        svgText.appendChild(svgTextNode);
        svgGroup.appendChild(svgText);
        
        document.documentElement.appendChild(svgGroup);
        
        adjust();
    }

    function onFrameChange(index) {
        svgTextNode.nodeValue = index + 1;
    }
    
    // @depend events.js
	sozi.events.listen(&quot;sozi.player.ready&quot;, onPlayerReady);
	sozi.events.listen(&quot;sozi.player.framechange&quot;, onFrameChange);
});

/*
* Sozi - A presentation tool using the SVG standard
*
* Copyright (C) 2010-2013 Guillaume Savaton
*
* This program is dual licensed under the terms of the MIT license
* or the GNU General Public License (GPL) version 3.
* A copy of both licenses is provided in the doc/ folder of the
* official release of Sozi.
*
* See http://sozi.baierouge.fr/wiki/en:license for details.
*/

/**
 * @name sozi.links
 * @namespace Links fix for Webkit.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.links&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;
    var XLINK_NS = &quot;http://www.w3.org/1999/xlink&quot;;
    
    function getClickHandler(index) {
        return function (evt) {
            sozi.player.moveToFrame(index);
            evt.preventDefault();
            evt.stopPropagation();
        };
    }
    
    /*
     * Event handler: document ready.
     *
     * This function adds an event listener to each internal link.
     * Clicking on a link that targets a frame of this document
     * will call sozi.player.moveToFrame().
     */
    function onDocumentReady() {
        var links = window.document.getElementsByTagNameNS(SVG_NS, &quot;a&quot;);
        for (var i = 0; i &lt; links.length; i += 1) {
            var href = links[i].getAttributeNS(XLINK_NS, &quot;href&quot;);
            if (href &amp;&amp; href[0] === &quot;#&quot;) {
                links[i].addEventListener(&quot;click&quot;, getClickHandler(sozi.location.getFrameIndexForHash(href)), false);
            }
        }
    }

    sozi.events.listen(&quot;sozi.document.ready&quot;, onDocumentReady); // @depend events.js
});


/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.location
 * @namespace Manage the URL in the address bar of the browser window.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.location&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    var changedFromWithin = false;

    /*
     * Returns the frame index corresponding to the URL hash.
     *
     * This is a shortcut for sozi.location.getFrameIndexForHash(window.location.hash)
     */
    exports.getFrameIndex = function () {
        return exports.getFrameIndexForHash(window.location.hash);
    };
    
    /*
     * Returns the frame index corresponding to the given URL hash.
     *
     * The URL hash can be either a frame index or a frame id.
     * In the URL, the frame index starts a 1.
     * This method converts it into a 0-based index.
     *
     * If the URL hash is not a positive integer, then 0 is returned.
     * It the URL hash is an integer greater than the last frame index, then
     * the last frame index is returned.
     */
    exports.getFrameIndexForHash = function (hash) {
        var indexOrId = hash ? hash.slice(1) : &quot;1&quot;;
        var index;
        if (/^[0-9]+$/.test(indexOrId)) {
            index = parseInt(indexOrId, 10) - 1;
        }
        else {
            index = sozi.document.getFrameIndexForId(indexOrId);
        }
        
        if (index &lt; 0) {
            return 0;
        }
        else if (index &gt;= sozi.document.frames.length) {
            return sozi.document.frames.length - 1;
        }
        else {
            return index;
        }
    };

    /*
     * Event handler: hash change.
     *
     * This function is called when the URL hash is changed.
     * If the hash was changed manually in the address bar, and if it corresponds to
     * a valid frame number, then the presentation moves to that frame.
     *
     * The hashchange event can be triggered externally, by the user modifying the URL,
     * or internally, by the script modifying window.location.hash.
     */
    function onHashChange() {
        var index = exports.getFrameIndex();
        if (!changedFromWithin) {
            sozi.player.moveToFrame(index);
        }
        changedFromWithin = false;
    }
    
    /*
     * Event handler: frame change.
     *
     * This function is called when the presentation has reached a new frame.
     * The URL hash is set to the current frame id.
     */
    function onFrameChange(index) {
        changedFromWithin = true;
        window.location.hash = &quot;#&quot; + sozi.document.frames[index].id;
    }

    window.addEventListener(&quot;hashchange&quot;, onHashChange, false);
    sozi.events.listen(&quot;sozi.player.framechange&quot;, onFrameChange); // @depend events.js
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.player
 * @namespace Presentation player.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.player&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    var viewPort;
    
    // The animator object used to animate transitions
    var animator;
    
    // The handle returned by setTimeout() for frame timeout
    var nextFrameTimeout;
    
    // Constants: default animation properties
    // for out-of-sequence transitions
    var DEFAULT_DURATION_MS = 500;
    var DEFAULT_ZOOM_PERCENT = -10;
    var DEFAULT_PROFILE = &quot;linear&quot;;
    
    // The source frame index for the current transition
    var sourceFrameIndex = 0;
    
    // The index of the visible frame
    exports.currentFrameIndex = 0;
    
    // The state of the presentation.
    // If false, no automatic transition will be fired.
    var playing = false;
    
    // The state of the current frame.
    // If true, an automatic transition will be fired after the current timeout.
    var waiting = false;

    /*
     * Starts waiting before moving to the next frame.
     *
     * It the current frame has a timeout set, this method
     * will register a timer to move to the next frame automatically
     * after the specified time.
     *
     * If the current frame is the last, the presentation will
     * move to the first frame.
     */
    function waitTimeout() {
        if (sozi.document.frames[exports.currentFrameIndex].timeoutEnable) {
            waiting = true;
            var index = (exports.currentFrameIndex + 1) % sozi.document.frames.length;
            nextFrameTimeout = window.setTimeout(function () {
                    exports.moveToFrame(index);
                },
                sozi.document.frames[exports.currentFrameIndex].timeoutMs
            );
        }
    }

    /*
     * Starts the presentation from the given frame index (0-based).
     *
     * This method sets the &quot;playing&quot; flag, shows the desired frame
     * and calls waitTimeout.
     */
    exports.startFromIndex = function (index) {
        playing = true;
        waiting = false;
        sourceFrameIndex = index;
        exports.currentFrameIndex = index;
        viewPort.showFrame(sozi.document.frames[index]);
        waitTimeout();
    };

    exports.restart = function () {
        exports.startFromIndex(exports.currentFrameIndex);
    };

    /*
     * Stops the presentation.
     *
     * This method clears the &quot;playing&quot;.
     * If the presentation was in &quot;waiting&quot; mode due to a timeout
     * in the current frame, then it stops waiting.
     * The current animation is stopped in its current state.
     */
    exports.stop = function () {
        animator.stop();
        if (waiting) {
            window.clearTimeout(nextFrameTimeout);
            waiting = false;
        }
        playing = false;
        sourceFrameIndex = exports.currentFrameIndex;
    };

    function getZoomData(zoomPercent, s0, s1) {
        var result = {
            ss: ((zoomPercent &lt; 0) ? Math.max(s0, s1) : Math.min(s0, s1)) * (100 - zoomPercent) / 100,
            ts: 0.5,
            k: 0
        };

        if (zoomPercent !== 0) {
            var a = s0 - s1;
            var b = s0 - result.ss;
            var c = s1 - result.ss;

            if (a !== 0) {
                var d = Math.sqrt(b * c);

                var u = (b - d) / a;
                var v = (b + d) / a;

                result.ts = (u &gt; 0 &amp;&amp; u &lt;= 1) ? u : v;
            }

            result.k = b / result.ts / result.ts;
        }

        return result;
    }

    /*
     * Jump to a frame with the given index (0-based).
     *
     * This method does not animate the transition from the current
     * state of the display to the desired frame.
     *
     * The presentation is stopped: if a timeout has been set for the
     * target frame, it will be ignored.
     *
     * The URL hash is set to the given frame index (1-based).
     */
    exports.jumpToFrame = function (index) {
        exports.stop();
        sozi.events.fire(&quot;sozi.player.cleanup&quot;);

        sourceFrameIndex = index;
        exports.currentFrameIndex = index;
        viewPort.showFrame(sozi.document.frames[index]);

        sozi.events.fire(&quot;sozi.player.framechange&quot;, index);
    };

    /*
     * Returns an associative array where keys are layer names
     * and values are objects in the form { initialState: finalState: profile: zoomWidth: zoomHeight:}
     */
    exports.getAnimationData = function (initialState, finalState, zoomPercent, profile, useTransitionPath, reverseTransitionPath) {
        var data = {};
        
        for (var idLayer in initialState) {
            data[idLayer] = {
                initialState: sozi.display.CameraState.instance(),
                finalState: sozi.display.CameraState.instance(),
                useTransitionPath: useTransitionPath,
                reverseTransitionPath: reverseTransitionPath
            };
            
            data[idLayer].profile = profile || finalState[idLayer].transitionProfile;
            data[idLayer].initialState.setAtState(initialState[idLayer]);

            // If the current layer is referenced in final state, copy the final properties
            // else, copy initial state to final state for the current layer.
            if (finalState.hasOwnProperty(idLayer)) {
                data[idLayer].finalState.setAtState(finalState[idLayer]);
            }
            else {
                data[idLayer].finalState.setAtState(initialState[idLayer]);
            }

            // Keep the smallest angle difference between initial state and final state
            // TODO this should be handled in the interpolation function
            if (data[idLayer].finalState.angle - data[idLayer].initialState.angle &gt; 180) {
                data[idLayer].finalState.setRawAngle(data[idLayer].finalState.angle - 360);
            }
            else if (data[idLayer].finalState.angle - data[idLayer].initialState.angle &lt; -180) {
                data[idLayer].initialState.setRawAngle(data[idLayer].initialState.angle - 360);
            }

            var zp = zoomPercent || finalState[idLayer].transitionZoomPercent;
            
            if (zp &amp;&amp; finalState.hasOwnProperty(idLayer)) {
                data[idLayer].zoomWidth = getZoomData(zp,
                    initialState[idLayer].width,
                    finalState[idLayer].width);
                data[idLayer].zoomHeight = getZoomData(zp,
                    initialState[idLayer].height,
                    finalState[idLayer].height);
            }
        }
        return data;
    };
    
    exports.previewFrame = function (index) {
        exports.currentFrameIndex = index;
        animator.start(DEFAULT_DURATION_MS,
            exports.getAnimationData(viewPort.cameras, sozi.document.frames[index].states,
                DEFAULT_ZOOM_PERCENT, sozi.animation.profiles[DEFAULT_PROFILE]),
                false, false);
        sozi.events.fire(&quot;sozi.player.framechange&quot;, index);
    };

    /*
     * Moves to a frame with the given index (0-based).
     *
     * This method animates the transition from the current
     * state of the display to the desired frame.
     *
     * If the given frame index corresponds to the next frame in the list,
     * the transition properties of the next frame are used.
     * Otherwise, default transition properties are used.
     */
    exports.moveToFrame = function (index) {
        if (waiting) {
            window.clearTimeout(nextFrameTimeout);
            waiting = false;
        }

        var durationMs, zoomPercent, profile, useTransitionPath, reverseTransitionPath;
        if (index === (exports.currentFrameIndex - 1) % sozi.document.frames.length) {
            durationMs = sozi.document.frames[exports.currentFrameIndex].transitionDurationMs;
            zoomPercent = undefined; // Set for each layer
            profile = undefined; // Set for each layer
            useTransitionPath = true;
            reverseTransitionPath = true;
        }
        else if (index === (exports.currentFrameIndex + 1) % sozi.document.frames.length) {
            durationMs = sozi.document.frames[index].transitionDurationMs;
            zoomPercent = undefined; // Set for each layer
            profile = undefined; // Set for each layer
            useTransitionPath = true;
            reverseTransitionPath = false;
        }
        else {
            durationMs = DEFAULT_DURATION_MS;
            zoomPercent = DEFAULT_ZOOM_PERCENT;
            profile = sozi.animation.profiles[DEFAULT_PROFILE];
            useTransitionPath = false;
            reverseTransitionPath = false;
        }

        sozi.events.fire(&quot;sozi.player.cleanup&quot;);

        playing = true;
        exports.currentFrameIndex = index;

        animator.start(durationMs, exports.getAnimationData(
            viewPort.cameras, sozi.document.frames[index].states,
            zoomPercent, profile,
            useTransitionPath, reverseTransitionPath));

        sozi.events.fire(&quot;sozi.player.framechange&quot;, index);
    };

    /**
     * Jumps to the first frame of the presentation.
     */
    exports.jumpToFirst = function () {
        exports.jumpToFrame(0);
    };
    
    /**
     * Moves to the first frame of the presentation.
     */
    exports.moveToFirst = function () {
        exports.moveToFrame(0);
    };

    /**
     * Jumps to the previous frame.
     */
    exports.jumpToPrevious = function () {
        var index = exports.currentFrameIndex;
        if (!animator.started || sourceFrameIndex &lt;= exports.currentFrameIndex) {
            index -= 1;
        }
        if (index &gt;= 0) {
            exports.jumpToFrame(index);
        }
    };

    /*
     * Moves to the previous frame.
     */
    exports.moveToPrevious = function () {
        for (var index = exports.currentFrameIndex - 1; index &gt;= 0; index -= 1) {
            var frame = sozi.document.frames[index];
            if (!frame.timeoutEnable || frame.timeoutMs !== 0) {
                exports.moveToFrame(index);
                break;
            }
        }
    };

    /**
     * Jumps to the next frame.
     */
    exports.jumpToNext = function () {
        var index = exports.currentFrameIndex;
        if (!animator.started || sourceFrameIndex &gt;= exports.currentFrameIndex) {
            index += 1;
        }
        if (index &lt; sozi.document.frames.length) {
            exports.jumpToFrame(index);
        }
    };

    /**
     * Moves to the next frame.
     */
    exports.moveToNext = function () {
        if (exports.currentFrameIndex &lt; sozi.document.frames.length - 1 || sozi.document.frames[exports.currentFrameIndex].timeoutEnable) {
            exports.moveToFrame((exports.currentFrameIndex + 1) % sozi.document.frames.length);
        }
    };

    /**
     * Jumps to the last frame of the presentation.
     */
    exports.jumpToLast = function () {
        exports.jumpToFrame(sozi.document.frames.length - 1);
    };

    /**
     * Moves to the last frame of the presentation.
     */
    exports.moveToLast = function () {
        exports.moveToFrame(sozi.document.frames.length - 1);
    };

    /*
     * Restores the current frame.
     *
     * This method restores the display to fit the current frame,
     * e.g. after the display has been zoomed or dragged.
     */
    exports.moveToCurrent = function () {
        exports.moveToFrame(exports.currentFrameIndex);
    };

    /*
     * Shows all the document in the browser window.
     */
    exports.showAll = function () {
        exports.stop();
        sozi.events.fire(&quot;sozi.player.cleanup&quot;);
        animator.start(DEFAULT_DURATION_MS,
            exports.getAnimationData(viewPort.cameras, viewPort.getDocumentState(),
                DEFAULT_ZOOM_PERCENT, sozi.animation.profiles[DEFAULT_PROFILE],
                false, false
            )
        );
    };

    /*
     * Event handler: display ready.
     */
    function onDisplayReady() {
        viewPort = sozi.display.ViewPort.instance(&quot;player&quot;, sozi.document.idLayerList, true);
        
        exports.startFromIndex(sozi.location.getFrameIndex());

        // Hack to fix the blank screen bug in Chrome/Chromium
        // See https://github.com/senshu/Sozi/issues/109
        window.setTimeout(viewPort.bind(viewPort.update), 1);
        
        sozi.events.fire(&quot;sozi.player.ready&quot;);
    }

    // TODO move the zoom code to display.js
    exports.onAnimationStep = function (progress, data) {
        for (var idLayer in data) {
            var camera = viewPort.cameras[idLayer];
            
            camera.interpolate(
                data[idLayer].initialState,
                data[idLayer].finalState,
                data[idLayer].profile(progress),
                data[idLayer].useTransitionPath,
                data[idLayer].reverseTransitionPath
            );

            var ps;
            if (data[idLayer].zoomWidth &amp;&amp; data[idLayer].zoomWidth.k !== 0) {
                ps = progress - data[idLayer].zoomWidth.ts;
                camera.width = data[idLayer].zoomWidth.k * ps * ps + data[idLayer].zoomWidth.ss;
            }

            if (data[idLayer].zoomHeight &amp;&amp; data[idLayer].zoomHeight.k !== 0) {
                ps = progress - data[idLayer].zoomHeight.ts;
                camera.height = data[idLayer].zoomHeight.k * ps * ps + data[idLayer].zoomHeight.ss;
            }

            camera.setClipped(data[idLayer].finalState.clipped);
        }

        viewPort.update();
    };
    
    /**
     * @depend animation.js
     */
    animator = sozi.animation.Animator.instance().augment({
        /*
         * Event handler: animation step.
         *
         * This method is called periodically by animator after the animation
         * has been started, and until the animation time is elapsed.
         *
         * Parameter data provides the following information:
         *    - initialState and finalState contain the geometrical properties of the display
         *      at the start and end of the animation.
         *    - profile is a reference to the speed profile function to use.
         *    - zoomWidth and zoomHeight are the parameters of the zooming polynomial if the current
         *      animation has a non-zero zooming effect.
         *
         * Parameter progress is a float number between 0 (start of the animation)
         * and 1 (end of the animation).
         */
        onStep: function (progress) {
            exports.onAnimationStep(progress, this.data);
        },
        
        /*
         * Event handler: animation done.
         *
         * This method is called by animator when the current animation is finished.
         *
         * If the animation was a transition in the normal course of the presentation,
         * then we call the waitTimeout method to process the timeout property of the current frame.
         */
        onDone: function () {
            for (var idLayer in this.data) {
                viewPort.cameras[idLayer].setAtState(this.data[idLayer].finalState);
            }

            viewPort.update();

            sourceFrameIndex = exports.currentFrameIndex;

            if (playing) {
                waitTimeout();
            }
        }
    });

    sozi.events.listen(&quot;sozi.display.ready&quot;, onDisplayReady); // @depend events.js
});

/*
    @depend framenumber.js
    @depend framelist.js
    @depend actions.js
    @depend player.js
    @depend display.js
    @depend document.js
    @depend location.js
    @depend links.js
*/
</script>
  <style
     ns1:version="13.11-30213629"
     id="sozi-style">/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 * 
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

#sozi-toc text {
   fill: #eff;
   font-family: Verdana, sans-serif;
   font-size: 12pt;
}

#sozi-toc text:hover {
   fill: #0cf;
   cursor: pointer;
}

#sozi-toc text.sozi-toc-current {
   fill: #fa4;
}

#sozi-toc-background {
   stroke: #222;
   stroke-opacity: 0.1;
   stroke-width: 10;
   fill: #222;
   fill-opacity: 0.9;
}

.sozi-toc-arrow {
   fill: #eff;
   fill-opacity: 0.75;
   stroke: none;
}

.sozi-toc-arrow:hover {
   fill: #0cf;
}

#sozi-framenumber circle {
   stroke: #222;
   stroke-opacity: 0.1;
   stroke-width: 4;
   fill: #222;
   fill-opacity: 0.9;
}

#sozi-framenumber text {
   fill: #eff;
   font-family: Verdana, sans-serif;
   font-size: 12pt;
}
</style>
  <ns1:frame
     id="frame7885"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="2"
     ns1:title="Untitled"
     ns1:refid="slide2" />
  <ns1:frame
     id="frame7908"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="17"
     ns1:title="Untitled"
     ns1:refid="slide15" />
  <ns1:frame
     id="frame7900"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="9"
     ns1:title="Untitled"
     ns1:refid="slide8" />
  <ns1:frame
     id="frame7905"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="14"
     ns1:title="Untitled"
     ns1:refid="slide13" />
  <ns1:frame
     id="frame7897"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="7"
     ns1:title="Untitled"
     ns1:refid="slide6" />
  <ns1:frame
     id="frame7895"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="4"
     ns1:title="Untitled"
     ns1:refid="slide4" />
  <ns1:frame
     id="frame7903"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="12"
     ns1:title="Untitled"
     ns1:refid="slide11" />
  <ns1:frame
     id="frame7909"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="18"
     ns1:title="Untitled"
     ns1:refid="slide16" />
  <ns1:frame
     id="frame7901"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="10"
     ns1:title="Untitled"
     ns1:refid="slide9" />
  <ns1:frame
     id="frame7884"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="1"
     ns1:title="Untitled"
     ns1:refid="slide1" />
  <ns1:frame
     id="frame7907"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="15"
     ns1:title="Untitled"
     ns1:refid="slide14" />
  <ns1:frame
     id="frame7899"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="8"
     ns1:title="Untitled"
     ns1:refid="slide7" />
  <ns1:frame
     id="frame7896"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="5"
     ns1:title="Untitled"
     ns1:refid="slide5" />
  <ns1:frame
     id="frame7904"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="13"
     ns1:title="Untitled"
     ns1:refid="slide12" />
  <ns1:frame
     id="frame7894"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="500"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="3"
     ns1:title="Untitled"
     ns1:refid="slide3" />
  <ns1:frame
     id="frame7902"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="11"
     ns1:title="Untitled"
     ns1:refid="slide10" />
  <ns1:frame
     ns1:refid="slide21"
     ns1:title="Untitled"
     ns1:sequence="23"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8362" />
  <ns1:frame
     ns1:refid="slide27"
     ns1:title="Untitled"
     ns1:sequence="29"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8369" />
  <ns1:frame
     ns1:refid="slide22"
     ns1:title="Untitled"
     ns1:sequence="24"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8363" />
  <ns1:frame
     ns1:refid="slide23"
     ns1:title="Untitled"
     ns1:sequence="25"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8364" />
  <ns1:frame
     ns1:refid="slide24"
     ns1:title="Untitled"
     ns1:sequence="26"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8365" />
  <ns1:frame
     ns1:refid="slide25"
     ns1:title="Untitled"
     ns1:sequence="27"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8367" />
  <ns1:frame
     ns1:refid="slide26"
     ns1:title="Untitled"
     ns1:sequence="28"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8368" />
  <ns1:frame
     ns1:refid="slide17"
     ns1:title="Untitled"
     ns1:sequence="19"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8357" />
  <ns1:frame
     ns1:refid="slide18"
     ns1:title="Untitled"
     ns1:sequence="20"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8359" />
  <ns1:frame
     ns1:refid="slide19"
     ns1:title="Untitled"
     ns1:sequence="21"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8360" />
  <ns1:frame
     ns1:refid="slide20"
     ns1:title="Untitled"
     ns1:sequence="22"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame8361" />
  <ns1:frame
     id="frame8627"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="30"
     ns1:title="Untitled"
     ns1:refid="slide28" />
  <ns1:frame
     id="frame9028"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="200.0"
     ns1:timeout-ms="500.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="31"
     ns1:title="Untitled"
     ns1:refid="slide-q" />
  <ns1:frame
     ns1:refid="slide14a"
     ns1:title="Untitled"
     ns1:sequence="16"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="500.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame9826" />
  <ns1:frame
     ns1:refid="slide5a"
     ns1:title="Untitled"
     ns1:sequence="6"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="1000.0"
     ns1:transition-duration-ms="200.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame1316" />
</svg>
